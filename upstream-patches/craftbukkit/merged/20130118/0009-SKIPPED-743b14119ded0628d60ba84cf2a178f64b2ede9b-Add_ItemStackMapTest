From 743b14119ded0628d60ba84cf2a178f64b2ede9b Mon Sep 17 00:00:00 2001
From: Wesley Wolfe <weswolf@aol.com>
Date: Tue, 15 Jan 2013 01:22:53 -0600
Subject: [PATCH] Add ItemStackMapTest

This test was missing from c056293b38cb9a1296937d91746b175252be044a

diff --git a/src/test/java/org/bukkit/craftbukkit/inventory/ItemStackMapTest.java b/src/test/java/org/bukkit/craftbukkit/inventory/ItemStackMapTest.java
new file mode 100644
index 0000000..9c49985
--- /dev/null
+++ b/src/test/java/org/bukkit/craftbukkit/inventory/ItemStackMapTest.java
@@ -0,0 +1,121 @@
+package org.bukkit.craftbukkit.inventory;
+
+import java.util.Arrays;
+import java.util.List;
+
+import org.bukkit.Material;
+import org.bukkit.inventory.ItemStack;
+import org.bukkit.inventory.meta.MapMeta;
+import org.junit.runner.RunWith;
+import org.junit.runners.Parameterized;
+import org.junit.runners.Parameterized.Parameters;
+
+import com.google.common.base.Joiner;
+
+@RunWith(Parameterized.class)
+public class ItemStackMapTest extends ItemStackTest {
+
+    @Parameters(name="[{index}]:{" + NAME_PARAMETER + "}")
+    public static List<Object[]> data() {
+        return StackProvider.compound(operators(), "%s %s", NAME_PARAMETER, Material.MAP);
+    }
+
+    @SuppressWarnings("unchecked")
+    static List<Object[]> operators() {
+        return CompoundOperator.compound(
+            Joiner.on('+'),
+            NAME_PARAMETER,
+            Long.parseLong("10", 2),
+            ItemStackLoreEnchantmentTest.operators(),
+            Arrays.asList(
+                new Object[] {
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            meta.setScaling(true);
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            meta.setScaling(false);
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    "Scale vs. Unscale"
+                },
+                new Object[] {
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            meta.setScaling(true);
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    "Scale vs. Blank"
+                },
+                new Object[] {
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            meta.setScaling(false);
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    "Unscale vs. Blank"
+                },
+                new Object[] {
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            meta.setScaling(true);
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            return cleanStack;
+                        }
+                    },
+                    "Scale vs. None"
+                },
+                new Object[] {
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            MapMeta meta = (MapMeta) cleanStack.getItemMeta();
+                            meta.setScaling(false);
+                            cleanStack.setItemMeta(meta);
+                            return cleanStack;
+                        }
+                    },
+                    new Operator() {
+                        public ItemStack operate(ItemStack cleanStack) {
+                            return cleanStack;
+                        }
+                    },
+                    "Unscale vs. None"
+                }
+            )
+        );
+    }
+}
