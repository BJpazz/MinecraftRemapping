From 0396ba2252511da3aaaa22cbda0374132654bf8f Mon Sep 17 00:00:00 2001
From: LexManos <LexManos@gmail.com>
Date: Sat, 23 Feb 2013 12:02:36 -0800
Subject: [PATCH] ItemStack sensitive versions of Item.getPotionEffect and Item.isPotionIngredient Closes #321


diff --git a/src/minecraft/net/minecraft/inventory/SlotBrewingStandIngredient.java b/src/minecraft/net/minecraft/inventory/SlotBrewingStandIngredient.java
index 4d28d70..b20706a 100644
--- a/src/minecraft/net/minecraft/inventory/SlotBrewingStandIngredient.java
+++ b/src/minecraft/net/minecraft/inventory/SlotBrewingStandIngredient.java
@@ -19,7 +19,7 @@ class SlotBrewingStandIngredient extends Slot
      */
     public boolean isItemValid(ItemStack par1ItemStack)
     {
-        return par1ItemStack != null ? Item.itemsList[par1ItemStack.itemID].isPotionIngredient() : false;
+        return par1ItemStack != null ? Item.itemsList[par1ItemStack.itemID].isPotionIngredient(par1ItemStack) : false;
     }
 
     /**
diff --git a/src/minecraft/net/minecraft/item/Item.java b/src/minecraft/net/minecraft/item/Item.java
index 8a9ccd0..65c1f3f 100644
--- a/src/minecraft/net/minecraft/item/Item.java
+++ b/src/minecraft/net/minecraft/item/Item.java
@@ -572,6 +572,7 @@ public class Item
 
     /**
      * Returns a string representing what this item does to a potion.
+     * @Deprecated In favor of ItemStack sensitive version
      */
     public String getPotionEffect()
     {
@@ -580,6 +581,7 @@ public class Item
 
     /**
      * Returns true if this item serves as a potion ingredient (its ingredient information is not null).
+     * @Deprecated In favor of ItemStack sensitive version
      */
     public boolean isPotionIngredient()
     {
@@ -1051,5 +1053,27 @@ public class Item
 
         return false;
     }
+    
+    /**
+     * ItemStack sensitive version of isPotionIngredient
+     * 
+     * @param stack The item stack
+     * @return True if this stack can be used as a potion ingredient
+     */
+    public boolean isPotionIngredient(ItemStack stack)
+    {
+        return isPotionIngredient();
+    }
+
+    /**
+     * ItemStack sensitive version of getPotionEffect
+     * 
+     * @param stack The item stack
+     * @return A string containing the bit manipulation to apply the the potion.
+     */
+    public String getPotionEffect(ItemStack stack)
+    {
+        return getPotionEffect();
+    }
 
 }
diff --git a/src/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java b/src/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
index b516034..775a9f2 100644
--- a/src/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
+++ b/src/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
@@ -97,7 +97,7 @@ public class TileEntityBrewingStand extends TileEntity implements IInventory, IS
         {
             ItemStack var1 = this.brewingItemStacks[3];
 
-            if (!Item.itemsList[var1.itemID].isPotionIngredient())
+            if (!Item.itemsList[var1.itemID].isPotionIngredient(var1))
             {
                 return false;
             }
@@ -188,7 +188,7 @@ public class TileEntityBrewingStand extends TileEntity implements IInventory, IS
      */
     private int getPotionResult(int par1, ItemStack par2ItemStack)
     {
-        return par2ItemStack == null ? par1 : (Item.itemsList[par2ItemStack.itemID].isPotionIngredient() ? PotionHelper.applyIngredient(par1, Item.itemsList[par2ItemStack.itemID].getPotionEffect()) : par1);
+        return par2ItemStack == null ? par1 : (Item.itemsList[par2ItemStack.itemID].isPotionIngredient(par2ItemStack) ? PotionHelper.applyIngredient(par1, Item.itemsList[par2ItemStack.itemID].getPotionEffect(par2ItemStack)) : par1);
     }
 
     /**
