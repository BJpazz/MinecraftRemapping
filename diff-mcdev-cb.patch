Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft: org
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/server: MinecraftServer$1.class
Binary files mcp-mcdev/net/minecraft/server/MinecraftServer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/server/MinecraftServer.class differ
Only in mcp-mcdev/net/minecraft/server: MinecraftServer.java
Binary files mcp-mcdev/net/minecraft/src/AABBPool.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/AABBPool.class differ
diff -ur mcp-mcdev/net/minecraft/src/AABBPool.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/AABBPool.java
--- mcp-mcdev/net/minecraft/src/AABBPool.java	2012-11-29 21:15:28.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/AABBPool.java	2012-11-29 21:42:02.000000000 -0800
@@ -20,17 +20,21 @@
    }
 
    public AxisAlignedBB addOrModifyAABBInPool(double var1, double var3, double var5, double var7, double var9, double var11) {
-      AxisAlignedBB var13;
-      if(this.nextPoolIndex >= this.listAABB.size()) {
-         var13 = new AxisAlignedBB(var1, var3, var5, var7, var9, var11);
-         this.listAABB.add(var13);
+      if(this.numCleans == 0) {
+         return new AxisAlignedBB(var1, var3, var5, var7, var9, var11);
       } else {
-         var13 = (AxisAlignedBB)this.listAABB.get(this.nextPoolIndex);
-         var13.setBounds(var1, var3, var5, var7, var9, var11);
-      }
+         AxisAlignedBB var13;
+         if(this.nextPoolIndex >= this.listAABB.size()) {
+            var13 = new AxisAlignedBB(var1, var3, var5, var7, var9, var11);
+            this.listAABB.add(var13);
+         } else {
+            var13 = (AxisAlignedBB)this.listAABB.get(this.nextPoolIndex);
+            var13.setBounds(var1, var3, var5, var7, var9, var11);
+         }
 
-      ++this.nextPoolIndex;
-      return var13;
+         ++this.nextPoolIndex;
+         return var13;
+      }
    }
 
    public void cleanPool() {
@@ -38,15 +42,15 @@
          this.maxPoolIndex = this.nextPoolIndex;
       }
 
-      if(this.numCleans++ == this.maxNumCleans) {
-         int var1 = Math.max(this.maxPoolIndex, this.listAABB.size() - this.numEntriesToRemove);
-
-         while(this.listAABB.size() > var1) {
-            this.listAABB.remove(var1);
+      if((this.numCleans++ & 255) == 0) {
+         int var1 = this.listAABB.size() - (this.listAABB.size() >> 3);
+         if(var1 > this.maxPoolIndex) {
+            for(int var2 = this.listAABB.size() - 1; var2 > var1; --var2) {
+               this.listAABB.remove(var2);
+            }
          }
 
          this.maxPoolIndex = 0;
-         this.numCleans = 0;
       }
 
       this.nextPoolIndex = 0;
Binary files mcp-mcdev/net/minecraft/src/AnvilChunkLoader.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/AnvilChunkLoader.class differ
diff -ur mcp-mcdev/net/minecraft/src/AnvilChunkLoader.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/AnvilChunkLoader.java
--- mcp-mcdev/net/minecraft/src/AnvilChunkLoader.java	2012-11-29 21:15:28.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/AnvilChunkLoader.java	2012-11-29 21:42:02.000000000 -0800
@@ -3,6 +3,7 @@
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.File;
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -17,6 +18,7 @@
 import net.minecraft.src.ExtendedBlockStorage;
 import net.minecraft.src.IChunkLoader;
 import net.minecraft.src.IThreadedFileIO;
+import net.minecraft.src.MinecraftException;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.NextTickListEntry;
@@ -42,11 +44,12 @@
       NBTTagCompound var4 = null;
       ChunkCoordIntPair var5 = new ChunkCoordIntPair(var2, var3);
       Object var6 = this.syncLockObject;
+      Object var7 = this.syncLockObject;
       synchronized(this.syncLockObject) {
          if(this.pendingAnvilChunksCoordinates.contains(var5)) {
-            for(int var7 = 0; var7 < this.chunksToRemove.size(); ++var7) {
-               if(((AnvilChunkLoaderPending)this.chunksToRemove.get(var7)).chunkCoordinate.equals(var5)) {
-                  var4 = ((AnvilChunkLoaderPending)this.chunksToRemove.get(var7)).nbtTags;
+            for(int var8 = 0; var8 < this.chunksToRemove.size(); ++var8) {
+               if(((AnvilChunkLoaderPending)this.chunksToRemove.get(var8)).chunkCoordinate.equals(var5)) {
+                  var4 = ((AnvilChunkLoaderPending)this.chunksToRemove.get(var8)).nbtTags;
                   break;
                }
             }
@@ -54,12 +57,12 @@
       }
 
       if(var4 == null) {
-         DataInputStream var10 = RegionFileCache.getChunkInputStream(this.chunkSaveLocation, var2, var3);
-         if(var10 == null) {
+         DataInputStream var11 = RegionFileCache.getChunkInputStream(this.chunkSaveLocation, var2, var3);
+         if(var11 == null) {
             return null;
          }
 
-         var4 = CompressedStreamTools.read(var10);
+         var4 = CompressedStreamTools.read(var11);
       }
 
       return this.checkedReadChunkFromNBT(var1, var2, var3, var4);
@@ -76,8 +79,8 @@
          Chunk var5 = this.readChunkFromNBT(var1, var4.getCompoundTag("Level"));
          if(!var5.isAtLocation(var2, var3)) {
             System.out.println("Chunk file at " + var2 + "," + var3 + " is in the wrong location; relocating. (Expected " + var2 + ", " + var3 + ", got " + var5.xPosition + ", " + var5.zPosition + ")");
-            var4.setInteger("xPos", var2);
-            var4.setInteger("zPos", var3);
+            var4.getCompoundTag("Level").setInteger("xPos", var2);
+            var4.getCompoundTag("Level").setInteger("zPos", var3);
             var5 = this.readChunkFromNBT(var1, var4.getCompoundTag("Level"));
          }
 
@@ -86,7 +89,11 @@
    }
 
    public void saveChunk(World var1, Chunk var2) {
-      var1.checkSessionLock();
+      try {
+         var1.checkSessionLock();
+      } catch (MinecraftException var6) {
+         var6.printStackTrace();
+      }
 
       try {
          NBTTagCompound var3 = new NBTTagCompound();
@@ -102,11 +109,12 @@
 
    protected void func_75824_a(ChunkCoordIntPair var1, NBTTagCompound var2) {
       Object var3 = this.syncLockObject;
+      Object var4 = this.syncLockObject;
       synchronized(this.syncLockObject) {
          if(this.pendingAnvilChunksCoordinates.contains(var1)) {
-            for(int var4 = 0; var4 < this.chunksToRemove.size(); ++var4) {
-               if(((AnvilChunkLoaderPending)this.chunksToRemove.get(var4)).chunkCoordinate.equals(var1)) {
-                  this.chunksToRemove.set(var4, new AnvilChunkLoaderPending(var1, var2));
+            for(int var5 = 0; var5 < this.chunksToRemove.size(); ++var5) {
+               if(((AnvilChunkLoaderPending)this.chunksToRemove.get(var5)).chunkCoordinate.equals(var1)) {
+                  this.chunksToRemove.set(var5, new AnvilChunkLoaderPending(var1, var2));
                   return;
                }
             }
@@ -121,6 +129,7 @@
    public boolean writeNextIO() {
       AnvilChunkLoaderPending var1 = null;
       Object var2 = this.syncLockObject;
+      Object var3 = this.syncLockObject;
       synchronized(this.syncLockObject) {
          if(this.chunksToRemove.isEmpty()) {
             return false;
@@ -133,15 +142,15 @@
       if(var1 != null) {
          try {
             this.writeChunkNBTTags(var1);
-         } catch (Exception var4) {
-            var4.printStackTrace();
+         } catch (Exception var5) {
+            var5.printStackTrace();
          }
       }
 
       return true;
    }
 
-   private void writeChunkNBTTags(AnvilChunkLoaderPending var1) {
+   public void writeChunkNBTTags(AnvilChunkLoaderPending var1) throws IOException {
       DataOutputStream var2 = RegionFileCache.getChunkOutputStream(this.chunkSaveLocation, var1.chunkCoordinate.chunkXPos, var1.chunkCoordinate.chunkZPos);
       CompressedStreamTools.write(var1.nbtTags, var2);
       var2.close();
@@ -185,52 +194,52 @@
       var3.setTag("Sections", var5);
       var3.setByteArray("Biomes", var1.getBiomeArray());
       var1.hasEntities = false;
-      NBTTagList var17 = new NBTTagList();
+      NBTTagList var19 = new NBTTagList();
 
-      Iterator var19;
+      Iterator var20;
       for(var7 = 0; var7 < var1.entityLists.length; ++var7) {
-         var19 = var1.entityLists[var7].iterator();
+         var20 = var1.entityLists[var7].iterator();
 
-         while(var19.hasNext()) {
-            Entity var21 = (Entity)var19.next();
+         while(var20.hasNext()) {
+            Entity var11 = (Entity)var20.next();
             var1.hasEntities = true;
             var10 = new NBTTagCompound();
-            if(var21.addEntityID(var10)) {
-               var17.appendTag(var10);
+            if(var11.addEntityID(var10)) {
+               var19.appendTag(var10);
             }
          }
       }
 
-      var3.setTag("Entities", var17);
-      NBTTagList var18 = new NBTTagList();
-      var19 = var1.chunkTileEntityMap.values().iterator();
+      var3.setTag("Entities", var19);
+      NBTTagList var21 = new NBTTagList();
+      var20 = var1.chunkTileEntityMap.values().iterator();
 
-      while(var19.hasNext()) {
-         TileEntity var22 = (TileEntity)var19.next();
+      while(var20.hasNext()) {
+         TileEntity var12 = (TileEntity)var20.next();
          var10 = new NBTTagCompound();
-         var22.writeToNBT(var10);
-         var18.appendTag(var10);
+         var12.writeToNBT(var10);
+         var21.appendTag(var10);
       }
 
-      var3.setTag("TileEntities", var18);
-      List var20 = var2.getPendingBlockUpdates(var1, false);
-      if(var20 != null) {
-         long var11 = var2.getTotalWorldTime();
-         NBTTagList var13 = new NBTTagList();
-         Iterator var14 = var20.iterator();
-
-         while(var14.hasNext()) {
-            NextTickListEntry var15 = (NextTickListEntry)var14.next();
-            NBTTagCompound var16 = new NBTTagCompound();
-            var16.setInteger("i", var15.blockID);
-            var16.setInteger("x", var15.xCoord);
-            var16.setInteger("y", var15.yCoord);
-            var16.setInteger("z", var15.zCoord);
-            var16.setInteger("t", (int)(var15.scheduledTime - var11));
-            var13.appendTag(var16);
+      var3.setTag("TileEntities", var21);
+      List var22 = var2.getPendingBlockUpdates(var1, false);
+      if(var22 != null) {
+         long var13 = var2.getTotalWorldTime();
+         NBTTagList var15 = new NBTTagList();
+         Iterator var16 = var22.iterator();
+
+         while(var16.hasNext()) {
+            NextTickListEntry var17 = (NextTickListEntry)var16.next();
+            NBTTagCompound var18 = new NBTTagCompound();
+            var18.setInteger("i", var17.blockID);
+            var18.setInteger("x", var17.xCoord);
+            var18.setInteger("y", var17.yCoord);
+            var18.setInteger("z", var17.zCoord);
+            var18.setInteger("t", (int)(var17.scheduledTime - var13));
+            var15.appendTag(var18);
          }
 
-         var3.setTag("TileTicks", var13);
+         var3.setTag("TileTicks", var15);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/BehaviorBucketEmptyDispense.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorBucketEmptyDispense.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorBucketEmptyDispense.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorBucketEmptyDispense.java
--- mcp-mcdev/net/minecraft/src/BehaviorBucketEmptyDispense.java	2012-11-29 21:15:28.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorBucketEmptyDispense.java	2012-11-29 21:42:02.000000000 -0800
@@ -2,18 +2,22 @@
 
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BehaviorDefaultDispenseItem;
+import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.TileEntityDispenser;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorBucketEmptyDispense extends BehaviorDefaultDispenseItem {
 
    private final BehaviorDefaultDispenseItem defaultItemDispenseBehavior;
-   // $FF: synthetic field
    final MinecraftServer mcServer;
 
 
@@ -41,14 +45,34 @@
          var10 = Item.bucketLava;
       }
 
-      var4.setBlockWithNotify(var5, var6, var7, 0);
-      if(--var2.stackSize == 0) {
-         var2.itemID = var10.shiftedIndex;
-         var2.stackSize = 1;
-      } else if(((TileEntityDispenser)var1.func_82619_j()).func_70360_a(new ItemStack(var10)) < 0) {
-         this.defaultItemDispenseBehavior.dispense(var1, new ItemStack(var10));
+      org.bukkit.block.Block var11 = var4.getWorld().getBlockAt(var5, var6, var7);
+      CraftItemStack var12 = (new CraftItemStack(var2)).clone();
+      BlockDispenseEvent var13 = new BlockDispenseEvent(var11, var12, new Vector(0, 0, 0));
+      if(!BlockDispenser.eventFired) {
+         var4.getServer().getPluginManager().callEvent(var13);
       }
 
-      return var2;
+      if(var13.isCancelled()) {
+         return var2;
+      } else {
+         if(!var13.getItem().equals(var12)) {
+            ItemStack var14 = CraftItemStack.createNMSItemStack(var13.getItem());
+            IBehaviorDispenseItem var15 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var14.getItem());
+            if(var15 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var15 != this) {
+               var15.dispense(var1, var14);
+               return var2;
+            }
+         }
+
+         var4.setBlockWithNotify(var5, var6, var7, 0);
+         if(--var2.stackSize == 0) {
+            var2.itemID = var10.shiftedIndex;
+            var2.stackSize = 1;
+         } else if(((TileEntityDispenser)var1.func_82619_j()).func_70360_a(new ItemStack(var10)) < 0) {
+            this.defaultItemDispenseBehavior.dispense(var1, new ItemStack(var10));
+         }
+
+         return var2;
+      }
    }
 }
Binary files mcp-mcdev/net/minecraft/src/BehaviorBucketFullDispense.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorBucketFullDispense.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorBucketFullDispense.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorBucketFullDispense.java
--- mcp-mcdev/net/minecraft/src/BehaviorBucketFullDispense.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorBucketFullDispense.java	2012-11-29 21:42:02.000000000 -0800
@@ -2,16 +2,22 @@
 
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BehaviorDefaultDispenseItem;
+import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemBucket;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.TileEntityDispenser;
+import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorBucketFullDispense extends BehaviorDefaultDispenseItem {
 
    private final BehaviorDefaultDispenseItem defaultItemDispenseBehavior;
-   // $FF: synthetic field
    final MinecraftServer mcServer;
 
 
@@ -26,9 +32,42 @@
       int var5 = var1.getYInt();
       int var6 = var1.getZInt();
       EnumFacing var7 = EnumFacing.func_82600_a(var1.func_82620_h());
+      World var8 = var1.getWorld();
+      int var9 = var4 + var7.func_82601_c();
+      int var10 = var6 + var7.func_82599_e();
+      if(var8.isAirBlock(var9, var5, var10) || var8.getBlockMaterial(var9, var5, var10).isSolid()) {
+         org.bukkit.block.Block var11 = var8.getWorld().getBlockAt(var4, var5, var6);
+         CraftItemStack var12 = (new CraftItemStack(var2)).clone();
+         BlockDispenseEvent var13 = new BlockDispenseEvent(var11, var12, new Vector(0, 0, 0));
+         if(!BlockDispenser.eventFired) {
+            var8.getServer().getPluginManager().callEvent(var13);
+         }
+
+         if(var13.isCancelled()) {
+            return var2;
+         }
+
+         if(!var13.getItem().equals(var12)) {
+            ItemStack var14 = CraftItemStack.createNMSItemStack(var13.getItem());
+            IBehaviorDispenseItem var15 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var14.getItem());
+            if(var15 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var15 != this) {
+               var15.dispense(var1, var14);
+               return var2;
+            }
+         }
+
+         var3 = (ItemBucket)CraftItemStack.createNMSItemStack(var13.getItem()).getItem();
+      }
+
       if(var3.tryPlaceContainedLiquid(var1.getWorld(), (double)var4, (double)var5, (double)var6, var4 + var7.func_82601_c(), var5, var6 + var7.func_82599_e())) {
-         var2.itemID = Item.bucketEmpty.shiftedIndex;
-         var2.stackSize = 1;
+         Item var16 = Item.bucketEmpty;
+         if(--var2.stackSize == 0) {
+            var2.itemID = var16.shiftedIndex;
+            var2.stackSize = 1;
+         } else if(((TileEntityDispenser)var1.func_82619_j()).func_70360_a(new ItemStack(var16)) < 0) {
+            this.defaultItemDispenseBehavior.dispense(var1, new ItemStack(var16));
+         }
+
          return var2;
       } else {
          return this.defaultItemDispenseBehavior.dispense(var1, var2);
Binary files mcp-mcdev/net/minecraft/src/BehaviorDefaultDispenseItem.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDefaultDispenseItem.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorDefaultDispenseItem.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDefaultDispenseItem.java
--- mcp-mcdev/net/minecraft/src/BehaviorDefaultDispenseItem.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDefaultDispenseItem.java	2012-11-29 21:42:02.000000000 -0800
@@ -8,6 +8,9 @@
 import net.minecraft.src.IPosition;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorDefaultDispenseItem implements IBehaviorDispenseItem {
 
@@ -22,23 +25,55 @@
       EnumFacing var3 = EnumFacing.func_82600_a(var1.func_82620_h());
       IPosition var4 = BlockDispenser.func_82525_a(var1);
       ItemStack var5 = var2.splitStack(1);
-      func_82486_a(var1.getWorld(), var5, 6, var3, var4);
+      if(!a(var1.getWorld(), var5, 6, var3, var1)) {
+         ++var2.stackSize;
+      }
+
       return var2;
    }
 
-   public static void func_82486_a(World var0, ItemStack var1, int var2, EnumFacing var3, IPosition var4) {
-      double var5 = var4.getX();
-      double var7 = var4.getY();
-      double var9 = var4.getZ();
-      EntityItem var11 = new EntityItem(var0, var5, var7 - 0.3D, var9, var1);
-      double var12 = var0.rand.nextDouble() * 0.1D + 0.2D;
-      var11.motionX = (double)var3.func_82601_c() * var12;
-      var11.motionY = 0.20000000298023224D;
-      var11.motionZ = (double)var3.func_82599_e() * var12;
-      var11.motionX += var0.rand.nextGaussian() * 0.007499999832361937D * (double)var2;
-      var11.motionY += var0.rand.nextGaussian() * 0.007499999832361937D * (double)var2;
-      var11.motionZ += var0.rand.nextGaussian() * 0.007499999832361937D * (double)var2;
-      var0.spawnEntityInWorld(var11);
+   public static boolean a(World var0, ItemStack var1, int var2, EnumFacing var3, IBlockSource var4) {
+      IPosition var5 = BlockDispenser.func_82525_a(var4);
+      double var6 = var5.getX();
+      double var8 = var5.getY();
+      double var10 = var5.getZ();
+      EntityItem var12 = new EntityItem(var0, var6, var8 - 0.3D, var10, var1);
+      double var13 = var0.rand.nextDouble() * 0.1D + 0.2D;
+      var12.motionX = (double)var3.func_82601_c() * var13;
+      var12.motionY = 0.20000000298023224D;
+      var12.motionZ = (double)var3.func_82599_e() * var13;
+      var12.motionX += var0.rand.nextGaussian() * 0.007499999832361937D * (double)var2;
+      var12.motionY += var0.rand.nextGaussian() * 0.007499999832361937D * (double)var2;
+      var12.motionZ += var0.rand.nextGaussian() * 0.007499999832361937D * (double)var2;
+      org.bukkit.block.Block var15 = var0.getWorld().getBlockAt(var4.getXInt(), var4.getYInt(), var4.getZInt());
+      CraftItemStack var16 = (new CraftItemStack(var1)).clone();
+      BlockDispenseEvent var17 = new BlockDispenseEvent(var15, var16, new Vector(var12.motionX, var12.motionY, var12.motionZ));
+      if(!BlockDispenser.eventFired) {
+         var0.getServer().getPluginManager().callEvent(var17);
+      }
+
+      if(var17.isCancelled()) {
+         return false;
+      } else {
+         var12.item = CraftItemStack.createNMSItemStack(var17.getItem());
+         var12.motionX = var17.getVelocity().getX();
+         var12.motionY = var17.getVelocity().getY();
+         var12.motionZ = var17.getVelocity().getZ();
+         if(var17.getItem().equals(var16)) {
+            var0.spawnEntityInWorld(var12);
+            return true;
+         } else {
+            ItemStack var18 = CraftItemStack.createNMSItemStack(var17.getItem());
+            IBehaviorDispenseItem var19 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var18.getItem());
+            if(var19 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var19.getClass() != BehaviorDefaultDispenseItem.class) {
+               var19.dispense(var4, var18);
+            } else {
+               var0.spawnEntityInWorld(var12);
+            }
+
+            return false;
+         }
+      }
    }
 
    protected void playDispenseSound(IBlockSource var1) {
Binary files mcp-mcdev/net/minecraft/src/BehaviorDispenseBoat.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseBoat.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorDispenseBoat.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseBoat.java
--- mcp-mcdev/net/minecraft/src/BehaviorDispenseBoat.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseBoat.java	2012-11-29 21:42:02.000000000 -0800
@@ -2,17 +2,21 @@
 
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BehaviorDefaultDispenseItem;
+import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.EntityBoat;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorDispenseBoat extends BehaviorDefaultDispenseItem {
 
    private final BehaviorDefaultDispenseItem defaultItemDispenseBehavior;
-   // $FF: synthetic field
    final MinecraftServer mcServer;
 
 
@@ -42,10 +46,32 @@
          var15 = 0.0D;
       }
 
-      EntityBoat var17 = new EntityBoat(var4, var5, var7 + var15, var9);
-      var4.spawnEntityInWorld(var17);
-      var2.splitStack(1);
-      return var2;
+      ItemStack var17 = var2.splitStack(1);
+      org.bukkit.block.Block var18 = var4.getWorld().getBlockAt(var1.getXInt(), var1.getYInt(), var1.getZInt());
+      CraftItemStack var19 = (new CraftItemStack(var17)).clone();
+      BlockDispenseEvent var20 = new BlockDispenseEvent(var18, var19, new Vector(var5, var7 + var15, var9));
+      if(!BlockDispenser.eventFired) {
+         var4.getServer().getPluginManager().callEvent(var20);
+      }
+
+      if(var20.isCancelled()) {
+         ++var2.stackSize;
+         return var2;
+      } else {
+         if(!var20.getItem().equals(var19)) {
+            ++var2.stackSize;
+            ItemStack var21 = CraftItemStack.createNMSItemStack(var20.getItem());
+            IBehaviorDispenseItem var22 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var21.getItem());
+            if(var22 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var22 != this) {
+               var22.dispense(var1, var21);
+               return var2;
+            }
+         }
+
+         EntityBoat var23 = new EntityBoat(var4, var20.getVelocity().getX(), var20.getVelocity().getY(), var20.getVelocity().getZ());
+         var4.spawnEntityInWorld(var23);
+         return var2;
+      }
    }
 
    protected void playDispenseSound(IBlockSource var1) {
Binary files mcp-mcdev/net/minecraft/src/BehaviorDispenseFireball.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseFireball.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorDispenseFireball.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseFireball.java
--- mcp-mcdev/net/minecraft/src/BehaviorDispenseFireball.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseFireball.java	2012-11-29 21:42:02.000000000 -0800
@@ -6,14 +6,17 @@
 import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.EntitySmallFireball;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.IPosition;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorDispenseFireball extends BehaviorDefaultDispenseItem {
 
-   // $FF: synthetic field
    final MinecraftServer mcServer;
 
 
@@ -32,9 +35,31 @@
       double var13 = var12.nextGaussian() * 0.05D + (double)var3.func_82601_c();
       double var15 = var12.nextGaussian() * 0.05D;
       double var17 = var12.nextGaussian() * 0.05D + (double)var3.func_82599_e();
-      var11.spawnEntityInWorld(new EntitySmallFireball(var11, var5, var7, var9, var13, var15, var17));
-      var2.splitStack(1);
-      return var2;
+      ItemStack var19 = var2.splitStack(1);
+      org.bukkit.block.Block var20 = var11.getWorld().getBlockAt(var1.getXInt(), var1.getYInt(), var1.getZInt());
+      CraftItemStack var21 = (new CraftItemStack(var19)).clone();
+      BlockDispenseEvent var22 = new BlockDispenseEvent(var20, var21, new Vector(var13, var15, var17));
+      if(!BlockDispenser.eventFired) {
+         var11.getServer().getPluginManager().callEvent(var22);
+      }
+
+      if(var22.isCancelled()) {
+         ++var2.stackSize;
+         return var2;
+      } else {
+         if(!var22.getItem().equals(var21)) {
+            ++var2.stackSize;
+            ItemStack var23 = CraftItemStack.createNMSItemStack(var22.getItem());
+            IBehaviorDispenseItem var24 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var23.getItem());
+            if(var24 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var24 != this) {
+               var24.dispense(var1, var23);
+               return var2;
+            }
+         }
+
+         var11.spawnEntityInWorld(new EntitySmallFireball(var11, var5, var7, var9, var22.getVelocity().getX(), var22.getVelocity().getY(), var22.getVelocity().getZ()));
+         return var2;
+      }
    }
 
    protected void playDispenseSound(IBlockSource var1) {
Binary files mcp-mcdev/net/minecraft/src/BehaviorDispenseMinecart.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseMinecart.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorDispenseMinecart.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseMinecart.java
--- mcp-mcdev/net/minecraft/src/BehaviorDispenseMinecart.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorDispenseMinecart.java	2012-11-29 21:42:02.000000000 -0800
@@ -2,18 +2,22 @@
 
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BehaviorDefaultDispenseItem;
+import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.BlockRail;
 import net.minecraft.src.EntityMinecart;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.ItemMinecart;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorDispenseMinecart extends BehaviorDefaultDispenseItem {
 
    private final BehaviorDefaultDispenseItem defaultItemDispenseBehavior;
-   // $FF: synthetic field
    final MinecraftServer mcServer;
 
 
@@ -43,10 +47,33 @@
          var15 = -1.0D;
       }
 
-      EntityMinecart var17 = new EntityMinecart(var4, var5, var7 + var15, var9, ((ItemMinecart)var2.getItem()).minecartType);
-      var4.spawnEntityInWorld(var17);
-      var2.splitStack(1);
-      return var2;
+      ItemStack var17 = var2.splitStack(1);
+      org.bukkit.block.Block var18 = var4.getWorld().getBlockAt(var1.getXInt(), var1.getYInt(), var1.getZInt());
+      CraftItemStack var19 = (new CraftItemStack(var17)).clone();
+      BlockDispenseEvent var20 = new BlockDispenseEvent(var18, var19, new Vector(var5, var7 + var15, var9));
+      if(!BlockDispenser.eventFired) {
+         var4.getServer().getPluginManager().callEvent(var20);
+      }
+
+      if(var20.isCancelled()) {
+         ++var2.stackSize;
+         return var2;
+      } else {
+         if(!var20.getItem().equals(var19)) {
+            ++var2.stackSize;
+            ItemStack var21 = CraftItemStack.createNMSItemStack(var20.getItem());
+            IBehaviorDispenseItem var22 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var21.getItem());
+            if(var22 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var22 != this) {
+               var22.dispense(var1, var21);
+               return var2;
+            }
+         }
+
+         var17 = CraftItemStack.createNMSItemStack(var20.getItem());
+         EntityMinecart var23 = new EntityMinecart(var4, var20.getVelocity().getX(), var20.getVelocity().getY(), var20.getVelocity().getZ(), ((ItemMinecart)var17.getItem()).minecartType);
+         var4.spawnEntityInWorld(var23);
+         return var2;
+      }
    }
 
    protected void playDispenseSound(IBlockSource var1) {
Binary files mcp-mcdev/net/minecraft/src/BehaviorMobEggDispense.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorMobEggDispense.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorMobEggDispense.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorMobEggDispense.java
--- mcp-mcdev/net/minecraft/src/BehaviorMobEggDispense.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorMobEggDispense.java	2012-11-29 21:42:01.000000000 -0800
@@ -2,14 +2,19 @@
 
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BehaviorDefaultDispenseItem;
+import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.ItemMonsterPlacer;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public class BehaviorMobEggDispense extends BehaviorDefaultDispenseItem {
 
-   // $FF: synthetic field
    final MinecraftServer mcServer;
 
 
@@ -22,9 +27,33 @@
       double var4 = var1.getX() + (double)var3.func_82601_c();
       double var6 = (double)((float)var1.getYInt() + 0.2F);
       double var8 = var1.getZ() + (double)var3.func_82599_e();
-      ItemMonsterPlacer.spawnCreature(var1.getWorld(), var2.getItemDamage(), var4, var6, var8);
-      var2.splitStack(1);
-      return var2;
+      World var10 = var1.getWorld();
+      ItemStack var11 = var2.splitStack(1);
+      org.bukkit.block.Block var12 = var10.getWorld().getBlockAt(var1.getXInt(), var1.getYInt(), var1.getZInt());
+      CraftItemStack var13 = (new CraftItemStack(var11)).clone();
+      BlockDispenseEvent var14 = new BlockDispenseEvent(var12, var13, new Vector(var4, var6, var8));
+      if(!BlockDispenser.eventFired) {
+         var10.getServer().getPluginManager().callEvent(var14);
+      }
+
+      if(var14.isCancelled()) {
+         ++var2.stackSize;
+         return var2;
+      } else {
+         if(!var14.getItem().equals(var13)) {
+            ++var2.stackSize;
+            ItemStack var15 = CraftItemStack.createNMSItemStack(var14.getItem());
+            IBehaviorDispenseItem var16 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var15.getItem());
+            if(var16 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var16 != this) {
+               var16.dispense(var1, var15);
+               return var2;
+            }
+         }
+
+         var11 = CraftItemStack.createNMSItemStack(var14.getItem());
+         ItemMonsterPlacer.spawnCreature(var1.getWorld(), var11.getItemDamage(), var14.getVelocity().getX(), var14.getVelocity().getY(), var14.getVelocity().getZ());
+         return var2;
+      }
    }
 
    protected void playDispenseSound(IBlockSource var1) {
Binary files mcp-mcdev/net/minecraft/src/BehaviorProjectileDispense.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorProjectileDispense.class differ
diff -ur mcp-mcdev/net/minecraft/src/BehaviorProjectileDispense.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorProjectileDispense.java
--- mcp-mcdev/net/minecraft/src/BehaviorProjectileDispense.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BehaviorProjectileDispense.java	2012-11-29 21:42:01.000000000 -0800
@@ -4,11 +4,15 @@
 import net.minecraft.src.BlockDispenser;
 import net.minecraft.src.Entity;
 import net.minecraft.src.EnumFacing;
+import net.minecraft.src.IBehaviorDispenseItem;
 import net.minecraft.src.IBlockSource;
 import net.minecraft.src.IPosition;
 import net.minecraft.src.IProjectile;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.util.Vector;
 
 public abstract class BehaviorProjectileDispense extends BehaviorDefaultDispenseItem {
 
@@ -17,10 +21,32 @@
       IPosition var4 = BlockDispenser.func_82525_a(var1);
       EnumFacing var5 = EnumFacing.func_82600_a(var1.func_82620_h());
       IProjectile var6 = this.getProjectileEntity(var3, var4);
-      var6.setThrowableHeading((double)var5.func_82601_c(), 0.10000000149011612D, (double)var5.func_82599_e(), this.func_82500_b(), this.func_82498_a());
-      var3.spawnEntityInWorld((Entity)var6);
-      var2.splitStack(1);
-      return var2;
+      ItemStack var7 = var2.splitStack(1);
+      org.bukkit.block.Block var8 = var3.getWorld().getBlockAt(var1.getXInt(), var1.getYInt(), var1.getZInt());
+      CraftItemStack var9 = (new CraftItemStack(var7)).clone();
+      BlockDispenseEvent var10 = new BlockDispenseEvent(var8, var9, new Vector((double)var5.func_82601_c(), 0.10000000149011612D, (double)var5.func_82599_e()));
+      if(!BlockDispenser.eventFired) {
+         var3.getServer().getPluginManager().callEvent(var10);
+      }
+
+      if(var10.isCancelled()) {
+         ++var2.stackSize;
+         return var2;
+      } else {
+         if(!var10.getItem().equals(var9)) {
+            ++var2.stackSize;
+            ItemStack var11 = CraftItemStack.createNMSItemStack(var10.getItem());
+            IBehaviorDispenseItem var12 = (IBehaviorDispenseItem)BlockDispenser.dispenseBehaviorRegistry.func_82594_a(var11.getItem());
+            if(var12 != IBehaviorDispenseItem.itemDispenseBehaviorProvider && var12 != this) {
+               var12.dispense(var1, CraftItemStack.createNMSItemStack(var10.getItem()));
+               return var2;
+            }
+         }
+
+         var6.setThrowableHeading(var10.getVelocity().getX(), var10.getVelocity().getY(), var10.getVelocity().getZ(), this.func_82500_b(), this.func_82498_a());
+         var3.spawnEntityInWorld((Entity)var6);
+         return var2;
+      }
    }
 
    protected void playDispenseSound(IBlockSource var1) {
Binary files mcp-mcdev/net/minecraft/src/Block.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Block.class differ
diff -ur mcp-mcdev/net/minecraft/src/Block.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Block.java
--- mcp-mcdev/net/minecraft/src/Block.java	2012-11-29 21:15:27.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Block.java	2012-11-29 21:42:01.000000000 -0800
@@ -505,15 +505,15 @@
          int var8 = this.quantityDroppedWithBonus(var7, var1.rand);
 
          for(int var9 = 0; var9 < var8; ++var9) {
-            if(var1.rand.nextFloat() <= var6) {
+            if(var1.rand.nextFloat() < var6) {
                int var10 = this.idDropped(var5, var1.rand, var7);
                if(var10 > 0) {
                   this.dropBlockAsItem_do(var1, var2, var3, var4, new ItemStack(var10, 1, this.damageDropped(var5)));
                }
             }
          }
-
       }
+
    }
 
    protected void dropBlockAsItem_do(World var1, int var2, int var3, int var4, ItemStack var5) {
@@ -526,6 +526,7 @@
          var13.delayBeforeCanPickup = 10;
          var1.spawnEntityInWorld(var13);
       }
+
    }
 
    protected void dropXpOnBlockBreak(World var1, int var2, int var3, int var4, int var5) {
@@ -810,6 +811,10 @@
       return true;
    }
 
+   public int getExpDrop(World var1, int var2, int var3) {
+      return 0;
+   }
+
    static {
       Item.itemsList[cloth.blockID] = (new ItemCloth(cloth.blockID - 256)).setItemName("cloth");
       Item.itemsList[wood.blockID] = (new ItemMultiTextureTile(wood.blockID - 256, wood, BlockLog.woodType)).setItemName("log");
@@ -830,6 +835,9 @@
       Item.itemsList[pistonStickyBase.blockID] = new ItemPiston(pistonStickyBase.blockID - 256);
       Item.itemsList[cobblestoneWall.blockID] = (new ItemMultiTextureTile(cobblestoneWall.blockID - 256, cobblestoneWall, BlockWall.types)).setItemName("cobbleWall");
       Item.itemsList[anvil.blockID] = (new ItemAnvilBlock(anvil)).setItemName("anvil");
+      Item.itemsList[mushroomCapBrown.blockID] = new ItemColored(mushroomCapBrown.blockID - 256, true);
+      Item.itemsList[mushroomCapRed.blockID] = new ItemColored(mushroomCapRed.blockID - 256, true);
+      Item.itemsList[mobSpawner.blockID] = new ItemColored(mobSpawner.blockID - 256, true);
 
       for(int var0 = 0; var0 < 256; ++var0) {
          if(blocksList[var0] != null) {
Binary files mcp-mcdev/net/minecraft/src/BlockButton.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockButton.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockButton.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockButton.java
--- mcp-mcdev/net/minecraft/src/BlockButton.java	2012-11-29 21:15:25.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockButton.java	2012-11-29 21:41:59.000000000 -0800
@@ -11,6 +11,7 @@
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockButton extends Block {
 
@@ -146,12 +147,21 @@
       if(var12 == 0) {
          return true;
       } else {
-         var1.setBlockMetadataWithNotify(var2, var3, var4, var11 + var12);
-         var1.markBlockRangeForRenderUpdate(var2, var3, var4, var2, var3, var4);
-         var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, 0.6F);
-         this.func_82536_d(var1, var2, var3, var4, var11);
-         var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, this.tickRate());
-         return true;
+         org.bukkit.block.Block var13 = var1.getWorld().getBlockAt(var2, var3, var4);
+         int var14 = var12 != 8?1:0;
+         int var15 = var12 == 8?1:0;
+         BlockRedstoneEvent var16 = new BlockRedstoneEvent(var13, var14, var15);
+         var1.getServer().getPluginManager().callEvent(var16);
+         if(var16.getNewCurrent() > 0 != (var12 == 8)) {
+            return true;
+         } else {
+            var1.setBlockMetadataWithNotify(var2, var3, var4, var11 + var12);
+            var1.markBlockRangeForRenderUpdate(var2, var3, var4, var2, var3, var4);
+            var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, 0.6F);
+            this.func_82536_d(var1, var2, var3, var4, var11);
+            var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, this.tickRate());
+            return true;
+         }
       }
    }
 
@@ -186,18 +196,25 @@
       if(!var1.isRemote) {
          int var6 = var1.getBlockMetadata(var2, var3, var4);
          if((var6 & 8) != 0) {
+            org.bukkit.block.Block var7 = var1.getWorld().getBlockAt(var2, var3, var4);
+            BlockRedstoneEvent var8 = new BlockRedstoneEvent(var7, 1, 0);
+            var1.getServer().getPluginManager().callEvent(var8);
+            if(var8.getNewCurrent() > 0) {
+               return;
+            }
+
             if(this.sensible) {
                this.func_82535_o(var1, var2, var3, var4);
             } else {
                var1.setBlockMetadataWithNotify(var2, var3, var4, var6 & 7);
-               int var7 = var6 & 7;
-               this.func_82536_d(var1, var2, var3, var4, var7);
+               int var9 = var6 & 7;
+               this.func_82536_d(var1, var2, var3, var4, var9);
                var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, 0.5F);
                var1.markBlockRangeForRenderUpdate(var2, var3, var4, var2, var3, var4);
             }
-
          }
       }
+
    }
 
    public void setBlockBoundsForItemRender() {
@@ -208,13 +225,10 @@
    }
 
    public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
-      if(!var1.isRemote) {
-         if(this.sensible) {
-            if((var1.getBlockMetadata(var2, var3, var4) & 8) == 0) {
-               this.func_82535_o(var1, var2, var3, var4);
-            }
-         }
+      if(!var1.isRemote && this.sensible && (var1.getBlockMetadata(var2, var3, var4) & 8) == 0) {
+         this.func_82535_o(var1, var2, var3, var4);
       }
+
    }
 
    private void func_82535_o(World var1, int var2, int var3, int var4) {
Binary files mcp-mcdev/net/minecraft/src/BlockCactus.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCactus.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockCactus.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCactus.java
--- mcp-mcdev/net/minecraft/src/BlockCactus.java	2012-11-29 21:15:25.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCactus.java	2012-11-29 21:41:59.000000000 -0800
@@ -6,8 +6,12 @@
 import net.minecraft.src.CreativeTabs;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityLiving;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityDamageByBlockEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
 
 public class BlockCactus extends Block {
 
@@ -27,7 +31,7 @@
          if(var6 < 3) {
             int var7 = var1.getBlockMetadata(var2, var3, var4);
             if(var7 == 15) {
-               var1.setBlockWithNotify(var2, var3 + 1, var4, this.blockID);
+               CraftEventFactory.handleBlockGrowEvent(var1, var2, var3 + 1, var4, this.blockID, 0);
                var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
             } else {
                var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + 1);
@@ -86,6 +90,18 @@
    }
 
    public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
-      var5.attackEntityFrom(DamageSource.cactus, 1);
+      if(var5 instanceof EntityLiving) {
+         org.bukkit.block.Block var6 = var1.getWorld().getBlockAt(var2, var3, var4);
+         org.bukkit.entity.Entity var7 = var5 == null?null:var5.getBukkitEntity();
+         EntityDamageByBlockEvent var8 = new EntityDamageByBlockEvent(var6, var7, DamageCause.CONTACT, 1);
+         var1.getServer().getPluginManager().callEvent(var8);
+         if(!var8.isCancelled()) {
+            var7.setLastDamageCause(var8);
+            var5.attackEntityFrom(DamageSource.cactus, var8.getDamage());
+         }
+
+      } else {
+         var5.attackEntityFrom(DamageSource.cactus, 1);
+      }
    }
 }
Binary files mcp-mcdev/net/minecraft/src/BlockCommandBlock.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCommandBlock.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockCommandBlock.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCommandBlock.java
--- mcp-mcdev/net/minecraft/src/BlockCommandBlock.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCommandBlock.java	2012-11-29 21:41:58.000000000 -0800
@@ -7,6 +7,7 @@
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.TileEntityCommandBlock;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockCommandBlock extends BlockContainer {
 
@@ -23,10 +24,15 @@
          boolean var6 = var1.isBlockIndirectlyGettingPowered(var2, var3, var4);
          int var7 = var1.getBlockMetadata(var2, var3, var4);
          boolean var8 = (var7 & 1) != 0;
-         if(var6 && !var8) {
+         org.bukkit.block.Block var9 = var1.getWorld().getBlockAt(var2, var3, var4);
+         int var10 = var8?1:0;
+         int var11 = var6?1:0;
+         BlockRedstoneEvent var12 = new BlockRedstoneEvent(var9, var10, var11);
+         var1.getServer().getPluginManager().callEvent(var12);
+         if(var12.getNewCurrent() > 0 && var12.getOldCurrent() <= 0) {
             var1.setBlockMetadata(var2, var3, var4, var7 | 1);
             var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, this.tickRate());
-         } else if(!var6 && var8) {
+         } else if(var12.getNewCurrent() <= 0 && var12.getOldCurrent() > 0) {
             var1.setBlockMetadata(var2, var3, var4, var7 & -2);
          }
       }
Binary files mcp-mcdev/net/minecraft/src/BlockCrops.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCrops.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockCrops.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCrops.java
--- mcp-mcdev/net/minecraft/src/BlockCrops.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockCrops.java	2012-11-29 21:41:58.000000000 -0800
@@ -7,6 +7,7 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockCrops extends BlockFlower {
 
@@ -35,7 +36,7 @@
             float var7 = this.getGrowthRate(var1, var2, var3, var4);
             if(var5.nextInt((int)(25.0F / var7) + 1) == 0) {
                ++var6;
-               var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+               CraftEventFactory.handleBlockGrowEvent(var1, var2, var3, var4, this.blockID, var6);
             }
          }
       }
@@ -108,18 +109,16 @@
 
    public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6, int var7) {
       super.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6, 0);
-      if(!var1.isRemote) {
-         if(var5 >= 7) {
-            int var8 = 3 + var7;
-
-            for(int var9 = 0; var9 < var8; ++var9) {
-               if(var1.rand.nextInt(15) <= var5) {
-                  this.dropBlockAsItem_do(var1, var2, var3, var4, new ItemStack(this.getSeedItem(), 1, 0));
-               }
+      if(!var1.isRemote && var5 >= 7) {
+         int var8 = 3 + var7;
+
+         for(int var9 = 0; var9 < var8; ++var9) {
+            if(var1.rand.nextInt(15) <= var5) {
+               this.dropBlockAsItem_do(var1, var2, var3, var4, new ItemStack(this.getSeedItem(), 1, 0));
             }
          }
-
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/BlockDetectorRail.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDetectorRail.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockDetectorRail.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDetectorRail.java
--- mcp-mcdev/net/minecraft/src/BlockDetectorRail.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDetectorRail.java	2012-11-29 21:41:58.000000000 -0800
@@ -8,6 +8,7 @@
 import net.minecraft.src.EntityMinecart;
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockDetectorRail extends BlockRail {
 
@@ -31,6 +32,7 @@
             this.setStateIfMinecartInteractsWithRail(var1, var2, var3, var4, var6);
          }
       }
+
    }
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
@@ -40,6 +42,7 @@
             this.setStateIfMinecartInteractsWithRail(var1, var2, var3, var4, var6);
          }
       }
+
    }
 
    public boolean isProvidingWeakPower(IBlockAccess var1, int var2, int var3, int var4, int var5) {
@@ -59,6 +62,13 @@
          var7 = true;
       }
 
+      if(var6 != var7) {
+         org.bukkit.block.Block var10 = var1.getWorld().getBlockAt(var2, var3, var4);
+         BlockRedstoneEvent var11 = new BlockRedstoneEvent(var10, var6?1:0, var7?1:0);
+         var1.getServer().getPluginManager().callEvent(var11);
+         var7 = var11.getNewCurrent() > 0;
+      }
+
       if(var7 && !var6) {
          var1.setBlockMetadataWithNotify(var2, var3, var4, var5 | 8);
          var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
Binary files mcp-mcdev/net/minecraft/src/BlockDispenser.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDispenser.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockDispenser.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDispenser.java
--- mcp-mcdev/net/minecraft/src/BlockDispenser.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDispenser.java	2012-11-29 21:41:58.000000000 -0800
@@ -28,6 +28,7 @@
 
    public static final IRegistry dispenseBehaviorRegistry = new RegistryDefaulted(new BehaviorDefaultDispenseItem());
    private Random random = new Random();
+   public static boolean eventFired = false;
 
 
    protected BlockDispenser(int var1) {
@@ -74,6 +75,7 @@
 
          var1.setBlockMetadataWithNotify(var2, var3, var4, var9);
       }
+
    }
 
    public int getBlockTextureFromSide(int var1) {
@@ -93,7 +95,7 @@
       }
    }
 
-   private void dispense(World var1, int var2, int var3, int var4) {
+   public void dispense(World var1, int var2, int var3, int var4) {
       BlockSourceImpl var5 = new BlockSourceImpl(var1, var2, var3, var4);
       TileEntityDispenser var6 = (TileEntityDispenser)var5.func_82619_j();
       if(var6 != null) {
@@ -105,11 +107,12 @@
             IBehaviorDispenseItem var9 = (IBehaviorDispenseItem)dispenseBehaviorRegistry.func_82594_a(var8.getItem());
             if(var9 != IBehaviorDispenseItem.itemDispenseBehaviorProvider) {
                ItemStack var10 = var9.dispense(var5, var8);
+               eventFired = false;
                var6.setInventorySlotContents(var7, var10.stackSize == 0?null:var10);
             }
          }
-
       }
+
    }
 
    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
Binary files mcp-mcdev/net/minecraft/src/BlockDoor.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDoor.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockDoor.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDoor.java
--- mcp-mcdev/net/minecraft/src/BlockDoor.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDoor.java	2012-11-29 21:41:58.000000000 -0800
@@ -10,6 +10,8 @@
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockDoor extends Block {
 
@@ -147,6 +149,7 @@
 
          var1.playAuxSFXAtEntity((EntityPlayer)null, 1003, var2, var3, var4, 0);
       }
+
    }
 
    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
@@ -170,20 +173,27 @@
             if(!var1.isRemote) {
                this.dropBlockAsItem(var1, var2, var3, var4, var6, 0);
             }
-         } else {
-            boolean var8 = var1.isBlockIndirectlyGettingPowered(var2, var3, var4) || var1.isBlockIndirectlyGettingPowered(var2, var3 + 1, var4);
-            if((var8 || var5 > 0 && Block.blocksList[var5].canProvidePower()) && var5 != this.blockID) {
-               this.onPoweredBlockChange(var1, var2, var3, var4, var8);
-            }
-         }
-      } else {
-         if(var1.getBlockId(var2, var3 - 1, var4) != this.blockID) {
-            var1.setBlockWithNotify(var2, var3, var4, 0);
-         }
-
-         if(var5 > 0 && var5 != this.blockID) {
-            this.onNeighborBlockChange(var1, var2, var3 - 1, var4, var5);
-         }
+         } else if(var5 > 0 && Block.blocksList[var5].canProvidePower()) {
+            CraftWorld var8 = var1.getWorld();
+            org.bukkit.block.Block var9 = var8.getBlockAt(var2, var3, var4);
+            org.bukkit.block.Block var10 = var8.getBlockAt(var2, var3 + 1, var4);
+            int var11 = var9.getBlockPower();
+            int var12 = var10.getBlockPower();
+            if(var12 > var11) {
+               var11 = var12;
+            }
+
+            int var13 = (var1.getBlockMetadata(var2, var3, var4) & 4) > 0?15:0;
+            if(var13 == 0 ^ var11 == 0) {
+               BlockRedstoneEvent var14 = new BlockRedstoneEvent(var9, var13, var11);
+               var1.getServer().getPluginManager().callEvent(var14);
+               this.onPoweredBlockChange(var1, var2, var3, var4, var14.getNewCurrent() > 0);
+            }
+         }
+      } else if(var1.getBlockId(var2, var3 - 1, var4) != this.blockID) {
+         var1.setBlockWithNotify(var2, var3, var4, 0);
+      } else if(var5 > 0 && var5 != this.blockID) {
+         this.onNeighborBlockChange(var1, var2, var3 - 1, var4, var5);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/BlockDragonEgg.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDragonEgg.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockDragonEgg.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDragonEgg.java
--- mcp-mcdev/net/minecraft/src/BlockDragonEgg.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockDragonEgg.java	2012-11-29 21:41:58.000000000 -0800
@@ -7,6 +7,8 @@
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.event.block.BlockFromToEvent;
 
 public class BlockDragonEgg extends Block {
 
@@ -30,7 +32,7 @@
       if(BlockSand.canFallBelow(var1, var2, var3 - 1, var4) && var3 >= 0) {
          byte var5 = 32;
          if(!BlockSand.fallInstantly && var1.checkChunksExist(var2 - var5, var3 - var5, var4 - var5, var2 + var5, var3 + var5, var4 + var5)) {
-            EntityFallingSand var6 = new EntityFallingSand(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), this.blockID);
+            EntityFallingSand var6 = new EntityFallingSand(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), this.blockID, var1.getBlockMetadata(var2, var3, var4));
             var1.spawnEntityInWorld(var6);
          } else {
             var1.setBlockWithNotify(var2, var3, var4, 0);
@@ -63,29 +65,40 @@
             int var7 = var3 + var1.rand.nextInt(8) - var1.rand.nextInt(8);
             int var8 = var4 + var1.rand.nextInt(16) - var1.rand.nextInt(16);
             if(var1.getBlockId(var6, var7, var8) == 0) {
+               org.bukkit.block.Block var9 = var1.getWorld().getBlockAt(var2, var3, var4);
+               org.bukkit.block.Block var10 = var1.getWorld().getBlockAt(var6, var7, var8);
+               BlockFromToEvent var11 = new BlockFromToEvent(var9, var10);
+               Bukkit.getPluginManager().callEvent(var11);
+               if(var11.isCancelled()) {
+                  return;
+               }
+
+               var6 = var11.getToBlock().getX();
+               var7 = var11.getToBlock().getY();
+               var8 = var11.getToBlock().getZ();
                if(!var1.isRemote) {
                   var1.setBlockAndMetadataWithNotify(var6, var7, var8, this.blockID, var1.getBlockMetadata(var2, var3, var4));
                   var1.setBlockWithNotify(var2, var3, var4, 0);
                } else {
-                  short var9 = 128;
+                  short var12 = 128;
 
-                  for(int var10 = 0; var10 < var9; ++var10) {
-                     double var11 = var1.rand.nextDouble();
-                     float var13 = (var1.rand.nextFloat() - 0.5F) * 0.2F;
-                     float var14 = (var1.rand.nextFloat() - 0.5F) * 0.2F;
-                     float var15 = (var1.rand.nextFloat() - 0.5F) * 0.2F;
-                     double var16 = (double)var6 + (double)(var2 - var6) * var11 + (var1.rand.nextDouble() - 0.5D) * 1.0D + 0.5D;
-                     double var18 = (double)var7 + (double)(var3 - var7) * var11 + var1.rand.nextDouble() * 1.0D - 0.5D;
-                     double var20 = (double)var8 + (double)(var4 - var8) * var11 + (var1.rand.nextDouble() - 0.5D) * 1.0D + 0.5D;
-                     var1.spawnParticle("portal", var16, var18, var20, (double)var13, (double)var14, (double)var15);
+                  for(int var13 = 0; var13 < var12; ++var13) {
+                     double var14 = var1.rand.nextDouble();
+                     float var16 = (var1.rand.nextFloat() - 0.5F) * 0.2F;
+                     float var17 = (var1.rand.nextFloat() - 0.5F) * 0.2F;
+                     float var18 = (var1.rand.nextFloat() - 0.5F) * 0.2F;
+                     double var19 = (double)var6 + (double)(var2 - var6) * var14 + (var1.rand.nextDouble() - 0.5D) * 1.0D + 0.5D;
+                     double var21 = (double)var7 + (double)(var3 - var7) * var14 + var1.rand.nextDouble() * 1.0D - 0.5D;
+                     double var23 = (double)var8 + (double)(var4 - var8) * var14 + (var1.rand.nextDouble() - 0.5D) * 1.0D + 0.5D;
+                     var1.spawnParticle("portal", var19, var21, var23, (double)var16, (double)var17, (double)var18);
                   }
                }
 
                return;
             }
          }
-
       }
+
    }
 
    public int tickRate() {
Binary files mcp-mcdev/net/minecraft/src/BlockFarmland.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFarmland.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockFarmland.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFarmland.java
--- mcp-mcdev/net/minecraft/src/BlockFarmland.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFarmland.java	2012-11-29 21:41:58.000000000 -0800
@@ -4,8 +4,14 @@
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.Block;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.entity.EntityInteractEvent;
 
 public class BlockFarmland extends Block {
 
@@ -39,6 +45,11 @@
          if(var6 > 0) {
             var1.setBlockMetadataWithNotify(var2, var3, var4, var6 - 1);
          } else if(!this.isCropsNearby(var1, var2, var3, var4)) {
+            org.bukkit.block.Block var7 = var1.getWorld().getBlockAt(var2, var3, var4);
+            if(CraftEventFactory.callBlockFadeEvent(var7, Block.dirt.blockID).isCancelled()) {
+               return;
+            }
+
             var1.setBlockWithNotify(var2, var3, var4, Block.dirt.blockID);
          }
       } else {
@@ -49,6 +60,18 @@
 
    public void onFallenUpon(World var1, int var2, int var3, int var4, Entity var5, float var6) {
       if(!var1.isRemote && var1.rand.nextFloat() < var6 - 0.5F) {
+         Object var7;
+         if(var5 instanceof EntityPlayer) {
+            var7 = CraftEventFactory.callPlayerInteractEvent((EntityPlayer)var5, Action.PHYSICAL, var2, var3, var4, -1, (ItemStack)null);
+         } else {
+            var7 = new EntityInteractEvent(var5.getBukkitEntity(), var1.getWorld().getBlockAt(var2, var3, var4));
+            var1.getServer().getPluginManager().callEvent((EntityInteractEvent)var7);
+         }
+
+         if(((Cancellable)var7).isCancelled()) {
+            return;
+         }
+
          var1.setBlockWithNotify(var2, var3, var4, Block.dirt.blockID);
       }
 
Binary files mcp-mcdev/net/minecraft/src/BlockFire.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFire.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockFire.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFire.java
--- mcp-mcdev/net/minecraft/src/BlockFire.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFire.java	2012-11-29 21:41:58.000000000 -0800
@@ -7,6 +7,16 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldProviderEnd;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockBurnEvent;
+import org.bukkit.event.block.BlockIgniteEvent;
+import org.bukkit.event.block.BlockSpreadEvent;
+import org.bukkit.event.block.BlockIgniteEvent.IgniteCause;
+import org.bukkit.material.MaterialData;
 
 public class BlockFire extends Block {
 
@@ -74,11 +84,11 @@
          }
 
          if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+            this.fireExtinguished(var1, var2, var3, var4);
          }
 
          if(!var6 && var1.isRaining() && (var1.canLightningStrikeAt(var2, var3, var4) || var1.canLightningStrikeAt(var2 - 1, var3, var4) || var1.canLightningStrikeAt(var2 + 1, var3, var4) || var1.canLightningStrikeAt(var2, var3, var4 - 1) || var1.canLightningStrikeAt(var2, var3, var4 + 1))) {
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+            this.fireExtinguished(var1, var2, var3, var4);
          } else {
             int var7 = var1.getBlockMetadata(var2, var3, var4);
             if(var7 < 15) {
@@ -90,9 +100,8 @@
                if(!var1.doesBlockHaveSolidTopSurface(var2, var3 - 1, var4) || var7 > 3) {
                   var1.setBlockWithNotify(var2, var3, var4, 0);
                }
-
             } else if(!var6 && !this.canBlockCatchFire(var1, var2, var3 - 1, var4) && var7 == 15 && var5.nextInt(4) == 0) {
-               var1.setBlockWithNotify(var2, var3, var4, 0);
+               this.fireExtinguished(var1, var2, var3, var4);
             } else {
                boolean var8 = var1.isBlockHighHumidity(var2, var3, var4);
                byte var9 = 0;
@@ -106,40 +115,58 @@
                this.tryToCatchBlockOnFire(var1, var2, var3 + 1, var4, 250 + var9, var5, var7);
                this.tryToCatchBlockOnFire(var1, var2, var3, var4 - 1, 300 + var9, var5, var7);
                this.tryToCatchBlockOnFire(var1, var2, var3, var4 + 1, 300 + var9, var5, var7);
-
-               for(int var10 = var2 - 1; var10 <= var2 + 1; ++var10) {
-                  for(int var11 = var4 - 1; var11 <= var4 + 1; ++var11) {
-                     for(int var12 = var3 - 1; var12 <= var3 + 4; ++var12) {
-                        if(var10 != var2 || var12 != var3 || var11 != var4) {
-                           int var13 = 100;
-                           if(var12 > var3 + 1) {
-                              var13 += (var12 - (var3 + 1)) * 100;
+               CraftServer var10 = var1.getServer();
+               CraftWorld var11 = var1.getWorld();
+               IgniteCause var12 = IgniteCause.SPREAD;
+               org.bukkit.block.Block var13 = var11.getBlockAt(var2, var3, var4);
+
+               for(int var14 = var2 - 1; var14 <= var2 + 1; ++var14) {
+                  for(int var15 = var4 - 1; var15 <= var4 + 1; ++var15) {
+                     for(int var16 = var3 - 1; var16 <= var3 + 4; ++var16) {
+                        if(var14 != var2 || var16 != var3 || var15 != var4) {
+                           int var17 = 100;
+                           if(var16 > var3 + 1) {
+                              var17 += (var16 - (var3 + 1)) * 100;
                            }
 
-                           int var14 = this.getChanceOfNeighborsEncouragingFire(var1, var10, var12, var11);
-                           if(var14 > 0) {
-                              int var15 = (var14 + 40 + var1.difficultySetting * 7) / (var7 + 30);
+                           int var18 = this.getChanceOfNeighborsEncouragingFire(var1, var14, var16, var15);
+                           if(var18 > 0) {
+                              int var19 = (var18 + 40 + var1.difficultySetting * 7) / (var7 + 30);
                               if(var8) {
-                                 var15 /= 2;
+                                 var19 /= 2;
                               }
 
-                              if(var15 > 0 && var5.nextInt(var13) <= var15 && (!var1.isRaining() || !var1.canLightningStrikeAt(var10, var12, var11)) && !var1.canLightningStrikeAt(var10 - 1, var12, var4) && !var1.canLightningStrikeAt(var10 + 1, var12, var11) && !var1.canLightningStrikeAt(var10, var12, var11 - 1) && !var1.canLightningStrikeAt(var10, var12, var11 + 1)) {
-                                 int var16 = var7 + var5.nextInt(5) / 4;
-                                 if(var16 > 15) {
-                                    var16 = 15;
+                              if(var19 > 0 && var5.nextInt(var17) <= var19 && (!var1.isRaining() || !var1.canLightningStrikeAt(var14, var16, var15)) && !var1.canLightningStrikeAt(var14 - 1, var16, var4) && !var1.canLightningStrikeAt(var14 + 1, var16, var15) && !var1.canLightningStrikeAt(var14, var16, var15 - 1) && !var1.canLightningStrikeAt(var14, var16, var15 + 1)) {
+                                 int var20 = var7 + var5.nextInt(5) / 4;
+                                 if(var20 > 15) {
+                                    var20 = 15;
                                  }
 
-                                 var1.setBlockAndMetadataWithNotify(var10, var12, var11, this.blockID, var16);
+                                 org.bukkit.block.Block var21 = var11.getBlockAt(var14, var16, var15);
+                                 if(var21.getTypeId() != Block.fire.blockID) {
+                                    BlockIgniteEvent var22 = new BlockIgniteEvent(var21, var12, (Player)null);
+                                    var10.getPluginManager().callEvent(var22);
+                                    if(!var22.isCancelled()) {
+                                       BlockState var23 = var11.getBlockAt(var14, var16, var15).getState();
+                                       var23.setTypeId(this.blockID);
+                                       var23.setData(new MaterialData(this.blockID, (byte)var20));
+                                       BlockSpreadEvent var24 = new BlockSpreadEvent(var23.getBlock(), var13, var23);
+                                       var10.getPluginManager().callEvent(var24);
+                                       if(!var24.isCancelled()) {
+                                          var23.update(true);
+                                       }
+                                    }
+                                 }
                               }
                            }
                         }
                      }
                   }
                }
-
             }
          }
       }
+
    }
 
    public boolean func_82506_l() {
@@ -150,13 +177,20 @@
       int var8 = this.abilityToCatchFire[var1.getBlockId(var2, var3, var4)];
       if(var6.nextInt(var5) < var8) {
          boolean var9 = var1.getBlockId(var2, var3, var4) == Block.tnt.blockID;
+         org.bukkit.block.Block var10 = var1.getWorld().getBlockAt(var2, var3, var4);
+         BlockBurnEvent var11 = new BlockBurnEvent(var10);
+         var1.getServer().getPluginManager().callEvent(var11);
+         if(var11.isCancelled()) {
+            return;
+         }
+
          if(var6.nextInt(var7 + 10) < 5 && !var1.canLightningStrikeAt(var2, var3, var4)) {
-            int var10 = var7 + var6.nextInt(5) / 4;
-            if(var10 > 15) {
-               var10 = 15;
+            int var12 = var7 + var6.nextInt(5) / 4;
+            if(var12 > 15) {
+               var12 = 15;
             }
 
-            var1.setBlockAndMetadataWithNotify(var2, var3, var4, this.blockID, var10);
+            var1.setBlockAndMetadataWithNotify(var2, var3, var4, this.blockID, var12);
          } else {
             var1.setBlockWithNotify(var2, var3, var4, 0);
          }
@@ -206,7 +240,7 @@
 
    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
       if(!var1.doesBlockHaveSolidTopSurface(var2, var3 - 1, var4) && !this.canNeighborBurn(var1, var2, var3, var4)) {
-         var1.setBlockWithNotify(var2, var3, var4, 0);
+         this.fireExtinguished(var1, var2, var3, var4);
       }
 
    }
@@ -214,10 +248,18 @@
    public void onBlockAdded(World var1, int var2, int var3, int var4) {
       if(var1.provider.dimensionId > 0 || var1.getBlockId(var2, var3 - 1, var4) != Block.obsidian.blockID || !Block.portal.tryToCreatePortal(var1, var2, var3, var4)) {
          if(!var1.doesBlockHaveSolidTopSurface(var2, var3 - 1, var4) && !this.canNeighborBurn(var1, var2, var3, var4)) {
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+            this.fireExtinguished(var1, var2, var3, var4);
          } else {
             var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, this.tickRate() + var1.rand.nextInt(10));
          }
       }
+
+   }
+
+   private void fireExtinguished(World var1, int var2, int var3, int var4) {
+      if(!CraftEventFactory.callBlockFadeEvent(var1.getWorld().getBlockAt(var2, var3, var4), 0).isCancelled()) {
+         var1.setBlockWithNotify(var2, var3, var4, 0);
+      }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/BlockFlowing.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFlowing.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockFlowing.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFlowing.java
--- mcp-mcdev/net/minecraft/src/BlockFlowing.java	2012-11-29 21:15:24.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockFlowing.java	2012-11-29 21:41:57.000000000 -0800
@@ -6,6 +6,10 @@
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.block.BlockFace;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.block.BlockFromToEvent;
 
 public class BlockFlowing extends BlockFluid {
 
@@ -29,58 +33,62 @@
    }
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
-      int var6 = this.getFlowDecay(var1, var2, var3, var4);
-      byte var7 = 1;
+      CraftWorld var6 = var1.getWorld();
+      CraftServer var7 = var1.getServer();
+      org.bukkit.block.Block var8 = var6 == null?null:var6.getBlockAt(var2, var3, var4);
+      int var9 = this.getFlowDecay(var1, var2, var3, var4);
+      byte var10 = 1;
       if(this.blockMaterial == Material.lava && !var1.provider.isHellWorld) {
-         var7 = 2;
+         var10 = 2;
       }
 
-      boolean var8 = true;
-      int var10;
-      if(var6 > 0) {
-         byte var9 = -100;
+      boolean var11 = true;
+      int var14;
+      int var15;
+      if(var9 > 0) {
+         byte var12 = -100;
          this.numAdjacentSources = 0;
-         int var12 = this.getSmallestFlowDecay(var1, var2 - 1, var3, var4, var9);
-         var12 = this.getSmallestFlowDecay(var1, var2 + 1, var3, var4, var12);
-         var12 = this.getSmallestFlowDecay(var1, var2, var3, var4 - 1, var12);
-         var12 = this.getSmallestFlowDecay(var1, var2, var3, var4 + 1, var12);
-         var10 = var12 + var7;
-         if(var10 >= 8 || var12 < 0) {
-            var10 = -1;
+         int var13 = this.getSmallestFlowDecay(var1, var2 - 1, var3, var4, var12);
+         var13 = this.getSmallestFlowDecay(var1, var2 + 1, var3, var4, var13);
+         var13 = this.getSmallestFlowDecay(var1, var2, var3, var4 - 1, var13);
+         var13 = this.getSmallestFlowDecay(var1, var2, var3, var4 + 1, var13);
+         var14 = var13 + var10;
+         if(var14 >= 8 || var13 < 0) {
+            var14 = -1;
          }
 
          if(this.getFlowDecay(var1, var2, var3 + 1, var4) >= 0) {
-            int var11 = this.getFlowDecay(var1, var2, var3 + 1, var4);
-            if(var11 >= 8) {
-               var10 = var11;
+            var15 = this.getFlowDecay(var1, var2, var3 + 1, var4);
+            if(var15 >= 8) {
+               var14 = var15;
             } else {
-               var10 = var11 + 8;
+               var14 = var15 + 8;
             }
          }
 
          if(this.numAdjacentSources >= 2 && this.blockMaterial == Material.water) {
             if(var1.getBlockMaterial(var2, var3 - 1, var4).isSolid()) {
-               var10 = 0;
+               var14 = 0;
             } else if(var1.getBlockMaterial(var2, var3 - 1, var4) == this.blockMaterial && var1.getBlockMetadata(var2, var3, var4) == 0) {
-               var10 = 0;
+               var14 = 0;
             }
          }
 
-         if(this.blockMaterial == Material.lava && var6 < 8 && var10 < 8 && var10 > var6 && var5.nextInt(4) != 0) {
-            var10 = var6;
-            var8 = false;
+         if(this.blockMaterial == Material.lava && var9 < 8 && var14 < 8 && var14 > var9 && var5.nextInt(4) != 0) {
+            var14 = var9;
+            var11 = false;
          }
 
-         if(var10 == var6) {
-            if(var8) {
+         if(var14 == var9) {
+            if(var11) {
                this.updateFlow(var1, var2, var3, var4);
             }
          } else {
-            var6 = var10;
-            if(var10 < 0) {
+            var9 = var14;
+            if(var14 < 0) {
                var1.setBlockWithNotify(var2, var3, var4, 0);
             } else {
-               var1.setBlockMetadataWithNotify(var2, var3, var4, var10);
+               var1.setBlockMetadataWithNotify(var2, var3, var4, var14);
                var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, this.tickRate());
                var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
             }
@@ -90,42 +98,54 @@
       }
 
       if(this.liquidCanDisplaceBlock(var1, var2, var3 - 1, var4)) {
-         if(this.blockMaterial == Material.lava && var1.getBlockMaterial(var2, var3 - 1, var4) == Material.water) {
-            var1.setBlockWithNotify(var2, var3 - 1, var4, Block.stone.blockID);
-            this.triggerLavaMixEffects(var1, var2, var3 - 1, var4);
-            return;
+         BlockFromToEvent var21 = new BlockFromToEvent(var8, BlockFace.DOWN);
+         if(var7 != null) {
+            var7.getPluginManager().callEvent(var21);
          }
 
-         if(var6 >= 8) {
-            this.flowIntoBlock(var1, var2, var3 - 1, var4, var6);
-         } else {
-            this.flowIntoBlock(var1, var2, var3 - 1, var4, var6 + 8);
+         if(!var21.isCancelled()) {
+            if(this.blockMaterial == Material.lava && var1.getBlockMaterial(var2, var3 - 1, var4) == Material.water) {
+               var1.setBlockWithNotify(var2, var3 - 1, var4, Block.stone.blockID);
+               this.triggerLavaMixEffects(var1, var2, var3 - 1, var4);
+               return;
+            }
+
+            if(var9 >= 8) {
+               this.flowIntoBlock(var1, var2, var3 - 1, var4, var9);
+            } else {
+               this.flowIntoBlock(var1, var2, var3 - 1, var4, var9 + 8);
+            }
          }
-      } else if(var6 >= 0 && (var6 == 0 || this.blockBlocksFlow(var1, var2, var3 - 1, var4))) {
-         boolean[] var13 = this.getOptimalFlowDirections(var1, var2, var3, var4);
-         var10 = var6 + var7;
-         if(var6 >= 8) {
-            var10 = 1;
+      } else if(var9 >= 0 && (var9 == 0 || this.blockBlocksFlow(var1, var2, var3 - 1, var4))) {
+         boolean[] var22 = this.getOptimalFlowDirections(var1, var2, var3, var4);
+         var14 = var9 + var10;
+         if(var9 >= 8) {
+            var14 = 1;
          }
 
-         if(var10 >= 8) {
+         if(var14 >= 8) {
             return;
          }
 
-         if(var13[0]) {
-            this.flowIntoBlock(var1, var2 - 1, var3, var4, var10);
-         }
-
-         if(var13[1]) {
-            this.flowIntoBlock(var1, var2 + 1, var3, var4, var10);
-         }
+         BlockFace[] var23 = new BlockFace[]{BlockFace.NORTH, BlockFace.SOUTH, BlockFace.EAST, BlockFace.WEST};
+         var15 = 0;
+         BlockFace[] var16 = var23;
+         int var17 = var23.length;
+
+         for(int var18 = 0; var18 < var17; ++var18) {
+            BlockFace var19 = var16[var18];
+            if(var22[var15]) {
+               BlockFromToEvent var20 = new BlockFromToEvent(var8, var19);
+               if(var7 != null) {
+                  var7.getPluginManager().callEvent(var20);
+               }
 
-         if(var13[2]) {
-            this.flowIntoBlock(var1, var2, var3, var4 - 1, var10);
-         }
+               if(!var20.isCancelled()) {
+                  this.flowIntoBlock(var1, var2 + var19.getModX(), var3, var4 + var19.getModZ(), var14);
+               }
+            }
 
-         if(var13[3]) {
-            this.flowIntoBlock(var1, var2, var3, var4 + 1, var10);
+            ++var15;
          }
       }
 
@@ -153,7 +173,7 @@
       for(int var8 = 0; var8 < 4; ++var8) {
          if((var8 != 0 || var6 != 1) && (var8 != 1 || var6 != 0) && (var8 != 2 || var6 != 3) && (var8 != 3 || var6 != 2)) {
             int var9 = var2;
-            int var11 = var4;
+            int var10 = var4;
             if(var8 == 0) {
                var9 = var2 - 1;
             }
@@ -163,22 +183,22 @@
             }
 
             if(var8 == 2) {
-               var11 = var4 - 1;
+               var10 = var4 - 1;
             }
 
             if(var8 == 3) {
-               ++var11;
+               ++var10;
             }
 
-            if(!this.blockBlocksFlow(var1, var9, var3, var11) && (var1.getBlockMaterial(var9, var3, var11) != this.blockMaterial || var1.getBlockMetadata(var9, var3, var11) != 0)) {
-               if(!this.blockBlocksFlow(var1, var9, var3 - 1, var11)) {
+            if(!this.blockBlocksFlow(var1, var9, var3, var10) && (var1.getBlockMaterial(var9, var3, var10) != this.blockMaterial || var1.getBlockMetadata(var9, var3, var10) != 0)) {
+               if(!this.blockBlocksFlow(var1, var9, var3 - 1, var10)) {
                   return var5;
                }
 
                if(var5 < 4) {
-                  int var12 = this.calculateFlowCost(var1, var9, var3, var11, var5 + 1, var8);
-                  if(var12 < var7) {
-                     var7 = var12;
+                  int var11 = this.calculateFlowCost(var1, var9, var3, var10, var5 + 1, var8);
+                  if(var11 < var7) {
+                     var7 = var11;
                   }
                }
             }
@@ -194,7 +214,7 @@
       for(var5 = 0; var5 < 4; ++var5) {
          this.flowCost[var5] = 1000;
          var6 = var2;
-         int var8 = var4;
+         int var7 = var4;
          if(var5 == 0) {
             var6 = var2 - 1;
          }
@@ -204,16 +224,16 @@
          }
 
          if(var5 == 2) {
-            var8 = var4 - 1;
+            var7 = var4 - 1;
          }
 
          if(var5 == 3) {
-            ++var8;
+            ++var7;
          }
 
-         if(!this.blockBlocksFlow(var1, var6, var3, var8) && (var1.getBlockMaterial(var6, var3, var8) != this.blockMaterial || var1.getBlockMetadata(var6, var3, var8) != 0)) {
-            if(this.blockBlocksFlow(var1, var6, var3 - 1, var8)) {
-               this.flowCost[var5] = this.calculateFlowCost(var1, var6, var3, var8, 1, var5);
+         if(!this.blockBlocksFlow(var1, var6, var3, var7) && (var1.getBlockMaterial(var6, var3, var7) != this.blockMaterial || var1.getBlockMetadata(var6, var3, var7) != 0)) {
+            if(this.blockBlocksFlow(var1, var6, var3 - 1, var7)) {
+               this.flowCost[var5] = this.calculateFlowCost(var1, var6, var3, var7, 1, var5);
             } else {
                this.flowCost[var5] = 0;
             }
Binary files mcp-mcdev/net/minecraft/src/BlockGrass.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockGrass.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockGrass.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockGrass.java
--- mcp-mcdev/net/minecraft/src/BlockGrass.java	2012-11-29 21:15:23.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockGrass.java	2012-11-29 21:41:57.000000000 -0800
@@ -5,6 +5,10 @@
 import net.minecraft.src.CreativeTabs;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.block.BlockFadeEvent;
+import org.bukkit.event.block.BlockSpreadEvent;
 
 public class BlockGrass extends Block {
 
@@ -22,7 +26,14 @@
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
       if(!var1.isRemote) {
          if(var1.getBlockLightValue(var2, var3 + 1, var4) < 4 && Block.lightOpacity[var1.getBlockId(var2, var3 + 1, var4)] > 2) {
-            var1.setBlockWithNotify(var2, var3, var4, Block.dirt.blockID);
+            CraftWorld var14 = var1.getWorld();
+            BlockState var15 = var14.getBlockAt(var2, var3, var4).getState();
+            var15.setTypeId(Block.dirt.blockID);
+            BlockFadeEvent var16 = new BlockFadeEvent(var15.getBlock(), var15);
+            var1.getServer().getPluginManager().callEvent(var16);
+            if(!var16.isCancelled()) {
+               var15.update(true);
+            }
          } else if(var1.getBlockLightValue(var2, var3 + 1, var4) >= 9) {
             for(int var6 = 0; var6 < 4; ++var6) {
                int var7 = var2 + var5.nextInt(3) - 1;
@@ -30,12 +41,19 @@
                int var9 = var4 + var5.nextInt(3) - 1;
                int var10 = var1.getBlockId(var7, var8 + 1, var9);
                if(var1.getBlockId(var7, var8, var9) == Block.dirt.blockID && var1.getBlockLightValue(var7, var8 + 1, var9) >= 4 && Block.lightOpacity[var10] <= 2) {
-                  var1.setBlockWithNotify(var7, var8, var9, Block.grass.blockID);
+                  CraftWorld var11 = var1.getWorld();
+                  BlockState var12 = var11.getBlockAt(var7, var8, var9).getState();
+                  var12.setTypeId(Block.grass.blockID);
+                  BlockSpreadEvent var13 = new BlockSpreadEvent(var12.getBlock(), var11.getBlockAt(var2, var3, var4), var12);
+                  var1.getServer().getPluginManager().callEvent(var13);
+                  if(!var13.isCancelled()) {
+                     var12.update(true);
+                  }
                }
             }
          }
-
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/BlockIce.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockIce.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockIce.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockIce.java
--- mcp-mcdev/net/minecraft/src/BlockIce.java	2012-11-29 21:15:23.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockIce.java	2012-11-29 21:41:57.000000000 -0800
@@ -11,6 +11,7 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.StatList;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockIce extends BlockBreakable {
 
@@ -51,6 +52,10 @@
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
       if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11 - Block.lightOpacity[this.blockID]) {
+         if(CraftEventFactory.callBlockFadeEvent(var1.getWorld().getBlockAt(var2, var3, var4), Block.waterStill.blockID).isCancelled()) {
+            return;
+         }
+
          if(var1.provider.isHellWorld) {
             var1.setBlockWithNotify(var2, var3, var4, 0);
             return;
Binary files mcp-mcdev/net/minecraft/src/BlockLeaves.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockLeaves.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockLeaves.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockLeaves.java
--- mcp-mcdev/net/minecraft/src/BlockLeaves.java	2012-11-29 21:15:23.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockLeaves.java	2012-11-29 21:41:57.000000000 -0800
@@ -10,6 +10,7 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.StatList;
 import net.minecraft.src.World;
+import org.bukkit.event.block.LeavesDecayEvent;
 
 public class BlockLeaves extends BlockLeavesBase {
 
@@ -119,13 +120,17 @@
                this.removeLeaves(var1, var2, var3, var4);
             }
          }
-
       }
+
    }
 
    private void removeLeaves(World var1, int var2, int var3, int var4) {
-      this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4), 0);
-      var1.setBlockWithNotify(var2, var3, var4, 0);
+      LeavesDecayEvent var5 = new LeavesDecayEvent(var1.getWorld().getBlockAt(var2, var3, var4));
+      var1.getServer().getPluginManager().callEvent(var5);
+      if(!var5.isCancelled()) {
+         this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4), 0);
+         var1.setBlockWithNotify(var2, var3, var4, 0);
+      }
    }
 
    public int quantityDropped(Random var1) {
Binary files mcp-mcdev/net/minecraft/src/BlockLever.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockLever.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockLever.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockLever.java
--- mcp-mcdev/net/minecraft/src/BlockLever.java	2012-11-29 21:15:23.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockLever.java	2012-11-29 21:41:56.000000000 -0800
@@ -7,6 +7,7 @@
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockLever extends Block {
 
@@ -40,34 +41,34 @@
    }
 
    public int func_85104_a(World var1, int var2, int var3, int var4, int var5, float var6, float var7, float var8, int var9) {
-      int var11 = var9 & 8;
-      int var10 = var9 & 7;
-      var10 = -1;
+      int var10 = var9 & 8;
+      int var11 = var9 & 7;
+      var11 = -1;
       if(var5 == 0 && var1.isBlockNormalCube(var2, var3 + 1, var4)) {
-         var10 = var1.rand.nextBoolean()?0:7;
+         var11 = var1.rand.nextBoolean()?0:7;
       }
 
       if(var5 == 1 && var1.doesBlockHaveSolidTopSurface(var2, var3 - 1, var4)) {
-         var10 = 5 + var1.rand.nextInt(2);
+         var11 = 5 + var1.rand.nextInt(2);
       }
 
       if(var5 == 2 && var1.isBlockNormalCube(var2, var3, var4 + 1)) {
-         var10 = 4;
+         var11 = 4;
       }
 
       if(var5 == 3 && var1.isBlockNormalCube(var2, var3, var4 - 1)) {
-         var10 = 3;
+         var11 = 3;
       }
 
       if(var5 == 4 && var1.isBlockNormalCube(var2 + 1, var3, var4)) {
-         var10 = 2;
+         var11 = 2;
       }
 
       if(var5 == 5 && var1.isBlockNormalCube(var2 - 1, var3, var4)) {
-         var10 = 1;
+         var11 = 1;
       }
 
-      return var10 + var11;
+      return var11 + var10;
    }
 
    public static int invertMetadata(int var0) {
@@ -175,27 +176,36 @@
          int var10 = var1.getBlockMetadata(var2, var3, var4);
          int var11 = var10 & 7;
          int var12 = 8 - (var10 & 8);
-         var1.setBlockMetadataWithNotify(var2, var3, var4, var11 + var12);
-         var1.markBlockRangeForRenderUpdate(var2, var3, var4, var2, var3, var4);
-         var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, var12 > 0?0.6F:0.5F);
-         var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
-         if(var11 == 1) {
-            var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
-         } else if(var11 == 2) {
-            var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
-         } else if(var11 == 3) {
-            var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
-         } else if(var11 == 4) {
-            var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
-         } else if(var11 != 5 && var11 != 6) {
-            if(var11 == 0 || var11 == 7) {
-               var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
-            }
+         org.bukkit.block.Block var13 = var1.getWorld().getBlockAt(var2, var3, var4);
+         int var14 = var12 != 8?1:0;
+         int var15 = var12 == 8?1:0;
+         BlockRedstoneEvent var16 = new BlockRedstoneEvent(var13, var14, var15);
+         var1.getServer().getPluginManager().callEvent(var16);
+         if(var16.getNewCurrent() > 0 != (var12 == 8)) {
+            return true;
          } else {
-            var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
-         }
+            var1.setBlockMetadataWithNotify(var2, var3, var4, var11 + var12);
+            var1.markBlockRangeForRenderUpdate(var2, var3, var4, var2, var3, var4);
+            var1.playSoundEffect((double)var2 + 0.5D, (double)var3 + 0.5D, (double)var4 + 0.5D, "random.click", 0.3F, var12 > 0?0.6F:0.5F);
+            var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
+            if(var11 == 1) {
+               var1.notifyBlocksOfNeighborChange(var2 - 1, var3, var4, this.blockID);
+            } else if(var11 == 2) {
+               var1.notifyBlocksOfNeighborChange(var2 + 1, var3, var4, this.blockID);
+            } else if(var11 == 3) {
+               var1.notifyBlocksOfNeighborChange(var2, var3, var4 - 1, this.blockID);
+            } else if(var11 == 4) {
+               var1.notifyBlocksOfNeighborChange(var2, var3, var4 + 1, this.blockID);
+            } else if(var11 != 5 && var11 != 6) {
+               if(var11 == 0 || var11 == 7) {
+                  var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+               }
+            } else {
+               var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+            }
 
-         return true;
+            return true;
+         }
       }
    }
 
Binary files mcp-mcdev/net/minecraft/src/BlockMobSpawner.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMobSpawner.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockMobSpawner.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMobSpawner.java
--- mcp-mcdev/net/minecraft/src/BlockMobSpawner.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMobSpawner.java	2012-11-29 21:41:56.000000000 -0800
@@ -27,8 +27,11 @@
 
    public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6, int var7) {
       super.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6, var7);
-      int var8 = 15 + var1.rand.nextInt(15) + var1.rand.nextInt(15);
-      this.dropXpOnBlockBreak(var1, var2, var3, var4, var8);
+   }
+
+   public int getExpDrop(World var1, int var2, int var3) {
+      int var4 = 15 + var1.rand.nextInt(15) + var1.rand.nextInt(15);
+      return var4;
    }
 
    public boolean isOpaqueCube() {
Binary files mcp-mcdev/net/minecraft/src/BlockMushroom.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMushroom.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockMushroom.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMushroom.java
--- mcp-mcdev/net/minecraft/src/BlockMushroom.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMushroom.java	2012-11-29 21:41:56.000000000 -0800
@@ -1,10 +1,20 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Random;
 import net.minecraft.src.Block;
 import net.minecraft.src.BlockFlower;
+import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenBigMushroom;
+import org.bukkit.BlockChangeDelegate;
+import org.bukkit.Location;
+import org.bukkit.TreeType;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockSpreadEvent;
+import org.bukkit.event.world.StructureGrowEvent;
 
 public class BlockMushroom extends BlockFlower {
 
@@ -53,7 +63,14 @@
          }
 
          if(var1.isAirBlock(var8, var9, var10) && this.canBlockStay(var1, var8, var9, var10)) {
-            var1.setBlockWithNotify(var8, var9, var10, this.blockID);
+            CraftWorld var14 = var1.getWorld();
+            BlockState var12 = var14.getBlockAt(var8, var9, var10).getState();
+            var12.setTypeId(this.blockID);
+            BlockSpreadEvent var13 = new BlockSpreadEvent(var12.getBlock(), var14.getBlockAt(var2, var3, var4), var12);
+            var1.getServer().getPluginManager().callEvent(var13);
+            if(!var13.isCancelled()) {
+               var12.update(true);
+            }
          }
       }
 
@@ -76,20 +93,32 @@
       }
    }
 
-   public boolean fertilizeMushroom(World var1, int var2, int var3, int var4, Random var5) {
-      int var6 = var1.getBlockMetadata(var2, var3, var4);
+   public boolean grow(World var1, int var2, int var3, int var4, Random var5, boolean var6, Player var7, ItemStack var8) {
+      int var9 = var1.getBlockMetadata(var2, var3, var4);
       var1.setBlock(var2, var3, var4, 0);
-      WorldGenBigMushroom var7 = null;
+      boolean var10 = false;
+      StructureGrowEvent var11 = null;
+      Location var12 = new Location(var1.getWorld(), (double)var2, (double)var3, (double)var4);
+      WorldGenBigMushroom var13 = null;
       if(this.blockID == Block.mushroomBrown.blockID) {
-         var7 = new WorldGenBigMushroom(0);
+         var11 = new StructureGrowEvent(var12, TreeType.BROWN_MUSHROOM, var6, var7, new ArrayList());
+         var13 = new WorldGenBigMushroom(0);
       } else if(this.blockID == Block.mushroomRed.blockID) {
-         var7 = new WorldGenBigMushroom(1);
+         var11 = new StructureGrowEvent(var12, TreeType.RED_MUSHROOM, var6, var7, new ArrayList());
+         var13 = new WorldGenBigMushroom(1);
+      }
+
+      if(var13 != null && var11 != null) {
+         var10 = var13.grow((BlockChangeDelegate)var1, var5, var2, var3, var4, var11, var8, var1.getWorld());
+         if(var11.isFromBonemeal() && var8 != null) {
+            --var8.stackSize;
+         }
       }
 
-      if(var7 != null && var7.generate(var1, var5, var2, var3, var4)) {
+      if(var10 && !var11.isCancelled()) {
          return true;
       } else {
-         var1.setBlockAndMetadata(var2, var3, var4, this.blockID, var6);
+         var1.setBlockAndMetadata(var2, var3, var4, this.blockID, var9);
          return false;
       }
    }
Binary files mcp-mcdev/net/minecraft/src/BlockMycelium.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMycelium.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockMycelium.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMycelium.java
--- mcp-mcdev/net/minecraft/src/BlockMycelium.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockMycelium.java	2012-11-29 21:41:56.000000000 -0800
@@ -5,6 +5,10 @@
 import net.minecraft.src.CreativeTabs;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.block.BlockFadeEvent;
+import org.bukkit.event.block.BlockSpreadEvent;
 
 public class BlockMycelium extends Block {
 
@@ -22,7 +26,14 @@
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
       if(!var1.isRemote) {
          if(var1.getBlockLightValue(var2, var3 + 1, var4) < 4 && Block.lightOpacity[var1.getBlockId(var2, var3 + 1, var4)] > 2) {
-            var1.setBlockWithNotify(var2, var3, var4, Block.dirt.blockID);
+            CraftWorld var14 = var1.getWorld();
+            BlockState var15 = var14.getBlockAt(var2, var3, var4).getState();
+            var15.setTypeId(Block.dirt.blockID);
+            BlockFadeEvent var16 = new BlockFadeEvent(var15.getBlock(), var15);
+            var1.getServer().getPluginManager().callEvent(var16);
+            if(!var16.isCancelled()) {
+               var15.update(true);
+            }
          } else if(var1.getBlockLightValue(var2, var3 + 1, var4) >= 9) {
             for(int var6 = 0; var6 < 4; ++var6) {
                int var7 = var2 + var5.nextInt(3) - 1;
@@ -30,12 +41,19 @@
                int var9 = var4 + var5.nextInt(3) - 1;
                int var10 = var1.getBlockId(var7, var8 + 1, var9);
                if(var1.getBlockId(var7, var8, var9) == Block.dirt.blockID && var1.getBlockLightValue(var7, var8 + 1, var9) >= 4 && Block.lightOpacity[var10] <= 2) {
-                  var1.setBlockWithNotify(var7, var8, var9, this.blockID);
+                  CraftWorld var11 = var1.getWorld();
+                  BlockState var12 = var11.getBlockAt(var7, var8, var9).getState();
+                  var12.setTypeId(this.blockID);
+                  BlockSpreadEvent var13 = new BlockSpreadEvent(var12.getBlock(), var11.getBlockAt(var2, var3, var4), var12);
+                  var1.getServer().getPluginManager().callEvent(var13);
+                  if(!var13.isCancelled()) {
+                     var12.update(true);
+                  }
                }
             }
          }
-
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/BlockNetherStalk.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockNetherStalk.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockNetherStalk.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockNetherStalk.java
--- mcp-mcdev/net/minecraft/src/BlockNetherStalk.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockNetherStalk.java	2012-11-29 21:41:56.000000000 -0800
@@ -7,6 +7,7 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockNetherStalk extends BlockFlower {
 
@@ -30,7 +31,7 @@
       int var6 = var1.getBlockMetadata(var2, var3, var4);
       if(var6 < 3 && var5.nextInt(10) == 0) {
          ++var6;
-         var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+         CraftEventFactory.handleBlockGrowEvent(var1, var2, var3, var4, this.blockID, var6);
       }
 
       super.updateTick(var1, var2, var3, var4, var5);
@@ -57,8 +58,8 @@
          for(int var9 = 0; var9 < var8; ++var9) {
             this.dropBlockAsItem_do(var1, var2, var3, var4, new ItemStack(Item.netherStalkSeeds));
          }
-
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/BlockNetherrack.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockNetherrack.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockNetherrack.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockNetherrack.java
--- mcp-mcdev/net/minecraft/src/BlockNetherrack.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockNetherrack.java	2012-11-29 21:41:56.000000000 -0800
@@ -3,6 +3,8 @@
 import net.minecraft.src.Block;
 import net.minecraft.src.CreativeTabs;
 import net.minecraft.src.Material;
+import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockNetherrack extends Block {
 
@@ -10,4 +12,14 @@
       super(var1, var2, Material.rock);
       this.setCreativeTab(CreativeTabs.tabBlock);
    }
+
+   public void doPhysics(World var1, int var2, int var3, int var4, int var5) {
+      if(Block.blocksList[var5] != null && Block.blocksList[var5].canProvidePower()) {
+         org.bukkit.block.Block var6 = var1.getWorld().getBlockAt(var2, var3, var4);
+         int var7 = var6.getBlockPower();
+         BlockRedstoneEvent var8 = new BlockRedstoneEvent(var6, var7, var7);
+         var1.getServer().getPluginManager().callEvent(var8);
+      }
+
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/BlockOre.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockOre.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockOre.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockOre.java
--- mcp-mcdev/net/minecraft/src/BlockOre.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockOre.java	2012-11-29 21:41:56.000000000 -0800
@@ -38,21 +38,25 @@
 
    public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6, int var7) {
       super.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6, var7);
-      if(this.idDropped(var5, var1.rand, var7) != this.blockID) {
-         int var8 = 0;
+   }
+
+   public int getExpDrop(World var1, int var2, int var3) {
+      if(this.idDropped(var2, var1.rand, var3) != this.blockID) {
+         int var4 = 0;
          if(this.blockID == Block.oreCoal.blockID) {
-            var8 = MathHelper.getRandomIntegerInRange(var1.rand, 0, 2);
+            var4 = MathHelper.getRandomIntegerInRange(var1.rand, 0, 2);
          } else if(this.blockID == Block.oreDiamond.blockID) {
-            var8 = MathHelper.getRandomIntegerInRange(var1.rand, 3, 7);
+            var4 = MathHelper.getRandomIntegerInRange(var1.rand, 3, 7);
          } else if(this.blockID == Block.oreEmerald.blockID) {
-            var8 = MathHelper.getRandomIntegerInRange(var1.rand, 3, 7);
+            var4 = MathHelper.getRandomIntegerInRange(var1.rand, 3, 7);
          } else if(this.blockID == Block.oreLapis.blockID) {
-            var8 = MathHelper.getRandomIntegerInRange(var1.rand, 2, 5);
+            var4 = MathHelper.getRandomIntegerInRange(var1.rand, 2, 5);
          }
 
-         this.dropXpOnBlockBreak(var1, var2, var3, var4, var8);
+         return var4;
+      } else {
+         return 0;
       }
-
    }
 
    public int damageDropped(int var1) {
Binary files mcp-mcdev/net/minecraft/src/BlockPistonBase.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPistonBase.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockPistonBase.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPistonBase.java
--- mcp-mcdev/net/minecraft/src/BlockPistonBase.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPistonBase.java	2012-11-29 21:41:56.000000000 -0800
@@ -16,6 +16,9 @@
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.TileEntityPiston;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.event.block.BlockPistonExtendEvent;
+import org.bukkit.event.block.BlockPistonRetractEvent;
 
 public class BlockPistonBase extends Block {
 
@@ -76,14 +79,29 @@
       if(var6 != 7) {
          boolean var7 = this.isIndirectlyPowered(var1, var2, var3, var4, var6);
          if(var7 && !isExtended(var5)) {
-            if(canExtend(var1, var2, var3, var4, var6)) {
+            int var11 = i(var1, var2, var3, var4, var6);
+            if(var11 >= 0) {
+               org.bukkit.block.Block var12 = var1.getWorld().getBlockAt(var2, var3, var4);
+               BlockPistonExtendEvent var10 = new BlockPistonExtendEvent(var12, var11, CraftBlock.notchToBlockFace(var6));
+               var1.getServer().getPluginManager().callEvent(var10);
+               if(var10.isCancelled()) {
+                  return;
+               }
+
                var1.addBlockEvent(var2, var3, var4, this.blockID, 0, var6);
             }
          } else if(!var7 && isExtended(var5)) {
+            org.bukkit.block.Block var8 = var1.getWorld().getBlockAt(var2, var3, var4);
+            BlockPistonRetractEvent var9 = new BlockPistonRetractEvent(var8, CraftBlock.notchToBlockFace(var6));
+            var1.getServer().getPluginManager().callEvent(var9);
+            if(var9.isCancelled()) {
+               return;
+            }
+
             var1.addBlockEvent(var2, var3, var4, this.blockID, 1, var6);
          }
-
       }
+
    }
 
    private boolean isIndirectlyPowered(World var1, int var2, int var3, int var4, int var5) {
@@ -198,7 +216,7 @@
    }
 
    public static int getOrientation(int var0) {
-      return var0 & 7;
+      return (var0 & 7) >= Facing.faceToSide.length?0:var0 & 7;
    }
 
    public static boolean isExtended(int var0) {
@@ -245,7 +263,7 @@
       }
    }
 
-   private static boolean canExtend(World var0, int var1, int var2, int var3, int var4) {
+   private static int i(World var0, int var1, int var2, int var3, int var4) {
       int var5 = var1 + Facing.offsetsXForSide[var4];
       int var6 = var2 + Facing.offsetsYForSide[var4];
       int var7 = var3 + Facing.offsetsZForSide[var4];
@@ -254,18 +272,18 @@
       while(true) {
          if(var8 < 13) {
             if(var6 <= 0 || var6 >= 255) {
-               return false;
+               return -1;
             }
 
             int var9 = var0.getBlockId(var5, var6, var7);
             if(var9 != 0) {
                if(!canPushBlock(var9, var0, var5, var6, var7, true)) {
-                  return false;
+                  return -1;
                }
 
                if(Block.blocksList[var9].getMobilityFlag() != 1) {
                   if(var8 == 12) {
-                     return false;
+                     return -1;
                   }
 
                   var5 += Facing.offsetsXForSide[var4];
@@ -277,7 +295,7 @@
             }
          }
 
-         return true;
+         return var8;
       }
    }
 
Binary files mcp-mcdev/net/minecraft/src/BlockPistonExtension.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPistonExtension.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockPistonExtension.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPistonExtension.java
--- mcp-mcdev/net/minecraft/src/BlockPistonExtension.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPistonExtension.java	2012-11-29 21:41:55.000000000 -0800
@@ -24,19 +24,21 @@
 
    public void breakBlock(World var1, int var2, int var3, int var4, int var5, int var6) {
       super.breakBlock(var1, var2, var3, var4, var5, var6);
-      int var7 = Facing.faceToSide[getDirectionMeta(var6)];
-      var2 += Facing.offsetsXForSide[var7];
-      var3 += Facing.offsetsYForSide[var7];
-      var4 += Facing.offsetsZForSide[var7];
-      int var8 = var1.getBlockId(var2, var3, var4);
-      if(var8 == Block.pistonBase.blockID || var8 == Block.pistonStickyBase.blockID) {
-         var6 = var1.getBlockMetadata(var2, var3, var4);
-         if(BlockPistonBase.isExtended(var6)) {
-            Block.blocksList[var8].dropBlockAsItem(var1, var2, var3, var4, var6, 0);
-            var1.setBlockWithNotify(var2, var3, var4, 0);
+      if((var6 & 7) < Facing.faceToSide.length) {
+         int var7 = Facing.faceToSide[getDirectionMeta(var6)];
+         var2 += Facing.offsetsXForSide[var7];
+         var3 += Facing.offsetsYForSide[var7];
+         var4 += Facing.offsetsZForSide[var7];
+         int var8 = var1.getBlockId(var2, var3, var4);
+         if(var8 == Block.pistonBase.blockID || var8 == Block.pistonStickyBase.blockID) {
+            var6 = var1.getBlockMetadata(var2, var3, var4);
+            if(BlockPistonBase.isExtended(var6)) {
+               Block.blocksList[var8].dropBlockAsItem(var1, var2, var3, var4, var6, 0);
+               var1.setBlockWithNotify(var2, var3, var4, 0);
+            }
          }
-      }
 
+      }
    }
 
    public int getBlockTextureFromSideAndMetadata(int var1, int var2) {
@@ -137,13 +139,15 @@
 
    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
       int var6 = getDirectionMeta(var1.getBlockMetadata(var2, var3, var4));
-      int var7 = var1.getBlockId(var2 - Facing.offsetsXForSide[var6], var3 - Facing.offsetsYForSide[var6], var4 - Facing.offsetsZForSide[var6]);
-      if(var7 != Block.pistonBase.blockID && var7 != Block.pistonStickyBase.blockID) {
-         var1.setBlockWithNotify(var2, var3, var4, 0);
-      } else {
-         Block.blocksList[var7].onNeighborBlockChange(var1, var2 - Facing.offsetsXForSide[var6], var3 - Facing.offsetsYForSide[var6], var4 - Facing.offsetsZForSide[var6], var5);
-      }
+      if((var6 & 7) < Facing.faceToSide.length) {
+         int var7 = var1.getBlockId(var2 - Facing.offsetsXForSide[var6], var3 - Facing.offsetsYForSide[var6], var4 - Facing.offsetsZForSide[var6]);
+         if(var7 != Block.pistonBase.blockID && var7 != Block.pistonStickyBase.blockID) {
+            var1.setBlockWithNotify(var2, var3, var4, 0);
+         } else {
+            Block.blocksList[var7].onNeighborBlockChange(var1, var2 - Facing.offsetsXForSide[var6], var3 - Facing.offsetsYForSide[var6], var4 - Facing.offsetsZForSide[var6], var5);
+         }
 
+      }
    }
 
    public static int getDirectionMeta(int var0) {
Binary files mcp-mcdev/net/minecraft/src/BlockPortal.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPortal.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockPortal.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPortal.java
--- mcp-mcdev/net/minecraft/src/BlockPortal.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPortal.java	2012-11-29 21:41:55.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.HashSet;
 import java.util.Random;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.Block;
@@ -9,6 +10,11 @@
 import net.minecraft.src.ItemMonsterPlacer;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.entity.EntityPortalEnterEvent;
+import org.bukkit.event.world.PortalCreateEvent;
+import org.bukkit.event.world.PortalCreateEvent.CreateReason;
 
 public class BlockPortal extends BlockBreakable {
 
@@ -76,39 +82,55 @@
       if(var5 == var6) {
          return false;
       } else {
+         HashSet var7 = new HashSet();
+         CraftWorld var8 = var1.getWorld();
          if(var1.getBlockId(var2 - var5, var3, var4 - var6) == 0) {
             var2 -= var5;
             var4 -= var6;
          }
 
-         int var7;
-         int var8;
-         for(var7 = -1; var7 <= 2; ++var7) {
-            for(var8 = -1; var8 <= 3; ++var8) {
-               boolean var9 = var7 == -1 || var7 == 2 || var8 == -1 || var8 == 3;
-               if(var7 != -1 && var7 != 2 || var8 != -1 && var8 != 3) {
-                  int var10 = var1.getBlockId(var2 + var5 * var7, var3 + var8, var4 + var6 * var7);
-                  if(var9) {
-                     if(var10 != Block.obsidian.blockID) {
+         int var9;
+         int var10;
+         for(var9 = -1; var9 <= 2; ++var9) {
+            for(var10 = -1; var10 <= 3; ++var10) {
+               boolean var11 = var9 == -1 || var9 == 2 || var10 == -1 || var10 == 3;
+               if(var9 != -1 && var9 != 2 || var10 != -1 && var10 != 3) {
+                  int var12 = var1.getBlockId(var2 + var5 * var9, var3 + var10, var4 + var6 * var9);
+                  if(var11) {
+                     if(var12 != Block.obsidian.blockID) {
                         return false;
                      }
-                  } else if(var10 != 0 && var10 != Block.fire.blockID) {
+
+                     var7.add(var8.getBlockAt(var2 + var5 * var9, var3 + var10, var4 + var6 * var9));
+                  } else if(var12 != 0 && var12 != Block.fire.blockID) {
                      return false;
                   }
                }
             }
          }
 
-         var1.editingBlocks = true;
-
-         for(var7 = 0; var7 < 2; ++var7) {
-            for(var8 = 0; var8 < 3; ++var8) {
-               var1.setBlockWithNotify(var2 + var5 * var7, var3 + var8, var4 + var6 * var7, Block.portal.blockID);
+         for(var9 = 0; var9 < 2; ++var9) {
+            for(var10 = 0; var10 < 3; ++var10) {
+               var7.add(var8.getBlockAt(var2 + var5 * var9, var3 + var10, var4 + var6 * var9));
             }
          }
 
-         var1.editingBlocks = false;
-         return true;
+         PortalCreateEvent var13 = new PortalCreateEvent(var7, var8, CreateReason.FIRE);
+         var1.getServer().getPluginManager().callEvent(var13);
+         if(var13.isCancelled()) {
+            return false;
+         } else {
+            var1.editingBlocks = true;
+
+            for(var9 = 0; var9 < 2; ++var9) {
+               for(var10 = 0; var10 < 3; ++var10) {
+                  var1.setBlockWithNotify(var2 + var5 * var9, var3 + var10, var4 + var6 * var9, Block.portal.blockID);
+               }
+            }
+
+            var1.editingBlocks = false;
+            return true;
+         }
       }
    }
 
@@ -138,16 +160,14 @@
             boolean var11 = var1.getBlockId(var2, var3, var4 - 1) == this.blockID || var1.getBlockId(var2, var3, var4 + 1) == this.blockID;
             if(var10 && var11) {
                var1.setBlockWithNotify(var2, var3, var4, 0);
-            } else {
-               if((var1.getBlockId(var2 + var6, var3, var4 + var7) != Block.obsidian.blockID || var1.getBlockId(var2 - var6, var3, var4 - var7) != this.blockID) && (var1.getBlockId(var2 - var6, var3, var4 - var7) != Block.obsidian.blockID || var1.getBlockId(var2 + var6, var3, var4 + var7) != this.blockID)) {
-                  var1.setBlockWithNotify(var2, var3, var4, 0);
-               }
-
+            } else if((var1.getBlockId(var2 + var6, var3, var4 + var7) != Block.obsidian.blockID || var1.getBlockId(var2 - var6, var3, var4 - var7) != this.blockID) && (var1.getBlockId(var2 - var6, var3, var4 - var7) != Block.obsidian.blockID || var1.getBlockId(var2 + var6, var3, var4 + var7) != this.blockID)) {
+               var1.setBlockWithNotify(var2, var3, var4, 0);
             }
          } else {
             var1.setBlockWithNotify(var2, var3, var4, 0);
          }
       }
+
    }
 
    public int quantityDropped(Random var1) {
@@ -156,6 +176,8 @@
 
    public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
       if(var5.ridingEntity == null && var5.riddenByEntity == null) {
+         EntityPortalEnterEvent var6 = new EntityPortalEnterEvent(var5.getBukkitEntity(), new Location(var1.getWorld(), (double)var2, (double)var3, (double)var4));
+         var1.getServer().getPluginManager().callEvent(var6);
          var5.setInPortal();
       }
 
Binary files mcp-mcdev/net/minecraft/src/BlockPressurePlate.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPressurePlate.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockPressurePlate.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPressurePlate.java
--- mcp-mcdev/net/minecraft/src/BlockPressurePlate.java	2012-11-29 21:15:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPressurePlate.java	2012-11-29 21:41:55.000000000 -0800
@@ -12,8 +12,16 @@
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.EnumMobType;
 import net.minecraft.src.IBlockAccess;
+import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.BlockRedstoneEvent;
+import org.bukkit.event.entity.EntityInteractEvent;
+import org.bukkit.plugin.PluginManager;
 
 public class BlockPressurePlate extends Block {
 
@@ -67,19 +75,17 @@
    }
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
-      if(!var1.isRemote) {
-         if(var1.getBlockMetadata(var2, var3, var4) != 0) {
-            this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
-         }
+      if(!var1.isRemote && var1.getBlockMetadata(var2, var3, var4) != 0) {
+         this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
       }
+
    }
 
    public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
-      if(!var1.isRemote) {
-         if(var1.getBlockMetadata(var2, var3, var4) != 1) {
-            this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
-         }
+      if(!var1.isRemote && var1.getBlockMetadata(var2, var3, var4) != 1) {
+         this.setStateIfMobInteractsWithPlate(var1, var2, var3, var4);
       }
+
    }
 
    private void setStateIfMobInteractsWithPlate(World var1, int var2, int var3, int var4) {
@@ -111,6 +117,39 @@
          }
       }
 
+      CraftWorld var14 = var1.getWorld();
+      PluginManager var16 = var1.getServer().getPluginManager();
+      if(var5 != var6) {
+         if(var6) {
+            Iterator var11 = var8.iterator();
+
+            while(var11.hasNext()) {
+               Object var12 = var11.next();
+               if(var12 != null) {
+                  Object var13;
+                  if(var12 instanceof EntityPlayer) {
+                     var13 = CraftEventFactory.callPlayerInteractEvent((EntityPlayer)var12, Action.PHYSICAL, var2, var3, var4, -1, (ItemStack)null);
+                  } else {
+                     if(!(var12 instanceof Entity)) {
+                        continue;
+                     }
+
+                     var13 = new EntityInteractEvent(((Entity)var12).getBukkitEntity(), var14.getBlockAt(var2, var3, var4));
+                     var16.callEvent((EntityInteractEvent)var13);
+                  }
+
+                  if(((Cancellable)var13).isCancelled()) {
+                     return;
+                  }
+               }
+            }
+         }
+
+         BlockRedstoneEvent var15 = new BlockRedstoneEvent(var14.getBlockAt(var2, var3, var4), var5?1:0, var6?1:0);
+         var16.callEvent(var15);
+         var6 = var15.getNewCurrent() > 0;
+      }
+
       if(var6 && !var5) {
          var1.setBlockMetadataWithNotify(var2, var3, var4, 1);
          var1.notifyBlocksOfNeighborChange(var2, var3, var4, this.blockID);
Binary files mcp-mcdev/net/minecraft/src/BlockPumpkin.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPumpkin.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockPumpkin.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPumpkin.java
--- mcp-mcdev/net/minecraft/src/BlockPumpkin.java	2012-11-29 21:15:21.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockPumpkin.java	2012-11-29 21:41:55.000000000 -0800
@@ -9,6 +9,9 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.util.BlockStateListPopulator;
+import org.bukkit.event.block.BlockRedstoneEvent;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class BlockPumpkin extends BlockDirectional {
 
@@ -44,59 +47,53 @@
 
    public void onBlockAdded(World var1, int var2, int var3, int var4) {
       super.onBlockAdded(var1, var2, var3, var4);
-      if(var1.getBlockId(var2, var3 - 1, var4) == Block.blockSnow.blockID && var1.getBlockId(var2, var3 - 2, var4) == Block.blockSnow.blockID) {
-         if(!var1.isRemote) {
-            var1.setBlock(var2, var3, var4, 0);
-            var1.setBlock(var2, var3 - 1, var4, 0);
-            var1.setBlock(var2, var3 - 2, var4, 0);
-            EntitySnowman var9 = new EntitySnowman(var1);
-            var9.setLocationAndAngles((double)var2 + 0.5D, (double)var3 - 1.95D, (double)var4 + 0.5D, 0.0F, 0.0F);
-            var1.spawnEntityInWorld(var9);
-            var1.notifyBlockChange(var2, var3, var4, 0);
-            var1.notifyBlockChange(var2, var3 - 1, var4, 0);
-            var1.notifyBlockChange(var2, var3 - 2, var4, 0);
-         }
-
-         for(int var10 = 0; var10 < 120; ++var10) {
-            var1.spawnParticle("snowshovel", (double)var2 + var1.rand.nextDouble(), (double)(var3 - 2) + var1.rand.nextDouble() * 2.5D, (double)var4 + var1.rand.nextDouble(), 0.0D, 0.0D, 0.0D);
-         }
-      } else if(var1.getBlockId(var2, var3 - 1, var4) == Block.blockSteel.blockID && var1.getBlockId(var2, var3 - 2, var4) == Block.blockSteel.blockID) {
-         boolean var5 = var1.getBlockId(var2 - 1, var3 - 1, var4) == Block.blockSteel.blockID && var1.getBlockId(var2 + 1, var3 - 1, var4) == Block.blockSteel.blockID;
-         boolean var6 = var1.getBlockId(var2, var3 - 1, var4 - 1) == Block.blockSteel.blockID && var1.getBlockId(var2, var3 - 1, var4 + 1) == Block.blockSteel.blockID;
-         if(var5 || var6) {
-            var1.setBlock(var2, var3, var4, 0);
-            var1.setBlock(var2, var3 - 1, var4, 0);
-            var1.setBlock(var2, var3 - 2, var4, 0);
-            if(var5) {
-               var1.setBlock(var2 - 1, var3 - 1, var4, 0);
-               var1.setBlock(var2 + 1, var3 - 1, var4, 0);
-            } else {
-               var1.setBlock(var2, var3 - 1, var4 - 1, 0);
-               var1.setBlock(var2, var3 - 1, var4 + 1, 0);
+      if(!var1.editingBlocks) {
+         if(var1.getBlockId(var2, var3 - 1, var4) == Block.blockSnow.blockID && var1.getBlockId(var2, var3 - 2, var4) == Block.blockSnow.blockID) {
+            if(!var1.isRemote) {
+               BlockStateListPopulator var10 = new BlockStateListPopulator(var1.getWorld());
+               var10.setTypeId(var2, var3, var4, 0);
+               var10.setTypeId(var2, var3 - 1, var4, 0);
+               var10.setTypeId(var2, var3 - 2, var4, 0);
+               EntitySnowman var12 = new EntitySnowman(var1);
+               var12.setLocationAndAngles((double)var2 + 0.5D, (double)var3 - 1.95D, (double)var4 + 0.5D, 0.0F, 0.0F);
+               if(var1.addEntity(var12, SpawnReason.BUILD_SNOWMAN)) {
+                  var10.updateList();
+               }
             }
 
-            EntityIronGolem var7 = new EntityIronGolem(var1);
-            var7.setPlayerCreated(true);
-            var7.setLocationAndAngles((double)var2 + 0.5D, (double)var3 - 1.95D, (double)var4 + 0.5D, 0.0F, 0.0F);
-            var1.spawnEntityInWorld(var7);
-
-            for(int var8 = 0; var8 < 120; ++var8) {
-               var1.spawnParticle("snowballpoof", (double)var2 + var1.rand.nextDouble(), (double)(var3 - 2) + var1.rand.nextDouble() * 3.9D, (double)var4 + var1.rand.nextDouble(), 0.0D, 0.0D, 0.0D);
+            for(int var11 = 0; var11 < 120; ++var11) {
+               var1.spawnParticle("snowshovel", (double)var2 + var1.rand.nextDouble(), (double)(var3 - 2) + var1.rand.nextDouble() * 2.5D, (double)var4 + var1.rand.nextDouble(), 0.0D, 0.0D, 0.0D);
             }
+         } else if(var1.getBlockId(var2, var3 - 1, var4) == Block.blockSteel.blockID && var1.getBlockId(var2, var3 - 2, var4) == Block.blockSteel.blockID) {
+            boolean var5 = var1.getBlockId(var2 - 1, var3 - 1, var4) == Block.blockSteel.blockID && var1.getBlockId(var2 + 1, var3 - 1, var4) == Block.blockSteel.blockID;
+            boolean var6 = var1.getBlockId(var2, var3 - 1, var4 - 1) == Block.blockSteel.blockID && var1.getBlockId(var2, var3 - 1, var4 + 1) == Block.blockSteel.blockID;
+            if(var5 || var6) {
+               BlockStateListPopulator var7 = new BlockStateListPopulator(var1.getWorld());
+               var7.setTypeId(var2, var3, var4, 0);
+               var7.setTypeId(var2, var3 - 1, var4, 0);
+               var7.setTypeId(var2, var3 - 2, var4, 0);
+               if(var5) {
+                  var7.setTypeId(var2 - 1, var3 - 1, var4, 0);
+                  var7.setTypeId(var2 + 1, var3 - 1, var4, 0);
+               } else {
+                  var7.setTypeId(var2, var3 - 1, var4 - 1, 0);
+                  var7.setTypeId(var2, var3 - 1, var4 + 1, 0);
+               }
+
+               EntityIronGolem var8 = new EntityIronGolem(var1);
+               var8.setPlayerCreated(true);
+               var8.setLocationAndAngles((double)var2 + 0.5D, (double)var3 - 1.95D, (double)var4 + 0.5D, 0.0F, 0.0F);
+               if(var1.addEntity(var8, SpawnReason.BUILD_IRONGOLEM)) {
+                  for(int var9 = 0; var9 < 120; ++var9) {
+                     var1.spawnParticle("snowballpoof", (double)var2 + var1.rand.nextDouble(), (double)(var3 - 2) + var1.rand.nextDouble() * 3.9D, (double)var4 + var1.rand.nextDouble(), 0.0D, 0.0D, 0.0D);
+                  }
 
-            var1.notifyBlockChange(var2, var3, var4, 0);
-            var1.notifyBlockChange(var2, var3 - 1, var4, 0);
-            var1.notifyBlockChange(var2, var3 - 2, var4, 0);
-            if(var5) {
-               var1.notifyBlockChange(var2 - 1, var3 - 1, var4, 0);
-               var1.notifyBlockChange(var2 + 1, var3 - 1, var4, 0);
-            } else {
-               var1.notifyBlockChange(var2, var3 - 1, var4 - 1, 0);
-               var1.notifyBlockChange(var2, var3 - 1, var4 + 1, 0);
+                  var7.updateList();
+               }
             }
          }
-      }
 
+      }
    }
 
    public boolean canPlaceBlockAt(World var1, int var2, int var3, int var4) {
@@ -108,4 +105,14 @@
       int var6 = MathHelper.floor_double((double)(var5.rotationYaw * 4.0F / 360.0F) + 2.5D) & 3;
       var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
    }
+
+   public void doPhysics(World var1, int var2, int var3, int var4, int var5) {
+      if(Block.blocksList[var5] != null && Block.blocksList[var5].canProvidePower()) {
+         org.bukkit.block.Block var6 = var1.getWorld().getBlockAt(var2, var3, var4);
+         int var7 = var6.getBlockPower();
+         BlockRedstoneEvent var8 = new BlockRedstoneEvent(var6, var7, var7);
+         var1.getServer().getPluginManager().callEvent(var8);
+      }
+
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/BlockRedstoneLight.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneLight.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockRedstoneLight.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneLight.java
--- mcp-mcdev/net/minecraft/src/BlockRedstoneLight.java	2012-11-29 21:15:21.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneLight.java	2012-11-29 21:41:55.000000000 -0800
@@ -4,6 +4,7 @@
 import net.minecraft.src.Block;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockRedstoneLight extends Block {
 
@@ -25,6 +26,10 @@
          if(this.powered && !var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
             var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, 4);
          } else if(!this.powered && var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
+            if(CraftEventFactory.callRedstoneChange(var1, var2, var3, var4, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+
             var1.setBlockWithNotify(var2, var3, var4, Block.redstoneLampActive.blockID);
          }
       }
@@ -36,6 +41,10 @@
          if(this.powered && !var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
             var1.scheduleBlockUpdate(var2, var3, var4, this.blockID, 4);
          } else if(!this.powered && var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
+            if(CraftEventFactory.callRedstoneChange(var1, var2, var3, var4, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+
             var1.setBlockWithNotify(var2, var3, var4, Block.redstoneLampActive.blockID);
          }
       }
@@ -44,6 +53,10 @@
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
       if(!var1.isRemote && this.powered && !var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
+         if(CraftEventFactory.callRedstoneChange(var1, var2, var3, var4, 15, 0).getNewCurrent() != 0) {
+            return;
+         }
+
          var1.setBlockWithNotify(var2, var3, var4, Block.redstoneLampIdle.blockID);
       }
 
Binary files mcp-mcdev/net/minecraft/src/BlockRedstoneOre.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneOre.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockRedstoneOre.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneOre.java
--- mcp-mcdev/net/minecraft/src/BlockRedstoneOre.java	2012-11-29 21:15:21.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneOre.java	2012-11-29 21:41:55.000000000 -0800
@@ -8,6 +8,10 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.entity.EntityInteractEvent;
+import org.bukkit.event.player.PlayerInteractEvent;
 
 public class BlockRedstoneOre extends Block {
 
@@ -33,8 +37,21 @@
    }
 
    public void onEntityWalking(World var1, int var2, int var3, int var4, Entity var5) {
-      this.glow(var1, var2, var3, var4);
-      super.onEntityWalking(var1, var2, var3, var4, var5);
+      if(var5 instanceof EntityPlayer) {
+         PlayerInteractEvent var6 = CraftEventFactory.callPlayerInteractEvent((EntityPlayer)var5, Action.PHYSICAL, var2, var3, var4, -1, (ItemStack)null);
+         if(!var6.isCancelled()) {
+            this.glow(var1, var2, var3, var4);
+            super.onEntityWalking(var1, var2, var3, var4, var5);
+         }
+      } else {
+         EntityInteractEvent var7 = new EntityInteractEvent(var5.getBukkitEntity(), var1.getWorld().getBlockAt(var2, var3, var4));
+         var1.getServer().getPluginManager().callEvent(var7);
+         if(!var7.isCancelled()) {
+            this.glow(var1, var2, var3, var4);
+            super.onEntityWalking(var1, var2, var3, var4, var5);
+         }
+      }
+
    }
 
    public boolean onBlockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5, int var6, float var7, float var8, float var9) {
@@ -71,11 +88,15 @@
 
    public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6, int var7) {
       super.dropBlockAsItemWithChance(var1, var2, var3, var4, var5, var6, var7);
-      if(this.idDropped(var5, var1.rand, var7) != this.blockID) {
-         int var8 = 1 + var1.rand.nextInt(5);
-         this.dropXpOnBlockBreak(var1, var2, var3, var4, var8);
+   }
+
+   public int getExpDrop(World var1, int var2, int var3) {
+      if(this.idDropped(var2, var1.rand, var3) != this.blockID) {
+         int var4 = 1 + var1.rand.nextInt(5);
+         return var4;
+      } else {
+         return 0;
       }
-
    }
 
    private void sparkle(World var1, int var2, int var3, int var4) {
Binary files mcp-mcdev/net/minecraft/src/BlockRedstoneTorch.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneTorch.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockRedstoneTorch.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneTorch.java
--- mcp-mcdev/net/minecraft/src/BlockRedstoneTorch.java	2012-11-29 21:15:21.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneTorch.java	2012-11-29 21:41:55.000000000 -0800
@@ -11,6 +11,8 @@
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.RedstoneUpdateInfo;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
+import org.bukkit.plugin.PluginManager;
 
 public class BlockRedstoneTorch extends BlockTorch {
 
@@ -108,21 +110,41 @@
          var7.remove(0);
       }
 
+      PluginManager var8 = var1.getServer().getPluginManager();
+      org.bukkit.block.Block var9 = var1.getWorld().getBlockAt(var2, var3, var4);
+      int var10 = this.torchActive?15:0;
+      BlockRedstoneEvent var11 = new BlockRedstoneEvent(var9, var10, var10);
       if(this.torchActive) {
          if(var6) {
+            if(var10 != 0) {
+               var11.setNewCurrent(0);
+               var8.callEvent(var11);
+               if(var11.getNewCurrent() != 0) {
+                  return;
+               }
+            }
+
             var1.setBlockAndMetadataWithNotify(var2, var3, var4, Block.torchRedstoneIdle.blockID, var1.getBlockMetadata(var2, var3, var4));
             if(this.checkForBurnout(var1, var2, var3, var4, true)) {
                var1.playSoundEffect((double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), "random.fizz", 0.5F, 2.6F + (var1.rand.nextFloat() - var1.rand.nextFloat()) * 0.8F);
 
-               for(int var8 = 0; var8 < 5; ++var8) {
-                  double var9 = (double)var2 + var5.nextDouble() * 0.6D + 0.2D;
-                  double var11 = (double)var3 + var5.nextDouble() * 0.6D + 0.2D;
-                  double var13 = (double)var4 + var5.nextDouble() * 0.6D + 0.2D;
-                  var1.spawnParticle("smoke", var9, var11, var13, 0.0D, 0.0D, 0.0D);
+               for(int var12 = 0; var12 < 5; ++var12) {
+                  double var13 = (double)var2 + var5.nextDouble() * 0.6D + 0.2D;
+                  double var15 = (double)var3 + var5.nextDouble() * 0.6D + 0.2D;
+                  double var17 = (double)var4 + var5.nextDouble() * 0.6D + 0.2D;
+                  var1.spawnParticle("smoke", var13, var15, var17, 0.0D, 0.0D, 0.0D);
                }
             }
          }
       } else if(!var6 && !this.checkForBurnout(var1, var2, var3, var4, false)) {
+         if(var10 != 15) {
+            var11.setNewCurrent(15);
+            var8.callEvent(var11);
+            if(var11.getNewCurrent() != 15) {
+               return;
+            }
+         }
+
          var1.setBlockAndMetadataWithNotify(var2, var3, var4, Block.torchRedstoneActive.blockID, var1.getBlockMetadata(var2, var3, var4));
       }
 
Binary files mcp-mcdev/net/minecraft/src/BlockRedstoneWire.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneWire.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockRedstoneWire.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneWire.java
--- mcp-mcdev/net/minecraft/src/BlockRedstoneWire.java	2012-11-29 21:15:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockRedstoneWire.java	2012-11-29 21:41:54.000000000 -0800
@@ -1,7 +1,7 @@
 package net.minecraft.src;
 
 import java.util.ArrayList;
-import java.util.HashSet;
+import java.util.LinkedHashSet;
 import java.util.Random;
 import java.util.Set;
 import net.minecraft.src.AxisAlignedBB;
@@ -12,11 +12,12 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockRedstoneWire extends Block {
 
    private boolean wiresProvidePower = true;
-   private Set blocksNeedingUpdate = new HashSet();
+   private Set blocksNeedingUpdate = new LinkedHashSet();
 
 
    public BlockRedstoneWire(int var1, int var2) {
@@ -112,6 +113,12 @@
       }
 
       if(var8 != var9) {
+         BlockRedstoneEvent var14 = new BlockRedstoneEvent(var1.getWorld().getBlockAt(var2, var3, var4), var8, var9);
+         var1.getServer().getPluginManager().callEvent(var14);
+         var9 = var14.getNewCurrent();
+      }
+
+      if(var8 != var9) {
          var1.editingBlocks = true;
          var1.setBlockMetadataWithNotify(var2, var3, var4, var9);
          var1.markBlockRangeForRenderUpdate(var2, var3, var4, var2, var3, var4);
@@ -120,7 +127,7 @@
          for(var11 = 0; var11 < 4; ++var11) {
             var12 = var2;
             var13 = var4;
-            int var14 = var3 - 1;
+            int var17 = var3 - 1;
             if(var11 == 0) {
                var12 = var2 - 1;
             }
@@ -138,7 +145,7 @@
             }
 
             if(var1.isBlockNormalCube(var12, var3, var13)) {
-               var14 += 2;
+               var17 += 2;
             }
 
             boolean var15 = false;
@@ -152,14 +159,14 @@
                this.calculateCurrentChanges(var1, var12, var3, var13, var2, var3, var4);
             }
 
-            var16 = this.getMaxCurrentStrength(var1, var12, var14, var13, -1);
+            var16 = this.getMaxCurrentStrength(var1, var12, var17, var13, -1);
             var9 = var1.getBlockMetadata(var2, var3, var4);
             if(var9 > 0) {
                --var9;
             }
 
             if(var16 >= 0 && var16 != var9) {
-               this.calculateCurrentChanges(var1, var12, var14, var13, var2, var3, var4);
+               this.calculateCurrentChanges(var1, var12, var17, var13, var2, var3, var4);
             }
          }
 
@@ -186,40 +193,43 @@
          var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
          var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
       }
+
    }
 
    public void onBlockAdded(World var1, int var2, int var3, int var4) {
-      super.onBlockAdded(var1, var2, var3, var4);
-      if(!var1.isRemote) {
-         this.updateAndPropagateCurrentStrength(var1, var2, var3, var4);
-         var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
-         var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
-         this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3, var4);
-         this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3, var4);
-         this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 - 1);
-         this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 + 1);
-         if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 + 1, var4);
-         } else {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 - 1, var4);
-         }
-
-         if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 + 1, var4);
-         } else {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 - 1, var4);
-         }
-
-         if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 - 1);
-         } else {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 - 1);
-         }
-
-         if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 + 1);
-         } else {
-            this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 + 1);
+      if(!var1.editingBlocks) {
+         super.onBlockAdded(var1, var2, var3, var4);
+         if(!var1.isRemote) {
+            this.updateAndPropagateCurrentStrength(var1, var2, var3, var4);
+            var1.notifyBlocksOfNeighborChange(var2, var3 + 1, var4, this.blockID);
+            var1.notifyBlocksOfNeighborChange(var2, var3 - 1, var4, this.blockID);
+            this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3, var4);
+            this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3, var4);
+            this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 - 1);
+            this.notifyWireNeighborsOfNeighborChange(var1, var2, var3, var4 + 1);
+            if(var1.isBlockNormalCube(var2 - 1, var3, var4)) {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 + 1, var4);
+            } else {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2 - 1, var3 - 1, var4);
+            }
+
+            if(var1.isBlockNormalCube(var2 + 1, var3, var4)) {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 + 1, var4);
+            } else {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2 + 1, var3 - 1, var4);
+            }
+
+            if(var1.isBlockNormalCube(var2, var3, var4 - 1)) {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 - 1);
+            } else {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 - 1);
+            }
+
+            if(var1.isBlockNormalCube(var2, var3, var4 + 1)) {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 + 1, var4 + 1);
+            } else {
+               this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 + 1);
+            }
          }
 
       }
@@ -262,11 +272,11 @@
          } else {
             this.notifyWireNeighborsOfNeighborChange(var1, var2, var3 - 1, var4 + 1);
          }
-
       }
+
    }
 
-   private int getMaxCurrentStrength(World var1, int var2, int var3, int var4, int var5) {
+   public int getMaxCurrentStrength(World var1, int var2, int var3, int var4, int var5) {
       if(var1.getBlockId(var2, var3, var4) != this.blockID) {
          return var5;
       } else {
@@ -288,6 +298,7 @@
 
          super.onNeighborBlockChange(var1, var2, var3, var4, var5);
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/BlockReed.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockReed.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockReed.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockReed.java
--- mcp-mcdev/net/minecraft/src/BlockReed.java	2012-11-29 21:15:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockReed.java	2012-11-29 21:41:54.000000000 -0800
@@ -6,6 +6,7 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockReed extends Block {
 
@@ -27,7 +28,7 @@
          if(var6 < 3) {
             int var7 = var1.getBlockMetadata(var2, var3, var4);
             if(var7 == 15) {
-               var1.setBlockWithNotify(var2, var3 + 1, var4, this.blockID);
+               CraftEventFactory.handleBlockGrowEvent(var1, var2, var3 + 1, var4, this.blockID, 0);
                var1.setBlockMetadataWithNotify(var2, var3, var4, 0);
             } else {
                var1.setBlockMetadataWithNotify(var2, var3, var4, var7 + 1);
Binary files mcp-mcdev/net/minecraft/src/BlockSand.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSand.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockSand.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSand.java
--- mcp-mcdev/net/minecraft/src/BlockSand.java	2012-11-29 21:15:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSand.java	2012-11-29 21:41:54.000000000 -0800
@@ -38,12 +38,12 @@
 
    private void tryToFall(World var1, int var2, int var3, int var4) {
       if(canFallBelow(var1, var2, var3 - 1, var4) && var3 >= 0) {
-         byte var8 = 32;
-         if(!fallInstantly && var1.checkChunksExist(var2 - var8, var3 - var8, var4 - var8, var2 + var8, var3 + var8, var4 + var8)) {
+         byte var5 = 32;
+         if(!fallInstantly && var1.checkChunksExist(var2 - var5, var3 - var5, var4 - var5, var2 + var5, var3 + var5, var4 + var5)) {
             if(!var1.isRemote) {
-               EntityFallingSand var9 = new EntityFallingSand(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), this.blockID, var1.getBlockMetadata(var2, var3, var4));
-               this.onStartFalling(var9);
-               var1.spawnEntityInWorld(var9);
+               EntityFallingSand var6 = new EntityFallingSand(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F), this.blockID, var1.getBlockMetadata(var2, var3, var4));
+               this.onStartFalling(var6);
+               var1.spawnEntityInWorld(var6);
             }
          } else {
             var1.setBlockWithNotify(var2, var3, var4, 0);
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: BlockSapling$TreeGenerator.class
Binary files mcp-mcdev/net/minecraft/src/BlockSapling.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSapling.class differ
Only in mcp-mcdev/net/minecraft/src: BlockSapling.java
Binary files mcp-mcdev/net/minecraft/src/BlockSign.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSign.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockSign.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSign.java
--- mcp-mcdev/net/minecraft/src/BlockSign.java	2012-11-29 21:15:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSign.java	2012-11-29 21:41:54.000000000 -0800
@@ -2,12 +2,14 @@
 
 import java.util.Random;
 import net.minecraft.src.AxisAlignedBB;
+import net.minecraft.src.Block;
 import net.minecraft.src.BlockContainer;
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Item;
 import net.minecraft.src.Material;
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockSign extends BlockContainer {
 
@@ -53,8 +55,8 @@
          if(var5 == 5) {
             this.setBlockBounds(0.0F, var6, var8, var10, var7, var9);
          }
-
       }
+
    }
 
    public int getRenderType() {
@@ -117,5 +119,12 @@
       }
 
       super.onNeighborBlockChange(var1, var2, var3, var4, var5);
+      if(Block.blocksList[var5] != null && Block.blocksList[var5].canProvidePower()) {
+         org.bukkit.block.Block var10 = var1.getWorld().getBlockAt(var2, var3, var4);
+         int var8 = var10.getBlockPower();
+         BlockRedstoneEvent var9 = new BlockRedstoneEvent(var10, var8, var8);
+         var1.getServer().getPluginManager().callEvent(var9);
+      }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/BlockSkull.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSkull.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockSkull.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSkull.java
--- mcp-mcdev/net/minecraft/src/BlockSkull.java	2012-11-29 21:15:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSkull.java	2012-11-29 21:41:54.000000000 -0800
@@ -16,6 +16,8 @@
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.TileEntitySkull;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.util.BlockStateListPopulator;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class BlockSkull extends BlockContainer {
 
@@ -82,7 +84,19 @@
       return var1;
    }
 
-   public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6, int var7) {}
+   public void dropBlockAsItemWithChance(World var1, int var2, int var3, int var4, int var5, float var6, int var7) {
+      if(var1.rand.nextFloat() < var6) {
+         ItemStack var8 = new ItemStack(Item.skull.shiftedIndex, 1, this.getDamageValue(var1, var2, var3, var4));
+         TileEntitySkull var9 = (TileEntitySkull)var1.getBlockTileEntity(var2, var3, var4);
+         if(var9.func_82117_a() == 3 && var9.func_82120_c() != null && var9.func_82120_c().length() > 0) {
+            var8.setTagCompound(new NBTTagCompound());
+            var8.getTagCompound().setString("SkullOwner", var9.func_82120_c());
+         }
+
+         this.dropBlockAsItem_do(var1, var2, var3, var4, var8);
+      }
+
+   }
 
    public void onBlockHarvested(World var1, int var2, int var3, int var4, int var5, EntityPlayer var6) {
       if(var6.capabilities.isCreativeMode) {
@@ -95,19 +109,9 @@
 
    public void breakBlock(World var1, int var2, int var3, int var4, int var5, int var6) {
       if(!var1.isRemote) {
-         if((var6 & 8) == 0) {
-            ItemStack var7 = new ItemStack(Item.skull.shiftedIndex, 1, this.getDamageValue(var1, var2, var3, var4));
-            TileEntitySkull var8 = (TileEntitySkull)var1.getBlockTileEntity(var2, var3, var4);
-            if(var8.func_82117_a() == 3 && var8.func_82120_c() != null && var8.func_82120_c().length() > 0) {
-               var7.setTagCompound(new NBTTagCompound());
-               var7.getTagCompound().setString("SkullOwner", var8.func_82120_c());
-            }
-
-            this.dropBlockAsItem_do(var1, var2, var3, var4, var7);
-         }
-
          super.breakBlock(var1, var2, var3, var4, var5, var6);
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
@@ -119,73 +123,66 @@
          int var6 = Block.slowSand.blockID;
 
          int var7;
-         EntityWither var8;
-         int var9;
+         BlockStateListPopulator var8;
+         EntityWither var9;
+         int var10;
          for(var7 = -2; var7 <= 0; ++var7) {
             if(var1.getBlockId(var2, var3 - 1, var4 + var7) == var6 && var1.getBlockId(var2, var3 - 1, var4 + var7 + 1) == var6 && var1.getBlockId(var2, var3 - 2, var4 + var7 + 1) == var6 && var1.getBlockId(var2, var3 - 1, var4 + var7 + 2) == var6 && this.func_82528_d(var1, var2, var3, var4 + var7, 1) && this.func_82528_d(var1, var2, var3, var4 + var7 + 1, 1) && this.func_82528_d(var1, var2, var3, var4 + var7 + 2, 1)) {
+               var8 = new BlockStateListPopulator(var1.getWorld());
                var1.setBlockMetadata(var2, var3, var4 + var7, 8);
                var1.setBlockMetadata(var2, var3, var4 + var7 + 1, 8);
                var1.setBlockMetadata(var2, var3, var4 + var7 + 2, 8);
-               var1.setBlock(var2, var3, var4 + var7, 0);
-               var1.setBlock(var2, var3, var4 + var7 + 1, 0);
-               var1.setBlock(var2, var3, var4 + var7 + 2, 0);
-               var1.setBlock(var2, var3 - 1, var4 + var7, 0);
-               var1.setBlock(var2, var3 - 1, var4 + var7 + 1, 0);
-               var1.setBlock(var2, var3 - 1, var4 + var7 + 2, 0);
-               var1.setBlock(var2, var3 - 2, var4 + var7 + 1, 0);
+               var8.setTypeId(var2, var3, var4 + var7, 0);
+               var8.setTypeId(var2, var3, var4 + var7 + 1, 0);
+               var8.setTypeId(var2, var3, var4 + var7 + 2, 0);
+               var8.setTypeId(var2, var3 - 1, var4 + var7, 0);
+               var8.setTypeId(var2, var3 - 1, var4 + var7 + 1, 0);
+               var8.setTypeId(var2, var3 - 1, var4 + var7 + 2, 0);
+               var8.setTypeId(var2, var3 - 2, var4 + var7 + 1, 0);
                if(!var1.isRemote) {
-                  var8 = new EntityWither(var1);
-                  var8.setLocationAndAngles((double)var2 + 0.5D, (double)var3 - 1.45D, (double)(var4 + var7) + 1.5D, 90.0F, 0.0F);
-                  var8.renderYawOffset = 90.0F;
-                  var8.func_82206_m();
-                  var1.spawnEntityInWorld(var8);
+                  var9 = new EntityWither(var1);
+                  var9.setLocationAndAngles((double)var2 + 0.5D, (double)var3 - 1.45D, (double)(var4 + var7) + 1.5D, 90.0F, 0.0F);
+                  var9.renderYawOffset = 90.0F;
+                  var9.func_82206_m();
+                  if(var1.addEntity(var9, SpawnReason.BUILD_WITHER)) {
+                     var8.updateList();
+                  }
                }
 
-               for(var9 = 0; var9 < 120; ++var9) {
+               for(var10 = 0; var10 < 120; ++var10) {
                   var1.spawnParticle("snowballpoof", (double)var2 + var1.rand.nextDouble(), (double)(var3 - 2) + var1.rand.nextDouble() * 3.9D, (double)(var4 + var7 + 1) + var1.rand.nextDouble(), 0.0D, 0.0D, 0.0D);
                }
 
-               var1.notifyBlockChange(var2, var3, var4 + var7, 0);
-               var1.notifyBlockChange(var2, var3, var4 + var7 + 1, 0);
-               var1.notifyBlockChange(var2, var3, var4 + var7 + 2, 0);
-               var1.notifyBlockChange(var2, var3 - 1, var4 + var7, 0);
-               var1.notifyBlockChange(var2, var3 - 1, var4 + var7 + 1, 0);
-               var1.notifyBlockChange(var2, var3 - 1, var4 + var7 + 2, 0);
-               var1.notifyBlockChange(var2, var3 - 2, var4 + var7 + 1, 0);
                return;
             }
          }
 
          for(var7 = -2; var7 <= 0; ++var7) {
             if(var1.getBlockId(var2 + var7, var3 - 1, var4) == var6 && var1.getBlockId(var2 + var7 + 1, var3 - 1, var4) == var6 && var1.getBlockId(var2 + var7 + 1, var3 - 2, var4) == var6 && var1.getBlockId(var2 + var7 + 2, var3 - 1, var4) == var6 && this.func_82528_d(var1, var2 + var7, var3, var4, 1) && this.func_82528_d(var1, var2 + var7 + 1, var3, var4, 1) && this.func_82528_d(var1, var2 + var7 + 2, var3, var4, 1)) {
+               var8 = new BlockStateListPopulator(var1.getWorld());
                var1.setBlockMetadata(var2 + var7, var3, var4, 8);
                var1.setBlockMetadata(var2 + var7 + 1, var3, var4, 8);
                var1.setBlockMetadata(var2 + var7 + 2, var3, var4, 8);
-               var1.setBlock(var2 + var7, var3, var4, 0);
-               var1.setBlock(var2 + var7 + 1, var3, var4, 0);
-               var1.setBlock(var2 + var7 + 2, var3, var4, 0);
-               var1.setBlock(var2 + var7, var3 - 1, var4, 0);
-               var1.setBlock(var2 + var7 + 1, var3 - 1, var4, 0);
-               var1.setBlock(var2 + var7 + 2, var3 - 1, var4, 0);
-               var1.setBlock(var2 + var7 + 1, var3 - 2, var4, 0);
+               var8.setTypeId(var2 + var7, var3, var4, 0);
+               var8.setTypeId(var2 + var7 + 1, var3, var4, 0);
+               var8.setTypeId(var2 + var7 + 2, var3, var4, 0);
+               var8.setTypeId(var2 + var7, var3 - 1, var4, 0);
+               var8.setTypeId(var2 + var7 + 1, var3 - 1, var4, 0);
+               var8.setTypeId(var2 + var7 + 2, var3 - 1, var4, 0);
+               var8.setTypeId(var2 + var7 + 1, var3 - 2, var4, 0);
                if(!var1.isRemote) {
-                  var8 = new EntityWither(var1);
-                  var8.setLocationAndAngles((double)(var2 + var7) + 1.5D, (double)var3 - 1.45D, (double)var4 + 0.5D, 0.0F, 0.0F);
-                  var8.func_82206_m();
-                  var1.spawnEntityInWorld(var8);
+                  var9 = new EntityWither(var1);
+                  var9.setLocationAndAngles((double)(var2 + var7) + 1.5D, (double)var3 - 1.45D, (double)var4 + 0.5D, 0.0F, 0.0F);
+                  var9.func_82206_m();
+                  if(var1.addEntity(var9, SpawnReason.BUILD_WITHER)) {
+                     var8.updateList();
+                  }
                }
 
-               for(var9 = 0; var9 < 120; ++var9) {
+               for(var10 = 0; var10 < 120; ++var10) {
                   var1.spawnParticle("snowballpoof", (double)(var2 + var7 + 1) + var1.rand.nextDouble(), (double)(var3 - 2) + var1.rand.nextDouble() * 3.9D, (double)var4 + var1.rand.nextDouble(), 0.0D, 0.0D, 0.0D);
                }
 
-               var1.notifyBlockChange(var2 + var7, var3, var4, 0);
-               var1.notifyBlockChange(var2 + var7 + 1, var3, var4, 0);
-               var1.notifyBlockChange(var2 + var7 + 2, var3, var4, 0);
-               var1.notifyBlockChange(var2 + var7, var3 - 1, var4, 0);
-               var1.notifyBlockChange(var2 + var7 + 1, var3 - 1, var4, 0);
-               var1.notifyBlockChange(var2 + var7 + 2, var3 - 1, var4, 0);
-               var1.notifyBlockChange(var2 + var7 + 1, var3 - 2, var4, 0);
                return;
             }
          }
Binary files mcp-mcdev/net/minecraft/src/BlockSnow.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSnow.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockSnow.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSnow.java
--- mcp-mcdev/net/minecraft/src/BlockSnow.java	2012-11-29 21:15:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockSnow.java	2012-11-29 21:41:54.000000000 -0800
@@ -12,6 +12,7 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.StatList;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockSnow extends Block {
 
@@ -53,7 +54,8 @@
    private boolean canSnowStay(World var1, int var2, int var3, int var4) {
       if(!this.canPlaceBlockAt(var1, var2, var3, var4)) {
          this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4), 0);
-         var1.setBlockWithNotify(var2, var3, var4, 0);
+         var1.setBlock(var2, var3, var4, 0);
+         var1.markBlockForUpdate(var2, var3, var4);
          return false;
       } else {
          return true;
@@ -77,6 +79,10 @@
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
       if(var1.getSavedLightValue(EnumSkyBlock.Block, var2, var3, var4) > 11) {
+         if(CraftEventFactory.callBlockFadeEvent(var1.getWorld().getBlockAt(var2, var3, var4), 0).isCancelled()) {
+            return;
+         }
+
          this.dropBlockAsItem(var1, var2, var3, var4, var1.getBlockMetadata(var2, var3, var4), 0);
          var1.setBlockWithNotify(var2, var3, var4, 0);
       }
Binary files mcp-mcdev/net/minecraft/src/BlockStationary.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockStationary.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockStationary.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockStationary.java
--- mcp-mcdev/net/minecraft/src/BlockStationary.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockStationary.java	2012-11-29 21:41:53.000000000 -0800
@@ -6,6 +6,11 @@
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockIgniteEvent;
+import org.bukkit.event.block.BlockIgniteEvent.IgniteCause;
 
 public class BlockStationary extends BlockFluid {
 
@@ -42,35 +47,48 @@
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
       if(this.blockMaterial == Material.lava) {
          int var6 = var5.nextInt(3);
+         CraftWorld var7 = var1.getWorld();
+         IgniteCause var8 = IgniteCause.LAVA;
+         int var9 = 0;
+
+         while(true) {
+            int var10;
+            if(var9 >= var6) {
+               if(var6 == 0) {
+                  var9 = var2;
+                  var10 = var4;
+
+                  for(int var13 = 0; var13 < 3; ++var13) {
+                     var2 = var9 + var5.nextInt(3) - 1;
+                     var4 = var10 + var5.nextInt(3) - 1;
+                     if(var1.isAirBlock(var2, var3 + 1, var4) && this.isFlammable(var1, var2, var3, var4)) {
+                        org.bukkit.block.Block var12 = var7.getBlockAt(var2, var3 + 1, var4);
+                        if(var12.getTypeId() == Block.fire.blockID || !((BlockIgniteEvent)CraftEventFactory.callEvent(new BlockIgniteEvent(var12, var8, (Player)null))).isCancelled()) {
+                           var1.setBlockWithNotify(var2, var3 + 1, var4, Block.fire.blockID);
+                        }
+                     }
+                  }
+               }
+               break;
+            }
 
-         int var7;
-         int var8;
-         for(var7 = 0; var7 < var6; ++var7) {
             var2 += var5.nextInt(3) - 1;
             ++var3;
             var4 += var5.nextInt(3) - 1;
-            var8 = var1.getBlockId(var2, var3, var4);
-            if(var8 == 0) {
+            var10 = var1.getBlockId(var2, var3, var4);
+            if(var10 == 0) {
                if(this.isFlammable(var1, var2 - 1, var3, var4) || this.isFlammable(var1, var2 + 1, var3, var4) || this.isFlammable(var1, var2, var3, var4 - 1) || this.isFlammable(var1, var2, var3, var4 + 1) || this.isFlammable(var1, var2, var3 - 1, var4) || this.isFlammable(var1, var2, var3 + 1, var4)) {
-                  var1.setBlockWithNotify(var2, var3, var4, Block.fire.blockID);
-                  return;
+                  org.bukkit.block.Block var11 = var7.getBlockAt(var2, var3, var4);
+                  if(var11.getTypeId() == Block.fire.blockID || !((BlockIgniteEvent)CraftEventFactory.callEvent(new BlockIgniteEvent(var11, var8, (Player)null))).isCancelled()) {
+                     var1.setBlockWithNotify(var2, var3, var4, Block.fire.blockID);
+                     return;
+                  }
                }
-            } else if(Block.blocksList[var8].blockMaterial.blocksMovement()) {
+            } else if(Block.blocksList[var10].blockMaterial.blocksMovement()) {
                return;
             }
-         }
 
-         if(var6 == 0) {
-            var7 = var2;
-            var8 = var4;
-
-            for(int var9 = 0; var9 < 3; ++var9) {
-               var2 = var7 + var5.nextInt(3) - 1;
-               var4 = var8 + var5.nextInt(3) - 1;
-               if(var1.isAirBlock(var2, var3 + 1, var4) && this.isFlammable(var1, var2, var3, var4)) {
-                  var1.setBlockWithNotify(var2, var3 + 1, var4, Block.fire.blockID);
-               }
-            }
+            ++var9;
          }
       }
 
Binary files mcp-mcdev/net/minecraft/src/BlockStem.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockStem.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockStem.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockStem.java
--- mcp-mcdev/net/minecraft/src/BlockStem.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockStem.java	2012-11-29 21:41:53.000000000 -0800
@@ -8,6 +8,7 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockStem extends BlockFlower {
 
@@ -35,7 +36,7 @@
             int var7 = var1.getBlockMetadata(var2, var3, var4);
             if(var7 < 7) {
                ++var7;
-               var1.setBlockMetadataWithNotify(var2, var3, var4, var7);
+               CraftEventFactory.handleBlockGrowEvent(var1, var2, var3, var4, this.blockID, var7);
             } else {
                if(var1.getBlockId(var2 - 1, var3, var4) == this.fruitType.blockID) {
                   return;
@@ -74,7 +75,7 @@
 
                int var11 = var1.getBlockId(var9, var3 - 1, var10);
                if(var1.getBlockId(var9, var3, var10) == 0 && (var11 == Block.tilledField.blockID || var11 == Block.dirt.blockID || var11 == Block.grass.blockID)) {
-                  var1.setBlockWithNotify(var9, var3, var10, this.fruitType.blockID);
+                  CraftEventFactory.handleBlockGrowEvent(var1, var9, var3, var10, this.fruitType.blockID, 0);
                }
             }
          }
@@ -162,8 +163,8 @@
                this.dropBlockAsItem_do(var1, var2, var3, var4, new ItemStack(var8));
             }
          }
-
       }
+
    }
 
    public int idDropped(int var1, Random var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/BlockTNT.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTNT.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockTNT.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTNT.java
--- mcp-mcdev/net/minecraft/src/BlockTNT.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTNT.java	2012-11-29 21:41:53.000000000 -0800
@@ -25,7 +25,7 @@
 
    public void onBlockAdded(World var1, int var2, int var3, int var4) {
       super.onBlockAdded(var1, var2, var3, var4);
-      if(var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
+      if(!var1.editingBlocks && var1.isBlockIndirectlyGettingPowered(var2, var3, var4)) {
          this.onBlockDestroyedByPlayer(var1, var2, var3, var4, 1);
          var1.setBlockWithNotify(var2, var3, var4, 0);
       }
@@ -50,17 +50,16 @@
          var5.fuse = var1.rand.nextInt(var5.fuse / 4) + var5.fuse / 8;
          var1.spawnEntityInWorld(var5);
       }
+
    }
 
    public void onBlockDestroyedByPlayer(World var1, int var2, int var3, int var4, int var5) {
-      if(!var1.isRemote) {
-         if((var5 & 1) == 1) {
-            EntityTNTPrimed var6 = new EntityTNTPrimed(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F));
-            var1.spawnEntityInWorld(var6);
-            var1.playSoundAtEntity(var6, "random.fuse", 1.0F, 1.0F);
-         }
-
+      if(!var1.isRemote && (var5 & 1) == 1) {
+         EntityTNTPrimed var6 = new EntityTNTPrimed(var1, (double)((float)var2 + 0.5F), (double)((float)var3 + 0.5F), (double)((float)var4 + 0.5F));
+         var1.spawnEntityInWorld(var6);
+         var1.playSoundAtEntity(var6, "random.fuse", 1.0F, 1.0F);
       }
+
    }
 
    public boolean onBlockActivated(World var1, int var2, int var3, int var4, EntityPlayer var5, int var6, float var7, float var8, float var9) {
Binary files mcp-mcdev/net/minecraft/src/BlockTrapDoor.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTrapDoor.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockTrapDoor.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTrapDoor.java
--- mcp-mcdev/net/minecraft/src/BlockTrapDoor.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTrapDoor.java	2012-11-29 21:41:53.000000000 -0800
@@ -11,6 +11,8 @@
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockTrapDoor extends Block {
 
@@ -105,6 +107,7 @@
          var1.setBlockMetadataWithNotify(var2, var3, var4, var6 ^ 4);
          var1.playAuxSFXAtEntity((EntityPlayer)null, 1003, var2, var3, var4, 0);
       }
+
    }
 
    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
@@ -133,12 +136,19 @@
             this.dropBlockAsItem(var1, var2, var3, var4, var6, 0);
          }
 
-         boolean var9 = var1.isBlockIndirectlyGettingPowered(var2, var3, var4);
-         if(var9 || var5 > 0 && Block.blocksList[var5].canProvidePower()) {
-            this.onPoweredBlockChange(var1, var2, var3, var4, var9);
+         if(var5 == 0 || var5 > 0 && Block.blocksList[var5] != null && Block.blocksList[var5].canProvidePower()) {
+            CraftWorld var9 = var1.getWorld();
+            org.bukkit.block.Block var10 = var9.getBlockAt(var2, var3, var4);
+            int var11 = var10.getBlockPower();
+            int var12 = (var1.getBlockMetadata(var2, var3, var4) & 4) > 0?15:0;
+            if(var12 == 0 ^ var11 == 0 || Block.blocksList[var5] != null && Block.blocksList[var5].canProvidePower()) {
+               BlockRedstoneEvent var13 = new BlockRedstoneEvent(var10, var12, var11);
+               var1.getServer().getPluginManager().callEvent(var13);
+               this.onPoweredBlockChange(var1, var2, var3, var4, var13.getNewCurrent() > 0);
+            }
          }
-
       }
+
    }
 
    public MovingObjectPosition collisionRayTrace(World var1, int var2, int var3, int var4, Vec3 var5, Vec3 var6) {
Binary files mcp-mcdev/net/minecraft/src/BlockTripWire.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTripWire.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockTripWire.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTripWire.java
--- mcp-mcdev/net/minecraft/src/BlockTripWire.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTripWire.java	2012-11-29 21:41:52.000000000 -0800
@@ -10,8 +10,15 @@
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Item;
+import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.entity.EntityInteractEvent;
+import org.bukkit.plugin.PluginManager;
 
 public class BlockTripWire extends Block {
 
@@ -81,12 +88,10 @@
    }
 
    public void onBlockHarvested(World var1, int var2, int var3, int var4, int var5, EntityPlayer var6) {
-      if(!var1.isRemote) {
-         if(var6.getCurrentEquippedItem() != null && var6.getCurrentEquippedItem().itemID == Item.shears.shiftedIndex) {
-            var1.setBlockMetadataWithNotify(var2, var3, var4, var5 | 8);
-         }
-
+      if(!var1.isRemote && var6.getCurrentEquippedItem() != null && var6.getCurrentEquippedItem().itemID == Item.shears.shiftedIndex) {
+         var1.setBlockMetadataWithNotify(var2, var3, var4, var5 | 8);
       }
+
    }
 
    private void func_72149_e(World var1, int var2, int var3, int var4, int var5) {
@@ -119,19 +124,17 @@
    }
 
    public void onEntityCollidedWithBlock(World var1, int var2, int var3, int var4, Entity var5) {
-      if(!var1.isRemote) {
-         if((var1.getBlockMetadata(var2, var3, var4) & 1) != 1) {
-            this.updateTripWireState(var1, var2, var3, var4);
-         }
+      if(!var1.isRemote && (var1.getBlockMetadata(var2, var3, var4) & 1) != 1) {
+         this.updateTripWireState(var1, var2, var3, var4);
       }
+
    }
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
-      if(!var1.isRemote) {
-         if((var1.getBlockMetadata(var2, var3, var4) & 1) == 1) {
-            this.updateTripWireState(var1, var2, var3, var4);
-         }
+      if(!var1.isRemote && (var1.getBlockMetadata(var2, var3, var4) & 1) == 1) {
+         this.updateTripWireState(var1, var2, var3, var4);
       }
+
    }
 
    private void updateTripWireState(World var1, int var2, int var3, int var4) {
@@ -151,6 +154,33 @@
          }
       }
 
+      CraftWorld var14 = var1.getWorld();
+      PluginManager var15 = var1.getServer().getPluginManager();
+      if(var6 != var7 && var7) {
+         Iterator var11 = var8.iterator();
+
+         while(var11.hasNext()) {
+            Object var12 = var11.next();
+            if(var12 != null) {
+               Object var13;
+               if(var12 instanceof EntityPlayer) {
+                  var13 = CraftEventFactory.callPlayerInteractEvent((EntityPlayer)var12, Action.PHYSICAL, var2, var3, var4, -1, (ItemStack)null);
+               } else {
+                  if(!(var12 instanceof Entity)) {
+                     continue;
+                  }
+
+                  var13 = new EntityInteractEvent(((Entity)var12).getBukkitEntity(), var14.getBlockAt(var2, var3, var4));
+                  var15.callEvent((EntityInteractEvent)var13);
+               }
+
+               if(((Cancellable)var13).isCancelled()) {
+                  return;
+               }
+            }
+         }
+      }
+
       if(var7 && !var6) {
          var5 |= 1;
       }
Binary files mcp-mcdev/net/minecraft/src/BlockTripWireSource.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTripWireSource.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockTripWireSource.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTripWireSource.java
--- mcp-mcdev/net/minecraft/src/BlockTripWireSource.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockTripWireSource.java	2012-11-29 21:41:52.000000000 -0800
@@ -8,6 +8,7 @@
 import net.minecraft.src.IBlockAccess;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
+import org.bukkit.event.block.BlockRedstoneEvent;
 
 public class BlockTripWireSource extends Block {
 
@@ -71,34 +72,32 @@
    }
 
    public void onNeighborBlockChange(World var1, int var2, int var3, int var4, int var5) {
-      if(var5 != this.blockID) {
-         if(this.func_72144_l(var1, var2, var3, var4)) {
-            int var6 = var1.getBlockMetadata(var2, var3, var4);
-            int var7 = var6 & 3;
-            boolean var8 = false;
-            if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var7 == 3) {
-               var8 = true;
-            }
-
-            if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var7 == 1) {
-               var8 = true;
-            }
+      if(var5 != this.blockID && this.func_72144_l(var1, var2, var3, var4)) {
+         int var6 = var1.getBlockMetadata(var2, var3, var4);
+         int var7 = var6 & 3;
+         boolean var8 = false;
+         if(!var1.isBlockNormalCube(var2 - 1, var3, var4) && var7 == 3) {
+            var8 = true;
+         }
 
-            if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var7 == 0) {
-               var8 = true;
-            }
+         if(!var1.isBlockNormalCube(var2 + 1, var3, var4) && var7 == 1) {
+            var8 = true;
+         }
 
-            if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var7 == 2) {
-               var8 = true;
-            }
+         if(!var1.isBlockNormalCube(var2, var3, var4 - 1) && var7 == 0) {
+            var8 = true;
+         }
 
-            if(var8) {
-               this.dropBlockAsItem(var1, var2, var3, var4, var6, 0);
-               var1.setBlockWithNotify(var2, var3, var4, 0);
-            }
+         if(!var1.isBlockNormalCube(var2, var3, var4 + 1) && var7 == 2) {
+            var8 = true;
          }
 
+         if(var8) {
+            this.dropBlockAsItem(var1, var2, var3, var4, var6, 0);
+            var1.setBlockWithNotify(var2, var3, var4, 0);
+         }
       }
+
    }
 
    public void func_72143_a(World var1, int var2, int var3, int var4, int var5, int var6, boolean var7, int var8, int var9) {
@@ -161,31 +160,36 @@
          this.playSoundEffect(var1, var21, var3, var22, var13, var14, var11, var12);
       }
 
-      this.playSoundEffect(var1, var2, var3, var4, var13, var14, var11, var12);
-      if(var5 > 0) {
-         var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
-         if(var7) {
-            this.notifyNeighborOfChange(var1, var2, var3, var4, var10);
+      org.bukkit.block.Block var28 = var1.getWorld().getBlockAt(var2, var3, var4);
+      BlockRedstoneEvent var29 = new BlockRedstoneEvent(var28, 1, 0);
+      var1.getServer().getPluginManager().callEvent(var29);
+      if(var29.getNewCurrent() <= 0) {
+         this.playSoundEffect(var1, var2, var3, var4, var13, var14, var11, var12);
+         if(var5 > 0) {
+            var1.setBlockMetadataWithNotify(var2, var3, var4, var6);
+            if(var7) {
+               this.notifyNeighborOfChange(var1, var2, var3, var4, var10);
+            }
          }
-      }
 
-      if(var11 != var13) {
-         for(var21 = 1; var21 < var18; ++var21) {
-            var22 = var2 + var16 * var21;
-            var23 = var4 + var17 * var21;
-            var24 = var19[var21];
-            if(var24 >= 0) {
-               if(var13) {
-                  var24 |= 4;
-               } else {
-                  var24 &= -5;
-               }
+         if(var11 != var13) {
+            for(var21 = 1; var21 < var18; ++var21) {
+               var22 = var2 + var16 * var21;
+               var23 = var4 + var17 * var21;
+               var24 = var19[var21];
+               if(var24 >= 0) {
+                  if(var13) {
+                     var24 |= 4;
+                  } else {
+                     var24 &= -5;
+                  }
 
-               var1.setBlockMetadataWithNotify(var22, var3, var23, var24);
+                  var1.setBlockMetadataWithNotify(var22, var3, var23, var24);
+               }
             }
          }
-      }
 
+      }
    }
 
    public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
Binary files mcp-mcdev/net/minecraft/src/BlockVine.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockVine.class differ
diff -ur mcp-mcdev/net/minecraft/src/BlockVine.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockVine.java
--- mcp-mcdev/net/minecraft/src/BlockVine.java	2012-11-29 21:15:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/BlockVine.java	2012-11-29 21:41:52.000000000 -0800
@@ -12,6 +12,7 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.StatList;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class BlockVine extends Block {
 
@@ -168,7 +169,7 @@
          int var9;
          int var10;
          int var11;
-         label138:
+         label135:
          for(var9 = var2 - var6; var9 <= var2 + var6; ++var9) {
             for(var10 = var4 - var6; var10 <= var4 + var6; ++var10) {
                for(var11 = var3 - 1; var11 <= var3 + 1; ++var11) {
@@ -176,7 +177,7 @@
                      --var7;
                      if(var7 <= 0) {
                         var8 = true;
-                        break label138;
+                        break label135;
                      }
                   }
                }
@@ -188,6 +189,7 @@
          var11 = Direction.vineGrowth[var10];
          int var12;
          int var13;
+         org.bukkit.block.Block var15;
          if(var10 == 1 && var3 < 255 && var1.isAirBlock(var2, var3 + 1, var4)) {
             if(var8) {
                return;
@@ -202,11 +204,14 @@
                }
 
                if(var12 > 0) {
-                  var1.setBlockAndMetadataWithNotify(var2, var3 + 1, var4, this.blockID, var12);
+                  org.bukkit.block.Block var17 = var1.getWorld().getBlockAt(var2, var3, var4);
+                  var15 = var1.getWorld().getBlockAt(var2, var3 + 1, var4);
+                  CraftEventFactory.handleBlockSpreadEvent(var15, var17, this.blockID, var13);
                }
             }
          } else {
             int var14;
+            org.bukkit.block.Block var16;
             if(var10 >= 2 && var10 <= 5 && (var9 & 1 << var11) == 0) {
                if(var8) {
                   return;
@@ -220,16 +225,20 @@
                } else {
                   var13 = var11 + 1 & 3;
                   var14 = var11 + 3 & 3;
+                  var15 = var1.getWorld().getBlockAt(var2, var3, var4);
+                  var16 = var1.getWorld().getBlockAt(var2 + Direction.offsetX[var11], var3, var4 + Direction.offsetZ[var11]);
                   if((var9 & 1 << var13) != 0 && this.canBePlacedOn(var1.getBlockId(var2 + Direction.offsetX[var11] + Direction.offsetX[var13], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var13]))) {
-                     var1.setBlockAndMetadataWithNotify(var2 + Direction.offsetX[var11], var3, var4 + Direction.offsetZ[var11], this.blockID, 1 << var13);
+                     CraftEventFactory.handleBlockSpreadEvent(var16, var15, this.blockID, 1 << var13);
                   } else if((var9 & 1 << var14) != 0 && this.canBePlacedOn(var1.getBlockId(var2 + Direction.offsetX[var11] + Direction.offsetX[var14], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var14]))) {
-                     var1.setBlockAndMetadataWithNotify(var2 + Direction.offsetX[var11], var3, var4 + Direction.offsetZ[var11], this.blockID, 1 << var14);
+                     CraftEventFactory.handleBlockSpreadEvent(var16, var15, this.blockID, 1 << var14);
                   } else if((var9 & 1 << var13) != 0 && var1.isAirBlock(var2 + Direction.offsetX[var11] + Direction.offsetX[var13], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var13]) && this.canBePlacedOn(var1.getBlockId(var2 + Direction.offsetX[var13], var3, var4 + Direction.offsetZ[var13]))) {
-                     var1.setBlockAndMetadataWithNotify(var2 + Direction.offsetX[var11] + Direction.offsetX[var13], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var13], this.blockID, 1 << (var11 + 2 & 3));
+                     var16 = var1.getWorld().getBlockAt(var2 + Direction.offsetX[var11] + Direction.offsetX[var13], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var13]);
+                     CraftEventFactory.handleBlockSpreadEvent(var16, var15, this.blockID, 1 << (var11 + 2 & 3));
                   } else if((var9 & 1 << var14) != 0 && var1.isAirBlock(var2 + Direction.offsetX[var11] + Direction.offsetX[var14], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var14]) && this.canBePlacedOn(var1.getBlockId(var2 + Direction.offsetX[var14], var3, var4 + Direction.offsetZ[var14]))) {
-                     var1.setBlockAndMetadataWithNotify(var2 + Direction.offsetX[var11] + Direction.offsetX[var14], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var14], this.blockID, 1 << (var11 + 2 & 3));
+                     var16 = var1.getWorld().getBlockAt(var2 + Direction.offsetX[var11] + Direction.offsetX[var14], var3, var4 + Direction.offsetZ[var11] + Direction.offsetZ[var14]);
+                     CraftEventFactory.handleBlockSpreadEvent(var16, var15, this.blockID, 1 << (var11 + 2 & 3));
                   } else if(this.canBePlacedOn(var1.getBlockId(var2 + Direction.offsetX[var11], var3 + 1, var4 + Direction.offsetZ[var11]))) {
-                     var1.setBlockAndMetadataWithNotify(var2 + Direction.offsetX[var11], var3, var4 + Direction.offsetZ[var11], this.blockID, 0);
+                     CraftEventFactory.handleBlockSpreadEvent(var16, var15, this.blockID, 0);
                   }
                }
             } else if(var3 > 1) {
@@ -237,7 +246,9 @@
                if(var12 == 0) {
                   var13 = var1.rand.nextInt(16) & var9;
                   if(var13 > 0) {
-                     var1.setBlockAndMetadataWithNotify(var2, var3 - 1, var4, this.blockID, var13);
+                     var15 = var1.getWorld().getBlockAt(var2, var3, var4);
+                     var16 = var1.getWorld().getBlockAt(var2, var3 - 1, var4);
+                     CraftEventFactory.handleBlockSpreadEvent(var16, var15, this.blockID, var13);
                   }
                } else if(var12 == this.blockID) {
                   var13 = var1.rand.nextInt(16) & var9;
Binary files mcp-mcdev/net/minecraft/src/CallableSuspiciousClasses.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CallableSuspiciousClasses.class differ
diff -ur mcp-mcdev/net/minecraft/src/CallableSuspiciousClasses.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CallableSuspiciousClasses.java
--- mcp-mcdev/net/minecraft/src/CallableSuspiciousClasses.java	2012-11-29 21:15:18.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CallableSuspiciousClasses.java	2012-11-29 21:41:52.000000000 -0800
@@ -36,7 +36,7 @@
          Class var9 = (Class)var8.next();
          if(var9 != null) {
             String var10 = var9.getCanonicalName();
-            if(var10 != null && !var10.startsWith("org.lwjgl.") && !var10.startsWith("paulscode.") && !var10.startsWith("org.bouncycastle.") && !var10.startsWith("argo.") && !var10.startsWith("com.jcraft.") && !var10.equals("util.GLX")) {
+            if(var10 != null && !var10.startsWith("org.lwjgl.") && !var10.startsWith("paulscode.") && !var10.startsWith("net.minecraft.org.bouncycastle.") && !var10.startsWith("argo.") && !var10.startsWith("com.jcraft.") && !var10.equals("util.GLX")) {
                if(var5) {
                   if(var10.length() <= 3 || var10.equals("net.minecraft.client.MinecraftApplet") || var10.equals("net.minecraft.client.Minecraft") || var10.equals("net.minecraft.client.ClientBrandRetriever") || var10.equals("net.minecraft.server.MinecraftServer")) {
                      continue;
Binary files mcp-mcdev/net/minecraft/src/Chunk.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Chunk.class differ
diff -ur mcp-mcdev/net/minecraft/src/Chunk.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Chunk.java
--- mcp-mcdev/net/minecraft/src/Chunk.java	2012-11-29 21:15:18.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Chunk.java	2012-11-29 21:41:52.000000000 -0800
@@ -1,6 +1,5 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -11,9 +10,12 @@
 import net.minecraft.src.BiomeGenBase;
 import net.minecraft.src.Block;
 import net.minecraft.src.BlockContainer;
+import net.minecraft.src.BlockPistonBase;
 import net.minecraft.src.ChunkCoordIntPair;
 import net.minecraft.src.ChunkPosition;
+import net.minecraft.src.EmptyChunk;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EnumSkyBlock;
 import net.minecraft.src.ExtendedBlockStorage;
 import net.minecraft.src.IChunkProvider;
@@ -23,6 +25,10 @@
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldChunkManager;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftChunk;
+import org.bukkit.craftbukkit.util.UnsafeList;
 
 public class Chunk {
 
@@ -47,6 +53,8 @@
    public int field_82912_p;
    private int queuedLightChecks;
    boolean field_76653_p;
+   public org.bukkit.Chunk bukkitChunk;
+   public boolean mustSave;
 
 
    public Chunk(World var1, int var2, int var3) {
@@ -71,11 +79,15 @@
       this.heightMap = new int[256];
 
       for(int var4 = 0; var4 < this.entityLists.length; ++var4) {
-         this.entityLists[var4] = new ArrayList();
+         this.entityLists[var4] = new UnsafeList();
       }
 
       Arrays.fill(this.precipitationHeightMap, -999);
       Arrays.fill(this.blockBiomeArray, (byte)-1);
+      if(!(this instanceof EmptyChunk)) {
+         this.bukkitChunk = new CraftChunk(this);
+      }
+
    }
 
    public Chunk(World var1, byte[] var2, int var3, int var4) {
@@ -266,7 +278,7 @@
          int var6 = this.xPosition * 16 + var1;
          int var7 = this.zPosition * 16 + var3;
          int var8;
-         int var12;
+         int var10;
          if(!this.worldObj.provider.hasNoSky) {
             ExtendedBlockStorage var9;
             if(var5 < var4) {
@@ -291,29 +303,29 @@
 
             while(var5 > 0 && var8 > 0) {
                --var5;
-               var12 = this.getBlockLightOpacity(var1, var5, var3);
-               if(var12 == 0) {
-                  var12 = 1;
+               var10 = this.getBlockLightOpacity(var1, var5, var3);
+               if(var10 == 0) {
+                  var10 = 1;
                }
 
-               var8 -= var12;
+               var8 -= var10;
                if(var8 < 0) {
                   var8 = 0;
                }
 
-               ExtendedBlockStorage var10 = this.storageArrays[var5 >> 4];
-               if(var10 != null) {
-                  var10.setExtSkylightValue(var1, var5 & 15, var3, var8);
+               ExtendedBlockStorage var11 = this.storageArrays[var5 >> 4];
+               if(var11 != null) {
+                  var11.setExtSkylightValue(var1, var5 & 15, var3, var8);
                }
             }
          }
 
          var8 = this.heightMap[var3 << 4 | var1];
-         var12 = var4;
-         int var13 = var8;
+         var10 = var4;
+         int var12 = var8;
          if(var8 < var4) {
-            var12 = var8;
-            var13 = var4;
+            var10 = var8;
+            var12 = var4;
          }
 
          if(var8 < this.field_82912_p) {
@@ -321,15 +333,16 @@
          }
 
          if(!this.worldObj.provider.hasNoSky) {
-            this.updateSkylightNeighborHeight(var6 - 1, var7, var12, var13);
-            this.updateSkylightNeighborHeight(var6 + 1, var7, var12, var13);
-            this.updateSkylightNeighborHeight(var6, var7 - 1, var12, var13);
-            this.updateSkylightNeighborHeight(var6, var7 + 1, var12, var13);
-            this.updateSkylightNeighborHeight(var6, var7, var12, var13);
+            this.updateSkylightNeighborHeight(var6 - 1, var7, var10, var12);
+            this.updateSkylightNeighborHeight(var6 + 1, var7, var10, var12);
+            this.updateSkylightNeighborHeight(var6, var7 - 1, var10, var12);
+            this.updateSkylightNeighborHeight(var6, var7 + 1, var10, var12);
+            this.updateSkylightNeighborHeight(var6, var7, var10, var12);
          }
 
          this.isModified = true;
       }
+
    }
 
    public int getBlockLightOpacity(int var1, int var2, int var3) {
@@ -416,11 +429,15 @@
 
             TileEntity var14;
             if(var4 != 0) {
-               if(!this.worldObj.isRemote) {
+               if(!this.worldObj.isRemote && (!(Block.blocksList[var4] instanceof BlockPistonBase) || var9 != 0)) {
                   Block.blocksList[var4].onBlockAdded(this.worldObj, var12, var2, var13);
                }
 
                if(Block.blocksList[var4] instanceof BlockContainer) {
+                  if(this.getBlockID(var1, var2, var3) != var4) {
+                     return false;
+                  }
+
                   var14 = this.getChunkBlockTileEntity(var1, var2, var3);
                   if(var14 == null) {
                      var14 = ((BlockContainer)Block.blocksList[var4]).createNewTileEntity(this.worldObj);
@@ -494,9 +511,7 @@
 
    public int getBlockLightValue(int var1, int var2, int var3, int var4) {
       ExtendedBlockStorage var5 = this.storageArrays[var2 >> 4];
-      if(var5 == null) {
-         return !this.worldObj.provider.hasNoSky && var4 < EnumSkyBlock.Sky.defaultLightValue?EnumSkyBlock.Sky.defaultLightValue - var4:0;
-      } else {
+      if(var5 != null) {
          int var6 = this.worldObj.provider.hasNoSky?0:var5.getExtSkylightValue(var1, var2 & 15, var3);
          if(var6 > 0) {
             isLit = true;
@@ -509,6 +524,8 @@
          }
 
          return var6;
+      } else {
+         return !this.worldObj.provider.hasNoSky && var4 < EnumSkyBlock.Sky.defaultLightValue?EnumSkyBlock.Sky.defaultLightValue - var4:0;
       }
    }
 
@@ -517,8 +534,8 @@
       int var2 = MathHelper.floor_double(var1.posX / 16.0D);
       int var3 = MathHelper.floor_double(var1.posZ / 16.0D);
       if(var2 != this.xPosition || var3 != this.zPosition) {
-         System.out.println("Wrong location! " + var1);
-         Thread.dumpStack();
+         Bukkit.getLogger().warning("Wrong location for " + var1 + " in world \'" + this.worldObj.getWorld().getName() + "\'!");
+         Bukkit.getLogger().warning("Entity is at " + var1.posX + "," + var1.posZ + " (chunk " + var2 + "," + var3 + ") but was stored in chunk " + this.xPosition + "," + this.zPosition);
       }
 
       int var4 = MathHelper.floor_double(var1.posY / 16.0D);
@@ -602,7 +619,12 @@
       if(this.getBlockID(var1, var2, var3) != 0 && Block.blocksList[this.getBlockID(var1, var2, var3)] instanceof BlockContainer) {
          var4.validate();
          this.chunkTileEntityMap.put(var5, var4);
+      } else {
+         System.out.println("Attempted to place a tile entity (" + var4 + ") at " + var4.xCoord + "," + var4.yCoord + "," + var4.zCoord + " (" + org.bukkit.Material.getMaterial(this.getBlockID(var1, var2, var3)) + ") where there was no entity tile!");
+         System.out.println("Chunk coordinates: " + this.xPosition * 16 + "," + this.zPosition * 16);
+         (new Exception()).printStackTrace();
       }
+
    }
 
    public void removeChunkBlockTileEntity(int var1, int var2, int var3) {
@@ -635,8 +657,19 @@
          this.worldObj.markTileEntityForDespawn(var2);
       }
 
-      for(int var3 = 0; var3 < this.entityLists.length; ++var3) {
-         this.worldObj.unloadEntities(this.entityLists[var3]);
+      for(int var7 = 0; var7 < this.entityLists.length; ++var7) {
+         Iterator var3 = this.entityLists[var7].iterator();
+
+         while(var3.hasNext()) {
+            Entity var4 = (Entity)var3.next();
+            int var5 = Location.locToBlock(var4.posX) >> 4;
+            int var6 = Location.locToBlock(var4.posZ) >> 4;
+            if(var4 instanceof EntityPlayerMP && (var5 != this.xPosition || var6 != this.zPosition)) {
+               var3.remove();
+            }
+         }
+
+         this.worldObj.unloadEntities(this.entityLists[var7]);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/ChunkProviderServer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ChunkProviderServer.class differ
diff -ur mcp-mcdev/net/minecraft/src/ChunkProviderServer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ChunkProviderServer.java
--- mcp-mcdev/net/minecraft/src/ChunkProviderServer.java	2012-11-29 21:15:16.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ChunkProviderServer.java	2012-11-29 21:41:49.000000000 -0800
@@ -1,13 +1,11 @@
 package net.minecraft.src;
 
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Set;
+import java.util.Random;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.src.BlockSand;
 import net.minecraft.src.Chunk;
-import net.minecraft.src.ChunkCoordIntPair;
 import net.minecraft.src.ChunkCoordinates;
 import net.minecraft.src.ChunkPosition;
 import net.minecraft.src.CrashReport;
@@ -17,22 +15,28 @@
 import net.minecraft.src.IChunkLoader;
 import net.minecraft.src.IChunkProvider;
 import net.minecraft.src.IProgressUpdate;
-import net.minecraft.src.LongHashMap;
-import net.minecraft.src.MinecraftException;
 import net.minecraft.src.ReportedException;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldServer;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.util.LongHash;
+import org.bukkit.craftbukkit.util.LongHashSet;
+import org.bukkit.craftbukkit.util.LongObjectHashMap;
+import org.bukkit.event.world.ChunkLoadEvent;
+import org.bukkit.event.world.ChunkPopulateEvent;
+import org.bukkit.event.world.ChunkUnloadEvent;
+import org.bukkit.generator.BlockPopulator;
 
 public class ChunkProviderServer implements IChunkProvider {
 
-   private Set droppedChunksSet = new HashSet();
-   private Chunk dummyChunk;
-   private IChunkProvider serverChunkGenerator;
+   public LongHashSet droppedChunksSet = new LongHashSet();
+   public Chunk dummyChunk;
+   public IChunkProvider serverChunkGenerator;
    private IChunkLoader chunkLoader;
-   public boolean chunkLoadOverride = true;
-   private LongHashMap id2ChunkMap = new LongHashMap();
-   private List loadedChunks = new ArrayList();
-   private WorldServer world;
+   public boolean chunkLoadOverride = false;
+   public LongObjectHashMap id2ChunkMap = new LongObjectHashMap();
+   public WorldServer world;
 
 
    public ChunkProviderServer(WorldServer var1, IChunkLoader var2, IChunkProvider var3) {
@@ -43,7 +47,7 @@
    }
 
    public boolean chunkExists(int var1, int var2) {
-      return this.id2ChunkMap.containsItem(ChunkCoordIntPair.chunkXZ2Int(var1, var2));
+      return this.id2ChunkMap.containsKey(LongHash.toLong(var1, var2));
    }
 
    public void dropChunk(int var1, int var2) {
@@ -52,17 +56,25 @@
          int var4 = var1 * 16 + 8 - var3.posX;
          int var5 = var2 * 16 + 8 - var3.posZ;
          short var6 = 128;
-         if(var4 < -var6 || var4 > var6 || var5 < -var6 || var5 > var6) {
-            this.droppedChunksSet.add(Long.valueOf(ChunkCoordIntPair.chunkXZ2Int(var1, var2)));
+         if(var4 < -var6 || var4 > var6 || var5 < -var6 || var5 > var6 || !this.world.keepSpawnInMemory) {
+            this.droppedChunksSet.add(var1, var2);
+            Chunk var7 = (Chunk)this.id2ChunkMap.get(LongHash.toLong(var1, var2));
+            if(var7 != null) {
+               var7.mustSave = true;
+            }
          }
       } else {
-         this.droppedChunksSet.add(Long.valueOf(ChunkCoordIntPair.chunkXZ2Int(var1, var2)));
+         this.droppedChunksSet.add(var1, var2);
+         Chunk var8 = (Chunk)this.id2ChunkMap.get(LongHash.toLong(var1, var2));
+         if(var8 != null) {
+            var8.mustSave = true;
+         }
       }
 
    }
 
    public void unloadAllChunks() {
-      Iterator var1 = this.loadedChunks.iterator();
+      Iterator var1 = this.id2ChunkMap.values().iterator();
 
       while(var1.hasNext()) {
          Chunk var2 = (Chunk)var1.next();
@@ -72,46 +84,65 @@
    }
 
    public Chunk loadChunk(int var1, int var2) {
-      long var3 = ChunkCoordIntPair.chunkXZ2Int(var1, var2);
-      this.droppedChunksSet.remove(Long.valueOf(var3));
-      Chunk var5 = (Chunk)this.id2ChunkMap.getValueByKey(var3);
-      if(var5 == null) {
-         var5 = this.loadChunkFromFile(var1, var2);
-         if(var5 == null) {
+      this.droppedChunksSet.remove(var1, var2);
+      Chunk var3 = (Chunk)this.id2ChunkMap.get(LongHash.toLong(var1, var2));
+      boolean var4 = false;
+      if(var3 == null) {
+         var3 = this.loadChunkFromFile(var1, var2);
+         if(var3 == null) {
             if(this.serverChunkGenerator == null) {
-               var5 = this.dummyChunk;
+               var3 = this.dummyChunk;
             } else {
                try {
-                  var5 = this.serverChunkGenerator.provideChunk(var1, var2);
-               } catch (Throwable var9) {
-                  CrashReport var7 = CrashReport.func_85055_a(var9, "Exception generating new chunk");
-                  CrashReportCategory var8 = var7.func_85058_a("Chunk to be generated");
-                  var8.addCrashSection("Location", String.format("%d,%d", new Object[]{Integer.valueOf(var1), Integer.valueOf(var2)}));
-                  var8.addCrashSection("Position hash", Long.valueOf(var3));
-                  var8.addCrashSection("Generator", this.serverChunkGenerator.makeString());
-                  throw new ReportedException(var7);
+                  var3 = this.serverChunkGenerator.provideChunk(var1, var2);
+               } catch (Throwable var8) {
+                  CrashReport var6 = CrashReport.func_85055_a(var8, "Exception generating new chunk");
+                  CrashReportCategory var7 = var6.func_85058_a("Chunk to be generated");
+                  var7.addCrashSection("Location", String.format("%d,%d", new Object[]{Integer.valueOf(var1), Integer.valueOf(var2)}));
+                  var7.addCrashSection("Position hash", Long.valueOf(LongHash.toLong(var1, var2)));
+                  var7.addCrashSection("Generator", this.serverChunkGenerator.makeString());
+                  throw new ReportedException(var6);
                }
             }
+
+            var4 = true;
          }
 
-         this.id2ChunkMap.add(var3, var5);
-         this.loadedChunks.add(var5);
+         this.id2ChunkMap.put(LongHash.toLong(var1, var2), var3);
+         if(var3 != null) {
+            var3.onChunkLoad();
+         }
+
+         CraftServer var5 = this.world.getServer();
          if(var5 != null) {
-            var5.onChunkLoad();
+            var5.getPluginManager().callEvent(new ChunkLoadEvent(var3.bukkitChunk, var4));
          }
 
-         var5.populateChunk(this, this, var1, var2);
+         var3.populateChunk(this, this, var1, var2);
       }
 
-      return var5;
+      return var3;
    }
 
    public Chunk provideChunk(int var1, int var2) {
-      Chunk var3 = (Chunk)this.id2ChunkMap.getValueByKey(ChunkCoordIntPair.chunkXZ2Int(var1, var2));
-      return var3 == null?(!this.world.findingSpawnPoint && !this.chunkLoadOverride?this.dummyChunk:this.loadChunk(var1, var2)):var3;
+      Chunk var3 = (Chunk)this.id2ChunkMap.get(LongHash.toLong(var1, var2));
+      var3 = var3 == null?(!this.world.findingSpawnPoint && !this.chunkLoadOverride?this.dummyChunk:this.loadChunk(var1, var2)):var3;
+      if(var3 == this.dummyChunk) {
+         return var3;
+      } else {
+         if(var1 != var3.xPosition || var2 != var3.zPosition) {
+            MinecraftServer.logger.severe("Chunk (" + var3.xPosition + ", " + var3.zPosition + ") stored at  (" + var1 + ", " + var2 + ") in world \'" + this.world.getWorld().getName() + "\'");
+            MinecraftServer.logger.severe(var3.getClass().getName());
+            Throwable var4 = new Throwable();
+            var4.fillInStackTrace();
+            var4.printStackTrace();
+         }
+
+         return var3;
+      }
    }
 
-   private Chunk loadChunkFromFile(int var1, int var2) {
+   public Chunk loadChunkFromFile(int var1, int var2) {
       if(this.chunkLoader == null) {
          return null;
       } else {
@@ -132,29 +163,27 @@
       }
    }
 
-   private void saveChunkExtraData(Chunk var1) {
+   public void saveChunkExtraData(Chunk var1) {
       if(this.chunkLoader != null) {
          try {
             this.chunkLoader.saveExtraChunkData(this.world, var1);
          } catch (Exception var3) {
             var3.printStackTrace();
          }
-
       }
+
    }
 
-   private void saveChunkData(Chunk var1) {
+   public void saveChunkData(Chunk var1) {
       if(this.chunkLoader != null) {
          try {
             var1.lastSaveTime = this.world.getTotalWorldTime();
             this.chunkLoader.saveChunk(this.world, var1);
-         } catch (IOException var3) {
+         } catch (Exception var3) {
             var3.printStackTrace();
-         } catch (MinecraftException var4) {
-            var4.printStackTrace();
          }
-
       }
+
    }
 
    public void populate(IChunkProvider var1, int var2, int var3) {
@@ -163,6 +192,24 @@
          var4.isTerrainPopulated = true;
          if(this.serverChunkGenerator != null) {
             this.serverChunkGenerator.populate(var1, var2, var3);
+            BlockSand.fallInstantly = true;
+            Random var5 = new Random();
+            var5.setSeed(this.world.getSeed());
+            long var6 = var5.nextLong() / 2L * 2L + 1L;
+            long var8 = var5.nextLong() / 2L * 2L + 1L;
+            var5.setSeed((long)var2 * var6 + (long)var3 * var8 ^ this.world.getSeed());
+            CraftWorld var10 = this.world.getWorld();
+            if(var10 != null) {
+               Iterator var11 = var10.getPopulators().iterator();
+
+               while(var11.hasNext()) {
+                  BlockPopulator var12 = (BlockPopulator)var11.next();
+                  var12.populate(var10, var5, var4.bukkitChunk);
+               }
+            }
+
+            BlockSand.fallInstantly = false;
+            this.world.getServer().getPluginManager().callEvent(new ChunkPopulateEvent(var4.bukkitChunk));
             var4.setChunkModified();
          }
       }
@@ -171,9 +218,10 @@
 
    public boolean saveChunks(boolean var1, IProgressUpdate var2) {
       int var3 = 0;
+      Iterator var4 = this.id2ChunkMap.values().iterator();
 
-      for(int var4 = 0; var4 < this.loadedChunks.size(); ++var4) {
-         Chunk var5 = (Chunk)this.loadedChunks.get(var4);
+      while(var4.hasNext()) {
+         Chunk var5 = (Chunk)var4.next();
          if(var1) {
             this.saveChunkExtraData(var5);
          }
@@ -201,16 +249,20 @@
 
    public boolean unload100OldestChunks() {
       if(!this.world.levelSaving) {
-         for(int var1 = 0; var1 < 100; ++var1) {
-            if(!this.droppedChunksSet.isEmpty()) {
-               Long var2 = (Long)this.droppedChunksSet.iterator().next();
-               Chunk var3 = (Chunk)this.id2ChunkMap.getValueByKey(var2.longValue());
-               var3.onChunkUnload();
-               this.saveChunkData(var3);
-               this.saveChunkExtraData(var3);
-               this.droppedChunksSet.remove(var2);
-               this.id2ChunkMap.remove(var2.longValue());
-               this.loadedChunks.remove(var3);
+         CraftServer var1 = this.world.getServer();
+
+         for(int var2 = 0; var2 < 100 && !this.droppedChunksSet.isEmpty(); ++var2) {
+            long var3 = this.droppedChunksSet.popFirst();
+            Chunk var5 = (Chunk)this.id2ChunkMap.get(var3);
+            if(var5 != null) {
+               ChunkUnloadEvent var6 = new ChunkUnloadEvent(var5.bukkitChunk);
+               var1.getPluginManager().callEvent(var6);
+               if(!var6.isCancelled()) {
+                  var5.onChunkUnload();
+                  this.saveChunkData(var5);
+                  this.saveChunkExtraData(var5);
+                  this.id2ChunkMap.remove(var3);
+               }
             }
          }
 
@@ -227,7 +279,7 @@
    }
 
    public String makeString() {
-      return "ServerChunkCache: " + this.id2ChunkMap.getNumHashElements() + " Drop: " + this.droppedChunksSet.size();
+      return "ServerChunkCache: " + this.id2ChunkMap.values().size() + " Drop: " + this.droppedChunksSet.size();
    }
 
    public List getPossibleCreatures(EnumCreatureType var1, int var2, int var3, int var4) {
@@ -239,7 +291,7 @@
    }
 
    public int getLoadedChunkCount() {
-      return this.id2ChunkMap.getNumHashElements();
+      return this.id2ChunkMap.values().size();
    }
 
    public void recreateStructures(int var1, int var2) {}
Binary files mcp-mcdev/net/minecraft/src/ConsoleLogFormatter.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ConsoleLogFormatter.class differ
diff -ur mcp-mcdev/net/minecraft/src/ConsoleLogFormatter.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ConsoleLogFormatter.java
--- mcp-mcdev/net/minecraft/src/ConsoleLogFormatter.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ConsoleLogFormatter.java	2012-11-29 21:41:44.000000000 -0800
@@ -6,12 +6,19 @@
 import java.util.logging.Formatter;
 import java.util.logging.Level;
 import java.util.logging.LogRecord;
+import java.util.regex.Pattern;
 
 final class ConsoleLogFormatter extends Formatter {
 
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+   private Pattern pattern = Pattern.compile("\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]");
+   private boolean strip = false;
 
 
+   ConsoleLogFormatter(boolean var1) {
+      this.strip = var1;
+   }
+
    public String format(LogRecord var1) {
       StringBuilder var2 = new StringBuilder();
       var2.append(this.dateFormat.format(Long.valueOf(var1.getMillis())));
@@ -28,11 +35,11 @@
          var2.append(" [WARNING] ");
       } else if(var3 == Level.SEVERE) {
          var2.append(" [SEVERE] ");
-      } else if(var3 == Level.SEVERE) {
+      } else {
          var2.append(" [").append(var3.getLocalizedName()).append("] ");
       }
 
-      var2.append(var1.getMessage());
+      var2.append(this.formatMessage(var1));
       var2.append('\n');
       Throwable var4 = var1.getThrown();
       if(var4 != null) {
@@ -41,6 +48,6 @@
          var2.append(var5.toString());
       }
 
-      return var2.toString();
+      return this.strip?this.pattern.matcher(var2.toString()).replaceAll(""):var2.toString();
    }
 }
Binary files mcp-mcdev/net/minecraft/src/ConsoleLogManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ConsoleLogManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/ConsoleLogManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ConsoleLogManager.java
--- mcp-mcdev/net/minecraft/src/ConsoleLogManager.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ConsoleLogManager.java	2012-11-29 21:41:44.000000000 -0800
@@ -1,29 +1,104 @@
 package net.minecraft.src;
 
-import java.util.logging.ConsoleHandler;
+import java.io.File;
+import java.io.IOException;
 import java.util.logging.FileHandler;
+import java.util.logging.Handler;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.ConsoleLogFormatter;
+import org.bukkit.craftbukkit.util.ShortConsoleLogFormatter;
+import org.bukkit.craftbukkit.util.TerminalConsoleHandler;
 
 public class ConsoleLogManager {
 
    public static Logger logger = Logger.getLogger("Minecraft");
+   public static Logger global = Logger.getLogger("");
 
 
-   public static void init() {
-      ConsoleLogFormatter var0 = new ConsoleLogFormatter();
+   public static void init(MinecraftServer var0) {
+      ConsoleLogFormatter var1 = new ConsoleLogFormatter(var0.options.has("log-strip-color"));
       logger.setUseParentHandlers(false);
-      ConsoleHandler var1 = new ConsoleHandler();
-      var1.setFormatter(var0);
-      logger.addHandler(var1);
+      TerminalConsoleHandler var2 = new TerminalConsoleHandler(var0.reader);
+      Handler[] var3 = global.getHandlers();
+      int var4 = var3.length;
+
+      for(int var5 = 0; var5 < var4; ++var5) {
+         Handler var6 = var3[var5];
+         global.removeHandler(var6);
+      }
+
+      var2.setFormatter(new ShortConsoleLogFormatter(var0));
+      global.addHandler(var2);
+      logger.addHandler(var2);
 
       try {
-         FileHandler var2 = new FileHandler("server.log", true);
-         var2.setFormatter(var0);
-         logger.addHandler(var2);
-      } catch (Exception var3) {
-         logger.log(Level.WARNING, "Failed to log to server.log", var3);
+         String var15 = (String)var0.options.valueOf("log-pattern");
+         String var16 = System.getProperty("java.io.tmpdir");
+         String var17 = System.getProperty("user.home");
+         if(var16 == null) {
+            var16 = var17;
+         }
+
+         File var18 = (new File(var15)).getParentFile();
+         StringBuilder var7 = new StringBuilder();
+         String var8 = "";
+         if(var18 != null) {
+            var8 = var18.getPath();
+         }
+
+         int var9 = 0;
+
+         while(var9 < var8.length()) {
+            char var10 = var8.charAt(var9);
+            char var11 = 0;
+            if(var9 + 1 < var8.length()) {
+               var11 = Character.toLowerCase(var15.charAt(var9 + 1));
+            }
+
+            if(var10 == 37) {
+               if(var11 == 104) {
+                  var9 += 2;
+                  var7.append(var17);
+                  continue;
+               }
+
+               if(var11 == 116) {
+                  var9 += 2;
+                  var7.append(var16);
+                  continue;
+               }
+
+               if(var11 == 37) {
+                  var9 += 2;
+                  var7.append("%%");
+                  continue;
+               }
+
+               if(var11 != 0) {
+                  throw new IOException("log-pattern can only use %t and %h for directories, got %" + var11);
+               }
+            }
+
+            var7.append(var10);
+            ++var9;
+         }
+
+         var18 = new File(var7.toString());
+         if(var18 != null) {
+            var18.mkdirs();
+         }
+
+         int var19 = ((Integer)var0.options.valueOf("log-limit")).intValue();
+         int var20 = ((Integer)var0.options.valueOf("log-count")).intValue();
+         boolean var12 = ((Boolean)var0.options.valueOf("log-append")).booleanValue();
+         FileHandler var13 = new FileHandler(var15, var19, var20, var12);
+         var13.setFormatter(var1);
+         logger.addHandler(var13);
+         global.addHandler(var13);
+      } catch (Exception var14) {
+         logger.log(Level.WARNING, "Failed to log to server.log", var14);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/Container.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Container.class differ
diff -ur mcp-mcdev/net/minecraft/src/Container.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Container.java
--- mcp-mcdev/net/minecraft/src/Container.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Container.java	2012-11-29 21:41:44.000000000 -0800
@@ -10,6 +10,9 @@
 import net.minecraft.src.InventoryPlayer;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Slot;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.inventory.InventoryView;
 
 public abstract class Container {
 
@@ -19,8 +22,20 @@
    private short transactionID = 0;
    protected List crafters = new ArrayList();
    private Set playerList = new HashSet();
+   public boolean checkReachable = true;
 
 
+   public abstract InventoryView getBukkitView();
+
+   public void transferTo(Container var1, CraftHumanEntity var2) {
+      InventoryView var3 = this.getBukkitView();
+      InventoryView var4 = var1.getBukkitView();
+      ((CraftInventory)var3.getTopInventory()).getInventory().onClose(var2);
+      ((CraftInventory)var3.getBottomInventory()).getInventory().onClose(var2);
+      ((CraftInventory)var4.getTopInventory()).getInventory().onOpen(var2);
+      ((CraftInventory)var4.getBottomInventory()).getInventory().onOpen(var2);
+   }
+
    protected Slot addSlotToContainer(Slot var1) {
       var1.slotNumber = this.inventorySlots.size();
       this.inventorySlots.add(var1);
@@ -91,11 +106,12 @@
    public ItemStack slotClick(int var1, int var2, int var3, EntityPlayer var4) {
       ItemStack var5 = null;
       InventoryPlayer var6 = var4.inventory;
-      Slot var7;
-      ItemStack var8;
+      Slot var8;
+      ItemStack var9;
       int var10;
       ItemStack var11;
       if((var3 == 0 || var3 == 1) && (var2 == 0 || var2 == 1)) {
+         ItemStack var12;
          if(var1 == -999) {
             if(var6.getItemStack() != null && var1 == -999) {
                if(var2 == 0) {
@@ -104,20 +120,24 @@
                }
 
                if(var2 == 1) {
-                  var4.dropPlayerItem(var6.getItemStack().splitStack(1));
-                  if(var6.getItemStack().stackSize == 0) {
+                  var12 = var6.getItemStack();
+                  if(var12.stackSize > 0) {
+                     var4.dropPlayerItem(var12.splitStack(1));
+                  }
+
+                  if(var12.stackSize == 0) {
                      var6.setItemStack((ItemStack)null);
                   }
                }
             }
          } else if(var3 == 1) {
-            var7 = (Slot)this.inventorySlots.get(var1);
-            if(var7 != null && var7.canTakeStack(var4)) {
-               var8 = this.transferStackInSlot(var4, var1);
-               if(var8 != null) {
-                  int var12 = var8.itemID;
-                  var5 = var8.copy();
-                  if(var7 != null && var7.getStack() != null && var7.getStack().itemID == var12) {
+            var8 = (Slot)this.inventorySlots.get(var1);
+            if(var8 != null && var8.canTakeStack(var4)) {
+               var9 = this.transferStackInSlot(var4, var1);
+               if(var9 != null) {
+                  int var13 = var9.itemID;
+                  var5 = var9.copy();
+                  if(var8 != null && var8.getStack() != null && var8.getStack().itemID == var13) {
                      this.retrySlotClick(var1, var2, true, var4);
                   }
                }
@@ -127,109 +147,112 @@
                return null;
             }
 
-            var7 = (Slot)this.inventorySlots.get(var1);
-            if(var7 != null) {
-               var8 = var7.getStack();
-               ItemStack var13 = var6.getItemStack();
-               if(var8 != null) {
-                  var5 = var8.copy();
+            var8 = (Slot)this.inventorySlots.get(var1);
+            if(var8 != null) {
+               var9 = var8.getStack();
+               var12 = var6.getItemStack();
+               if(var9 != null) {
+                  var5 = var9.copy();
                }
 
-               if(var8 == null) {
-                  if(var13 != null && var7.isItemValid(var13)) {
-                     var10 = var2 == 0?var13.stackSize:1;
-                     if(var10 > var7.getSlotStackLimit()) {
-                        var10 = var7.getSlotStackLimit();
+               if(var9 == null) {
+                  if(var12 != null && var8.isItemValid(var12)) {
+                     var10 = var2 == 0?var12.stackSize:1;
+                     if(var10 > var8.getSlotStackLimit()) {
+                        var10 = var8.getSlotStackLimit();
                      }
 
-                     var7.putStack(var13.splitStack(var10));
-                     if(var13.stackSize == 0) {
+                     if(var12.stackSize >= var10) {
+                        var8.putStack(var12.splitStack(var10));
+                     }
+
+                     if(var12.stackSize == 0) {
                         var6.setItemStack((ItemStack)null);
                      }
                   }
-               } else if(var7.canTakeStack(var4)) {
-                  if(var13 == null) {
-                     var10 = var2 == 0?var8.stackSize:(var8.stackSize + 1) / 2;
-                     var11 = var7.decrStackSize(var10);
+               } else if(var8.canTakeStack(var4)) {
+                  if(var12 == null) {
+                     var10 = var2 == 0?var9.stackSize:(var9.stackSize + 1) / 2;
+                     var11 = var8.decrStackSize(var10);
                      var6.setItemStack(var11);
-                     if(var8.stackSize == 0) {
-                        var7.putStack((ItemStack)null);
+                     if(var9.stackSize == 0) {
+                        var8.putStack((ItemStack)null);
                      }
 
-                     var7.onPickupFromSlot(var4, var6.getItemStack());
-                  } else if(var7.isItemValid(var13)) {
-                     if(var8.itemID == var13.itemID && (!var8.getHasSubtypes() || var8.getItemDamage() == var13.getItemDamage()) && ItemStack.areItemStackTagsEqual(var8, var13)) {
-                        var10 = var2 == 0?var13.stackSize:1;
-                        if(var10 > var7.getSlotStackLimit() - var8.stackSize) {
-                           var10 = var7.getSlotStackLimit() - var8.stackSize;
+                     var8.onPickupFromSlot(var4, var6.getItemStack());
+                  } else if(var8.isItemValid(var12)) {
+                     if(var9.itemID == var12.itemID && (!var9.getHasSubtypes() || var9.getItemDamage() == var12.getItemDamage()) && ItemStack.areItemStackTagsEqual(var9, var12)) {
+                        var10 = var2 == 0?var12.stackSize:1;
+                        if(var10 > var8.getSlotStackLimit() - var9.stackSize) {
+                           var10 = var8.getSlotStackLimit() - var9.stackSize;
                         }
 
-                        if(var10 > var13.getMaxStackSize() - var8.stackSize) {
-                           var10 = var13.getMaxStackSize() - var8.stackSize;
+                        if(var10 > var12.getMaxStackSize() - var9.stackSize) {
+                           var10 = var12.getMaxStackSize() - var9.stackSize;
                         }
 
-                        var13.splitStack(var10);
-                        if(var13.stackSize == 0) {
+                        var12.splitStack(var10);
+                        if(var12.stackSize == 0) {
                            var6.setItemStack((ItemStack)null);
                         }
 
-                        var8.stackSize += var10;
-                     } else if(var13.stackSize <= var7.getSlotStackLimit()) {
-                        var7.putStack(var13);
-                        var6.setItemStack(var8);
+                        var9.stackSize += var10;
+                     } else if(var12.stackSize <= var8.getSlotStackLimit()) {
+                        var8.putStack(var12);
+                        var6.setItemStack(var9);
                      }
-                  } else if(var8.itemID == var13.itemID && var13.getMaxStackSize() > 1 && (!var8.getHasSubtypes() || var8.getItemDamage() == var13.getItemDamage()) && ItemStack.areItemStackTagsEqual(var8, var13)) {
-                     var10 = var8.stackSize;
-                     if(var10 > 0 && var10 + var13.stackSize <= var13.getMaxStackSize()) {
-                        var13.stackSize += var10;
-                        var8 = var7.decrStackSize(var10);
-                        if(var8.stackSize == 0) {
-                           var7.putStack((ItemStack)null);
+                  } else if(var9.itemID == var12.itemID && var12.getMaxStackSize() > 1 && (!var9.getHasSubtypes() || var9.getItemDamage() == var12.getItemDamage()) && ItemStack.areItemStackTagsEqual(var9, var12)) {
+                     var10 = var9.stackSize;
+                     if(var10 > 0 && var10 + var12.stackSize <= var12.getMaxStackSize()) {
+                        var12.stackSize += var10;
+                        var9 = var8.decrStackSize(var10);
+                        if(var9.stackSize == 0) {
+                           var8.putStack((ItemStack)null);
                         }
 
-                        var7.onPickupFromSlot(var4, var6.getItemStack());
+                        var8.onPickupFromSlot(var4, var6.getItemStack());
                      }
                   }
                }
 
-               var7.onSlotChanged();
+               var8.onSlotChanged();
             }
          }
       } else if(var3 == 2 && var2 >= 0 && var2 < 9) {
-         var7 = (Slot)this.inventorySlots.get(var1);
-         if(var7.canTakeStack(var4)) {
-            var8 = var6.getStackInSlot(var2);
-            boolean var9 = var8 == null || var7.inventory == var6 && var7.isItemValid(var8);
+         var8 = (Slot)this.inventorySlots.get(var1);
+         if(var8.canTakeStack(var4)) {
+            var9 = var6.getStackInSlot(var2);
+            boolean var7 = var9 == null || var8.inventory == var6 && var8.isItemValid(var9);
             var10 = -1;
-            if(!var9) {
+            if(!var7) {
                var10 = var6.getFirstEmptyStack();
-               var9 |= var10 > -1;
+               var7 |= var10 > -1;
             }
 
-            if(var7.getHasStack() && var9) {
-               var11 = var7.getStack();
+            if(var8.getHasStack() && var7) {
+               var11 = var8.getStack();
                var6.setInventorySlotContents(var2, var11);
-               if((var7.inventory != var6 || !var7.isItemValid(var8)) && var8 != null) {
+               if((var8.inventory != var6 || !var8.isItemValid(var9)) && var9 != null) {
                   if(var10 > -1) {
-                     var6.addItemStackToInventory(var8);
-                     var7.putStack((ItemStack)null);
-                     var7.onPickupFromSlot(var4, var11);
+                     var6.addItemStackToInventory(var9);
+                     var8.putStack((ItemStack)null);
+                     var8.onPickupFromSlot(var4, var11);
                   }
                } else {
-                  var7.putStack(var8);
-                  var7.onPickupFromSlot(var4, var11);
+                  var8.putStack(var9);
+                  var8.onPickupFromSlot(var4, var11);
                }
-            } else if(!var7.getHasStack() && var8 != null && var7.isItemValid(var8)) {
+            } else if(!var8.getHasStack() && var9 != null && var8.isItemValid(var9)) {
                var6.setInventorySlotContents(var2, (ItemStack)null);
-               var7.putStack(var8);
+               var8.putStack(var9);
             }
          }
       } else if(var3 == 3 && var4.capabilities.isCreativeMode && var6.getItemStack() == null && var1 >= 0) {
-         var7 = (Slot)this.inventorySlots.get(var1);
-         if(var7 != null && var7.getHasStack()) {
-            var8 = var7.getStack().copy();
-            var8.stackSize = var8.getMaxStackSize();
-            var6.setItemStack(var8);
+         var8 = (Slot)this.inventorySlots.get(var1);
+         if(var8 != null && var8.getHasStack()) {
+            var9 = var8.getStack().copy();
+            var9.stackSize = var9.getMaxStackSize();
+            var6.setItemStack(var9);
          }
       }
 
Binary files mcp-mcdev/net/minecraft/src/ContainerBeacon.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerBeacon.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerBeacon.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerBeacon.java
--- mcp-mcdev/net/minecraft/src/ContainerBeacon.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerBeacon.java	2012-11-29 21:41:44.000000000 -0800
@@ -8,6 +8,8 @@
 import net.minecraft.src.Slot;
 import net.minecraft.src.SlotBeacon;
 import net.minecraft.src.TileEntityBeacon;
+import org.bukkit.craftbukkit.inventory.CraftInventoryBeacon;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerBeacon extends Container {
 
@@ -16,9 +18,12 @@
    private int field_82865_g;
    private int field_82867_h;
    private int field_82868_i;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
    public ContainerBeacon(InventoryPlayer var1, TileEntityBeacon var2) {
+      this.player = var1;
       this.theBeacon = var2;
       this.addSlotToContainer(this.beaconSlot = new SlotBeacon(this, var2, 0, 136, 110));
       byte var3 = 36;
@@ -56,7 +61,7 @@
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.theBeacon.isUseableByPlayer(var1);
+      return !this.checkReachable?true:this.theBeacon.isUseableByPlayer(var1);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
@@ -102,4 +107,14 @@
 
       return var3;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventoryBeacon var1 = new CraftInventoryBeacon(this.theBeacon);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerBrewingStand.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerBrewingStand.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerBrewingStand.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerBrewingStand.java
--- mcp-mcdev/net/minecraft/src/ContainerBrewingStand.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerBrewingStand.java	2012-11-29 21:41:44.000000000 -0800
@@ -9,15 +9,20 @@
 import net.minecraft.src.SlotBrewingStandIngredient;
 import net.minecraft.src.SlotBrewingStandPotion;
 import net.minecraft.src.TileEntityBrewingStand;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerBrewingStand extends Container {
 
    private TileEntityBrewingStand tileBrewingStand;
    private final Slot theSlot;
    private int brewTime = 0;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
    public ContainerBrewingStand(InventoryPlayer var1, TileEntityBrewingStand var2) {
+      this.player = var1;
       this.tileBrewingStand = var2;
       this.addSlotToContainer(new SlotBrewingStandPotion(var1.player, var2, 0, 56, 46));
       this.addSlotToContainer(new SlotBrewingStandPotion(var1.player, var2, 1, 79, 53));
@@ -56,7 +61,7 @@
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.tileBrewingStand.isUseableByPlayer(var1);
+      return !this.checkReachable?true:this.tileBrewingStand.isUseableByPlayer(var1);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
@@ -108,4 +113,14 @@
 
       return var3;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventory var1 = new CraftInventory(this.tileBrewingStand);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerChest.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerChest.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerChest.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerChest.java
--- mcp-mcdev/net/minecraft/src/ContainerChest.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerChest.java	2012-11-29 21:41:44.000000000 -0800
@@ -3,20 +3,48 @@
 import net.minecraft.src.Container;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
+import net.minecraft.src.InventoryLargeChest;
+import net.minecraft.src.InventoryPlayer;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Slot;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest;
+import org.bukkit.craftbukkit.inventory.CraftInventoryPlayer;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.inventory.Inventory;
 
 public class ContainerChest extends Container {
 
-   private IInventory lowerChestInventory;
+   public IInventory lowerChestInventory;
    private int numRows;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         Object var1;
+         if(this.lowerChestInventory instanceof InventoryPlayer) {
+            var1 = new CraftInventoryPlayer((InventoryPlayer)this.lowerChestInventory);
+         } else if(this.lowerChestInventory instanceof InventoryLargeChest) {
+            var1 = new CraftInventoryDoubleChest((InventoryLargeChest)this.lowerChestInventory);
+         } else {
+            var1 = new CraftInventory(this.lowerChestInventory);
+         }
+
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), (Inventory)var1, this);
+         return this.bukkitEntity;
+      }
+   }
+
    public ContainerChest(IInventory var1, IInventory var2) {
       this.lowerChestInventory = var2;
       this.numRows = var2.getSizeInventory() / 9;
       var2.openChest();
       int var3 = (this.numRows - 4) * 18;
+      this.player = (InventoryPlayer)var1;
 
       int var4;
       int var5;
@@ -39,7 +67,7 @@
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.lowerChestInventory.isUseableByPlayer(var1);
+      return !this.checkReachable?true:this.lowerChestInventory.isUseableByPlayer(var1);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
Binary files mcp-mcdev/net/minecraft/src/ContainerDispenser.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerDispenser.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerDispenser.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerDispenser.java
--- mcp-mcdev/net/minecraft/src/ContainerDispenser.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerDispenser.java	2012-11-29 21:41:44.000000000 -0800
@@ -3,17 +3,23 @@
 import net.minecraft.src.Container;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
+import net.minecraft.src.InventoryPlayer;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Slot;
 import net.minecraft.src.TileEntityDispenser;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerDispenser extends Container {
 
-   private TileEntityDispenser tileEntityDispenser;
+   public TileEntityDispenser tileEntityDispenser;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
    public ContainerDispenser(IInventory var1, TileEntityDispenser var2) {
       this.tileEntityDispenser = var2;
+      this.player = (InventoryPlayer)var1;
 
       int var3;
       int var4;
@@ -36,7 +42,7 @@
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.tileEntityDispenser.isUseableByPlayer(var1);
+      return !this.checkReachable?true:this.tileEntityDispenser.isUseableByPlayer(var1);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
@@ -68,4 +74,14 @@
 
       return var3;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventory var1 = new CraftInventory(this.tileEntityDispenser);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerEnchantment.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerEnchantment.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerEnchantment.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerEnchantment.java
--- mcp-mcdev/net/minecraft/src/ContainerEnchantment.java	2012-11-29 21:15:11.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerEnchantment.java	2012-11-29 21:41:44.000000000 -0800
@@ -1,8 +1,10 @@
 package net.minecraft.src;
 
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
+import java.util.Map.Entry;
 import net.minecraft.src.Block;
 import net.minecraft.src.Container;
 import net.minecraft.src.EnchantmentData;
@@ -16,10 +18,16 @@
 import net.minecraft.src.SlotEnchantment;
 import net.minecraft.src.SlotEnchantmentTable;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.Player;
+import org.bukkit.event.enchantment.EnchantItemEvent;
+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;
 
 public class ContainerEnchantment extends Container {
 
-   public IInventory tableInventory = new SlotEnchantmentTable(this, "Enchant", 1);
+   public SlotEnchantmentTable tableInventory = new SlotEnchantmentTable(this, "Enchant", 1);
    private World worldPointer;
    private int posX;
    private int posY;
@@ -27,6 +35,8 @@
    private Random rand = new Random();
    public long nameSeed;
    public int[] enchantLevels = new int[3];
+   private CraftInventoryView bukkitEntity = null;
+   private Player player;
 
 
    public ContainerEnchantment(InventoryPlayer var1, World var2, int var3, int var4, int var5) {
@@ -47,6 +57,8 @@
          this.addSlotToContainer(new Slot(var1, var6, 8 + var6 * 18, 142));
       }
 
+      this.player = (Player)var1.player.getBukkitEntity();
+      this.tableInventory.player = this.player;
    }
 
    public void onCraftGuiOpened(ICrafting var1) {
@@ -114,6 +126,17 @@
                   this.enchantLevels[var4] = EnchantmentHelper.calcItemStackEnchantability(this.rand, var4, var3, var2);
                }
 
+               CraftItemStack var7 = new CraftItemStack(var2);
+               PrepareItemEnchantEvent var6 = new PrepareItemEnchantEvent(this.player, this.getBukkitView(), this.worldPointer.getWorld().getBlockAt(this.posX, this.posY, this.posZ), var7, this.enchantLevels, var3);
+               this.worldPointer.getServer().getPluginManager().callEvent(var6);
+               if(var6.isCancelled()) {
+                  for(var3 = 0; var3 < 3; ++var3) {
+                     this.enchantLevels[var3] = 0;
+                  }
+
+                  return;
+               }
+
                this.updateCraftingResults();
             }
          } else {
@@ -131,12 +154,34 @@
          if(!this.worldPointer.isRemote) {
             List var4 = EnchantmentHelper.buildEnchantmentList(this.rand, var3, this.enchantLevels[var2]);
             if(var4 != null) {
-               var1.addExperienceLevel(-this.enchantLevels[var2]);
-               Iterator var5 = var4.iterator();
+               HashMap var5 = new HashMap();
+               Iterator var6 = var4.iterator();
 
-               while(var5.hasNext()) {
-                  EnchantmentData var6 = (EnchantmentData)var5.next();
-                  var3.addEnchantment(var6.enchantmentobj, var6.enchantmentLevel);
+               while(var6.hasNext()) {
+                  Object var7 = var6.next();
+                  EnchantmentData var8 = (EnchantmentData)var7;
+                  var5.put(org.bukkit.enchantments.Enchantment.getById(var8.enchantmentobj.effectId), Integer.valueOf(var8.enchantmentLevel));
+               }
+
+               CraftItemStack var13 = new CraftItemStack(var3);
+               EnchantItemEvent var14 = new EnchantItemEvent((Player)var1.getBukkitEntity(), this.getBukkitView(), this.worldPointer.getWorld().getBlockAt(this.posX, this.posY, this.posZ), var13, this.enchantLevels[var2], var5, var2);
+               this.worldPointer.getServer().getPluginManager().callEvent(var14);
+               int var15 = var14.getExpLevelCost();
+               if(var14.isCancelled() || var15 > var1.experienceLevel && !var1.capabilities.isCreativeMode || var5.isEmpty()) {
+                  return false;
+               }
+
+               var1.addExperienceLevel(-var15);
+               Iterator var9 = var14.getEnchantsToAdd().entrySet().iterator();
+
+               while(var9.hasNext()) {
+                  Entry var10 = (Entry)var9.next();
+
+                  try {
+                     var13.addEnchantment((org.bukkit.enchantments.Enchantment)var10.getKey(), ((Integer)var10.getValue()).intValue());
+                  } catch (IllegalArgumentException var12) {
+                     ;
+                  }
                }
 
                this.onCraftMatrixChanged(this.tableInventory);
@@ -156,12 +201,12 @@
          if(var2 != null) {
             var1.dropPlayerItem(var2);
          }
-
       }
+
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.worldPointer.getBlockId(this.posX, this.posY, this.posZ) != Block.enchantmentTable.blockID?false:var1.getDistanceSq((double)this.posX + 0.5D, (double)this.posY + 0.5D, (double)this.posZ + 0.5D) <= 64.0D;
+      return !this.checkReachable?true:(this.worldPointer.getBlockId(this.posX, this.posY, this.posZ) != Block.enchantmentTable.blockID?false:var1.getDistanceSq((double)this.posX + 0.5D, (double)this.posY + 0.5D, (double)this.posZ + 0.5D) <= 64.0D);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
@@ -203,4 +248,14 @@
 
       return var3;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventoryEnchanting var1 = new CraftInventoryEnchanting(this.tableInventory);
+         this.bukkitEntity = new CraftInventoryView(this.player, var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerFurnace.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerFurnace.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerFurnace.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerFurnace.java
--- mcp-mcdev/net/minecraft/src/ContainerFurnace.java	2012-11-29 21:15:10.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerFurnace.java	2012-11-29 21:41:44.000000000 -0800
@@ -9,6 +9,8 @@
 import net.minecraft.src.Slot;
 import net.minecraft.src.SlotFurnace;
 import net.minecraft.src.TileEntityFurnace;
+import org.bukkit.craftbukkit.inventory.CraftInventoryFurnace;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerFurnace extends Container {
 
@@ -16,13 +18,26 @@
    private int lastCookTime = 0;
    private int lastBurnTime = 0;
    private int lastItemBurnTime = 0;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventoryFurnace var1 = new CraftInventoryFurnace(this.furnace);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
+
    public ContainerFurnace(InventoryPlayer var1, TileEntityFurnace var2) {
       this.furnace = var2;
       this.addSlotToContainer(new Slot(var2, 0, 56, 17));
       this.addSlotToContainer(new Slot(var2, 1, 56, 53));
       this.addSlotToContainer(new SlotFurnace(var1.player, var2, 2, 116, 35));
+      this.player = var1;
 
       int var3;
       for(var3 = 0; var3 < 3; ++var3) {
@@ -68,7 +83,7 @@
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.furnace.isUseableByPlayer(var1);
+      return !this.checkReachable?true:this.furnace.isUseableByPlayer(var1);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
Binary files mcp-mcdev/net/minecraft/src/ContainerMerchant.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerMerchant.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerMerchant.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerMerchant.java
--- mcp-mcdev/net/minecraft/src/ContainerMerchant.java	2012-11-29 21:15:10.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerMerchant.java	2012-11-29 21:41:44.000000000 -0800
@@ -11,14 +11,26 @@
 import net.minecraft.src.Slot;
 import net.minecraft.src.SlotMerchantResult;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftInventoryMerchant;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerMerchant extends Container {
 
    private IMerchant theMerchant;
    private InventoryMerchant merchantInventory;
    private final World theWorld;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity == null) {
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), new CraftInventoryMerchant(this.getMerchantInventory()), this);
+      }
+
+      return this.bukkitEntity;
+   }
+
    public ContainerMerchant(InventoryPlayer var1, IMerchant var2, World var3) {
       this.theMerchant = var2;
       this.theWorld = var3;
@@ -26,6 +38,7 @@
       this.addSlotToContainer(new Slot(this.merchantInventory, 0, 36, 53));
       this.addSlotToContainer(new Slot(this.merchantInventory, 1, 62, 53));
       this.addSlotToContainer(new SlotMerchantResult(var1.player, var2, this.merchantInventory, 2, 120, 53));
+      this.player = var1;
 
       int var4;
       for(var4 = 0; var4 < 3; ++var4) {
@@ -119,7 +132,7 @@
          if(var2 != null) {
             var1.dropPlayerItem(var2);
          }
-
       }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerPlayer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerPlayer.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerPlayer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerPlayer.java
--- mcp-mcdev/net/minecraft/src/ContainerPlayer.java	2012-11-29 21:15:10.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerPlayer.java	2012-11-29 21:41:44.000000000 -0800
@@ -3,15 +3,19 @@
 import net.minecraft.src.Container;
 import net.minecraft.src.CraftingManager;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.IInventory;
 import net.minecraft.src.InventoryCraftResult;
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.InventoryPlayer;
 import net.minecraft.src.ItemArmor;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.Packet103SetSlot;
 import net.minecraft.src.Slot;
 import net.minecraft.src.SlotArmor;
 import net.minecraft.src.SlotCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerPlayer extends Container {
 
@@ -19,11 +23,17 @@
    public IInventory craftResult = new InventoryCraftResult();
    public boolean isLocalWorld = false;
    private final EntityPlayer thePlayer;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
    public ContainerPlayer(InventoryPlayer var1, boolean var2, EntityPlayer var3) {
       this.isLocalWorld = var2;
       this.thePlayer = var3;
+      this.craftResult = new InventoryCraftResult();
+      this.craftMatrix = new InventoryCrafting(this, 2, 2, var1.player);
+      this.craftMatrix.resultInventory = this.craftResult;
+      this.player = var1;
       this.addSlotToContainer(new SlotCrafting(var1.player, this.craftMatrix, this.craftResult, 0, 144, 36));
 
       int var4;
@@ -48,11 +58,16 @@
          this.addSlotToContainer(new Slot(var1, var4, 8 + var4 * 18, 142));
       }
 
-      this.onCraftMatrixChanged(this.craftMatrix);
    }
 
    public void onCraftMatrixChanged(IInventory var1) {
-      this.craftResult.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.thePlayer.worldObj));
+      CraftingManager.getInstance().lastCraftView = this.getBukkitView();
+      ItemStack var2 = CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.thePlayer.worldObj);
+      this.craftResult.setInventorySlotContents(0, var2);
+      if(super.crafters.size() >= 1) {
+         EntityPlayerMP var3 = (EntityPlayerMP)super.crafters.get(0);
+         var3.playerNetServerHandler.sendPacket(new Packet103SetSlot(var3.openContainer.windowId, 0, var2));
+      }
    }
 
    public void onCraftGuiClosed(EntityPlayer var1) {
@@ -124,4 +139,14 @@
 
       return var3;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventoryCrafting var1 = new CraftInventoryCrafting(this.craftMatrix, this.craftResult);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerRepair.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerRepair.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerRepair.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerRepair.java
--- mcp-mcdev/net/minecraft/src/ContainerRepair.java	2012-11-29 21:15:10.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerRepair.java	2012-11-29 21:41:43.000000000 -0800
@@ -17,6 +17,8 @@
 import net.minecraft.src.Slot;
 import net.minecraft.src.SlotRepair;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftInventoryAnvil;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerRepair extends Container {
 
@@ -30,9 +32,12 @@
    private int field_82856_l = 0;
    private String field_82857_m;
    private final EntityPlayer thePlayer;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
    public ContainerRepair(InventoryPlayer var1, World var2, int var3, int var4, int var5, EntityPlayer var6) {
+      this.player = var1;
       this.theWorld = var2;
       this.field_82861_i = var3;
       this.field_82858_j = var4;
@@ -76,31 +81,31 @@
          ItemStack var5 = var1.copy();
          ItemStack var6 = this.inputSlots.getStackInSlot(1);
          Map var7 = EnchantmentHelper.getEnchantments(var5);
-         int var18 = var3 + var1.getRepairCost() + (var6 == null?0:var6.getRepairCost());
+         int var8 = var3 + var1.getRepairCost() + (var6 == null?0:var6.getRepairCost());
          this.field_82856_l = 0;
-         int var8;
          int var9;
          int var10;
-         int var12;
-         Enchantment var21;
-         Iterator var20;
+         int var11;
+         int var13;
+         Iterator var14;
+         Enchantment var15;
          if(var6 != null) {
             if(var5.isItemStackDamageable() && Item.itemsList[var5.itemID].getIsRepairable(var1, var6)) {
-               var8 = Math.min(var5.getItemDamageForDisplay(), var5.getMaxDamage() / 4);
-               if(var8 <= 0) {
+               var9 = Math.min(var5.getItemDamageForDisplay(), var5.getMaxDamage() / 4);
+               if(var9 <= 0) {
                   this.outputSlot.setInventorySlotContents(0, (ItemStack)null);
                   this.maximumCost = 0;
                   return;
                }
 
-               for(var9 = 0; var8 > 0 && var9 < var6.stackSize; ++var9) {
-                  var10 = var5.getItemDamageForDisplay() - var8;
-                  var5.setItemDamage(var10);
-                  var2 += Math.max(1, var8 / 100) + var7.size();
-                  var8 = Math.min(var5.getItemDamageForDisplay(), var5.getMaxDamage() / 4);
+               for(var10 = 0; var9 > 0 && var10 < var6.stackSize; ++var10) {
+                  var11 = var5.getItemDamageForDisplay() - var9;
+                  var5.setItemDamage(var11);
+                  var2 += Math.max(1, var9 / 100) + var7.size();
+                  var9 = Math.min(var5.getItemDamageForDisplay(), var5.getMaxDamage() / 4);
                }
 
-               this.field_82856_l = var9;
+               this.field_82856_l = var10;
             } else {
                if(var5.itemID != var6.itemID || !var5.isItemStackDamageable()) {
                   this.outputSlot.setInventorySlotContents(0, (ItemStack)null);
@@ -109,63 +114,63 @@
                }
 
                if(var5.isItemStackDamageable()) {
-                  var8 = var1.getMaxDamage() - var1.getItemDamageForDisplay();
-                  var9 = var6.getMaxDamage() - var6.getItemDamageForDisplay();
-                  var10 = var9 + var5.getMaxDamage() * 12 / 100;
-                  int var11 = var8 + var10;
-                  var12 = var5.getMaxDamage() - var11;
-                  if(var12 < 0) {
-                     var12 = 0;
+                  var9 = var1.getMaxDamage() - var1.getItemDamageForDisplay();
+                  var10 = var6.getMaxDamage() - var6.getItemDamageForDisplay();
+                  var11 = var10 + var5.getMaxDamage() * 12 / 100;
+                  int var12 = var9 + var11;
+                  var13 = var5.getMaxDamage() - var12;
+                  if(var13 < 0) {
+                     var13 = 0;
                   }
 
-                  if(var12 < var5.getItemDamage()) {
-                     var5.setItemDamage(var12);
-                     var2 += Math.max(1, var10 / 100);
+                  if(var13 < var5.getItemDamage()) {
+                     var5.setItemDamage(var13);
+                     var2 += Math.max(1, var11 / 100);
                   }
                }
 
-               Map var19 = EnchantmentHelper.getEnchantments(var6);
-               var20 = var19.keySet().iterator();
+               Map var22 = EnchantmentHelper.getEnchantments(var6);
+               var14 = var22.keySet().iterator();
 
-               while(var20.hasNext()) {
-                  var10 = ((Integer)var20.next()).intValue();
-                  var21 = Enchantment.enchantmentsList[var10];
-                  var12 = var7.containsKey(Integer.valueOf(var10))?((Integer)var7.get(Integer.valueOf(var10))).intValue():0;
-                  int var13 = ((Integer)var19.get(Integer.valueOf(var10))).intValue();
-                  int var10000;
-                  if(var12 == var13) {
-                     ++var13;
-                     var10000 = var13;
+               while(var14.hasNext()) {
+                  var11 = ((Integer)var14.next()).intValue();
+                  var15 = Enchantment.enchantmentsList[var11];
+                  var13 = var7.containsKey(Integer.valueOf(var11))?((Integer)var7.get(Integer.valueOf(var11))).intValue():0;
+                  int var16 = ((Integer)var22.get(Integer.valueOf(var11))).intValue();
+                  int var17;
+                  if(var13 == var16) {
+                     ++var16;
+                     var17 = var16;
                   } else {
-                     var10000 = Math.max(var13, var12);
+                     var17 = Math.max(var16, var13);
                   }
 
-                  var13 = var10000;
-                  int var14 = var13 - var12;
-                  boolean var15 = true;
-                  Iterator var16 = var7.keySet().iterator();
-
-                  while(var16.hasNext()) {
-                     int var17 = ((Integer)var16.next()).intValue();
-                     if(var17 != var10 && !var21.canApplyTogether(Enchantment.enchantmentsList[var17])) {
-                        var15 = false;
-                        var2 += var14;
+                  var16 = var17;
+                  int var18 = var17 - var13;
+                  boolean var19 = true;
+                  Iterator var20 = var7.keySet().iterator();
+
+                  while(var20.hasNext()) {
+                     int var21 = ((Integer)var20.next()).intValue();
+                     if(var21 != var11 && !var15.canApplyTogether(Enchantment.enchantmentsList[var21])) {
+                        var19 = false;
+                        var2 += var18;
                      }
                   }
 
-                  if(var15) {
-                     if(var13 > var21.getMaxLevel()) {
-                        var13 = var21.getMaxLevel();
+                  if(var19) {
+                     if(var17 > var15.getMaxLevel()) {
+                        var16 = var15.getMaxLevel();
                      }
 
-                     var7.put(Integer.valueOf(var10), Integer.valueOf(var13));
-                     byte var23 = 0;
-                     switch(var21.getWeight()) {
+                     var7.put(Integer.valueOf(var11), Integer.valueOf(var16));
+                     byte var24 = 0;
+                     switch(var15.getWeight()) {
                      case 1:
-                        var23 = 8;
+                        var24 = 8;
                         break;
                      case 2:
-                        var23 = 4;
+                        var24 = 4;
                      case 3:
                      case 4:
                      case 6:
@@ -175,13 +180,13 @@
                      default:
                         break;
                      case 5:
-                        var23 = 2;
+                        var24 = 2;
                         break;
                      case 10:
-                        var23 = 1;
+                        var24 = 1;
                      }
 
-                     var2 += var23 * var14;
+                     var2 += var24 * var18;
                   }
                }
             }
@@ -191,27 +196,27 @@
             var4 = var1.isItemStackDamageable()?7:var1.stackSize * 5;
             var2 += var4;
             if(var1.hasDisplayName()) {
-               var18 += var4 / 2;
+               var8 += var4 / 2;
             }
 
             var5.setItemName(this.field_82857_m);
          }
 
-         var8 = 0;
+         var9 = 0;
 
-         byte var22;
-         for(var20 = var7.keySet().iterator(); var20.hasNext(); var18 += var8 + var12 * var22) {
-            var10 = ((Integer)var20.next()).intValue();
-            var21 = Enchantment.enchantmentsList[var10];
-            var12 = ((Integer)var7.get(Integer.valueOf(var10))).intValue();
-            var22 = 0;
-            ++var8;
-            switch(var21.getWeight()) {
+         byte var23;
+         for(var14 = var7.keySet().iterator(); var14.hasNext(); var8 += var9 + var13 * var23) {
+            var11 = ((Integer)var14.next()).intValue();
+            var15 = Enchantment.enchantmentsList[var11];
+            var13 = ((Integer)var7.get(Integer.valueOf(var11))).intValue();
+            var23 = 0;
+            ++var9;
+            switch(var15.getWeight()) {
             case 1:
-               var22 = 8;
+               var23 = 8;
                break;
             case 2:
-               var22 = 4;
+               var23 = 4;
             case 3:
             case 4:
             case 6:
@@ -221,20 +226,19 @@
             default:
                break;
             case 5:
-               var22 = 2;
+               var23 = 2;
                break;
             case 10:
-               var22 = 1;
+               var23 = 1;
             }
          }
 
-         this.maximumCost = var18 + var2;
+         this.maximumCost = var8 + var2;
          if(var2 <= 0) {
             var5 = null;
          }
 
          if(var4 == var2 && var4 > 0 && this.maximumCost >= 40) {
-            System.out.println("Naming an item only, cost too high; giving discount to cap cost to 39 levels");
             this.maximumCost = 39;
          }
 
@@ -243,27 +247,28 @@
          }
 
          if(var5 != null) {
-            var9 = var5.getRepairCost();
-            if(var6 != null && var9 < var6.getRepairCost()) {
-               var9 = var6.getRepairCost();
+            var10 = var5.getRepairCost();
+            if(var6 != null && var10 < var6.getRepairCost()) {
+               var10 = var6.getRepairCost();
             }
 
             if(var5.hasDisplayName()) {
-               var9 -= 9;
+               var10 -= 9;
             }
 
-            if(var9 < 0) {
-               var9 = 0;
+            if(var10 < 0) {
+               var10 = 0;
             }
 
-            var9 += 2;
-            var5.setRepairCost(var9);
+            var10 += 2;
+            var5.setRepairCost(var10);
             EnchantmentHelper.setEnchantments(var7, var5);
          }
 
          this.outputSlot.setInventorySlotContents(0, var5);
          this.updateCraftingResults();
       }
+
    }
 
    public void onCraftGuiOpened(ICrafting var1) {
@@ -280,12 +285,12 @@
                var1.dropPlayerItem(var3);
             }
          }
-
       }
+
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.theWorld.getBlockId(this.field_82861_i, this.field_82858_j, this.field_82859_k) != Block.anvil.blockID?false:var1.getDistanceSq((double)this.field_82861_i + 0.5D, (double)this.field_82858_j + 0.5D, (double)this.field_82859_k + 0.5D) <= 64.0D;
+      return !this.checkReachable?true:(this.theWorld.getBlockId(this.field_82861_i, this.field_82858_j, this.field_82859_k) != Block.anvil.blockID?false:var1.getDistanceSq((double)this.field_82861_i + 0.5D, (double)this.field_82858_j + 0.5D, (double)this.field_82859_k + 0.5D) <= 64.0D);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
@@ -333,13 +338,21 @@
       this.func_82848_d();
    }
 
-   // $FF: synthetic method
    static IInventory func_82851_a(ContainerRepair var0) {
       return var0.inputSlots;
    }
 
-   // $FF: synthetic method
    static int func_82849_b(ContainerRepair var0) {
       return var0.field_82856_l;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventoryAnvil var1 = new CraftInventoryAnvil(this.inputSlots);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/ContainerWorkbench.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerWorkbench.class differ
diff -ur mcp-mcdev/net/minecraft/src/ContainerWorkbench.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerWorkbench.java
--- mcp-mcdev/net/minecraft/src/ContainerWorkbench.java	2012-11-29 21:15:10.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ContainerWorkbench.java	2012-11-29 21:41:43.000000000 -0800
@@ -4,26 +4,35 @@
 import net.minecraft.src.Container;
 import net.minecraft.src.CraftingManager;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.IInventory;
 import net.minecraft.src.InventoryCraftResult;
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.InventoryPlayer;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.Packet103SetSlot;
 import net.minecraft.src.Slot;
 import net.minecraft.src.SlotCrafting;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerWorkbench extends Container {
 
-   public InventoryCrafting craftMatrix = new InventoryCrafting(this, 3, 3);
+   public InventoryCrafting craftMatrix;
    public IInventory craftResult = new InventoryCraftResult();
    private World worldObj;
    private int posX;
    private int posY;
    private int posZ;
+   private CraftInventoryView bukkitEntity = null;
+   private InventoryPlayer player;
 
 
    public ContainerWorkbench(InventoryPlayer var1, World var2, int var3, int var4, int var5) {
+      this.craftMatrix = new InventoryCrafting(this, 3, 3, var1.player);
+      this.craftMatrix.resultInventory = this.craftResult;
+      this.player = var1;
       this.worldObj = var2;
       this.posX = var3;
       this.posY = var4;
@@ -52,7 +61,13 @@
    }
 
    public void onCraftMatrixChanged(IInventory var1) {
-      this.craftResult.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.worldObj));
+      CraftingManager.getInstance().lastCraftView = this.getBukkitView();
+      ItemStack var2 = CraftingManager.getInstance().findMatchingRecipe(this.craftMatrix, this.worldObj);
+      this.craftResult.setInventorySlotContents(0, var2);
+      if(super.crafters.size() >= 1) {
+         EntityPlayerMP var3 = (EntityPlayerMP)super.crafters.get(0);
+         var3.playerNetServerHandler.sendPacket(new Packet103SetSlot(var3.openContainer.windowId, 0, var2));
+      }
    }
 
    public void onCraftGuiClosed(EntityPlayer var1) {
@@ -64,12 +79,12 @@
                var1.dropPlayerItem(var3);
             }
          }
-
       }
+
    }
 
    public boolean canInteractWith(EntityPlayer var1) {
-      return this.worldObj.getBlockId(this.posX, this.posY, this.posZ) != Block.workbench.blockID?false:var1.getDistanceSq((double)this.posX + 0.5D, (double)this.posY + 0.5D, (double)this.posZ + 0.5D) <= 64.0D;
+      return !this.checkReachable?true:(this.worldObj.getBlockId(this.posX, this.posY, this.posZ) != Block.workbench.blockID?false:var1.getDistanceSq((double)this.posX + 0.5D, (double)this.posY + 0.5D, (double)this.posZ + 0.5D) <= 64.0D);
    }
 
    public ItemStack transferStackInSlot(EntityPlayer var1, int var2) {
@@ -111,4 +126,14 @@
 
       return var3;
    }
+
+   public CraftInventoryView getBukkitView() {
+      if(this.bukkitEntity != null) {
+         return this.bukkitEntity;
+      } else {
+         CraftInventoryCrafting var1 = new CraftInventoryCrafting(this.craftMatrix, this.craftResult);
+         this.bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), var1, this);
+         return this.bukkitEntity;
+      }
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/CraftingManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CraftingManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/CraftingManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CraftingManager.java
--- mcp-mcdev/net/minecraft/src/CraftingManager.java	2012-11-29 21:15:10.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CraftingManager.java	2012-11-29 21:41:43.000000000 -0800
@@ -23,18 +23,22 @@
 import net.minecraft.src.ShapedRecipes;
 import net.minecraft.src.ShapelessRecipes;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.inventory.InventoryView;
 
 public class CraftingManager {
 
    private static final CraftingManager instance = new CraftingManager();
-   private List recipes = new ArrayList();
+   public List recipes = new ArrayList();
+   public IRecipe lastRecipe;
+   public InventoryView lastCraftView;
 
 
    public static final CraftingManager getInstance() {
       return instance;
    }
 
-   private CraftingManager() {
+   public CraftingManager() {
       (new RecipesTools()).addRecipes(this);
       (new RecipesWeapons()).addRecipes(this);
       (new RecipesIngots()).addRecipes(this);
@@ -137,17 +141,21 @@
       this.addShapelessRecipe(new ItemStack(Item.eyeOfEnder, 1), new Object[]{Item.enderPearl, Item.blazePowder});
       this.addShapelessRecipe(new ItemStack(Item.fireballCharge, 3), new Object[]{Item.gunpowder, Item.blazePowder, Item.coal});
       this.addShapelessRecipe(new ItemStack(Item.fireballCharge, 3), new Object[]{Item.gunpowder, Item.blazePowder, new ItemStack(Item.coal, 1, 1)});
-      Collections.sort(this.recipes, new RecipeSorter(this));
+      this.sort();
       System.out.println(this.recipes.size() + " recipes");
    }
 
-   void addRecipe(ItemStack var1, Object ... var2) {
+   public void sort() {
+      Collections.sort(this.recipes, new RecipeSorter(this));
+   }
+
+   public void addRecipe(ItemStack var1, Object ... var2) {
       String var3 = "";
       int var4 = 0;
       int var5 = 0;
       int var6 = 0;
       if(var2[var4] instanceof String[]) {
-         String[] var7 = (String[])((String[])var2[var4++]);
+         String[] var7 = (String[])((String[])((String[])var2[var4++]));
 
          for(int var8 = 0; var8 < var7.length; ++var8) {
             String var9 = var7[var8];
@@ -193,7 +201,7 @@
       this.recipes.add(new ShapedRecipes(var5, var6, var15, var1));
    }
 
-   void addShapelessRecipe(ItemStack var1, Object ... var2) {
+   public void addShapelessRecipe(ItemStack var1, Object ... var2) {
       ArrayList var3 = new ArrayList();
       Object[] var4 = var2;
       int var5 = var2.length;
@@ -238,21 +246,30 @@
       }
 
       if(var3 == 2 && var4.itemID == var5.itemID && var4.stackSize == 1 && var5.stackSize == 1 && Item.itemsList[var4.itemID].isDamageable()) {
-         Item var11 = Item.itemsList[var4.itemID];
-         int var13 = var11.getMaxDamage() - var4.getItemDamageForDisplay();
-         int var8 = var11.getMaxDamage() - var5.getItemDamageForDisplay();
-         int var9 = var13 + var8 + var11.getMaxDamage() * 5 / 100;
-         int var10 = var11.getMaxDamage() - var9;
-         if(var10 < 0) {
-            var10 = 0;
+         Item var16 = Item.itemsList[var4.itemID];
+         int var17 = var16.getMaxDamage() - var4.getItemDamageForDisplay();
+         int var9 = var16.getMaxDamage() - var5.getItemDamageForDisplay();
+         int var10 = var17 + var9 + var16.getMaxDamage() * 5 / 100;
+         int var11 = var16.getMaxDamage() - var10;
+         if(var11 < 0) {
+            var11 = 0;
          }
 
-         return new ItemStack(var4.itemID, 1, var10);
+         ItemStack var12 = new ItemStack(var4.itemID, 1, var11);
+         ArrayList var13 = new ArrayList();
+         var13.add(var4.copy());
+         var13.add(var5.copy());
+         ShapelessRecipes var14 = new ShapelessRecipes(var12.copy(), var13);
+         var1.currentRecipe = var14;
+         var12 = CraftEventFactory.callPreCraftEvent(var1, var12, this.lastCraftView, true);
+         return var12;
       } else {
          for(var6 = 0; var6 < this.recipes.size(); ++var6) {
-            IRecipe var12 = (IRecipe)this.recipes.get(var6);
-            if(var12.matches(var1, var2)) {
-               return var12.getCraftingResult(var1);
+            IRecipe var15 = (IRecipe)this.recipes.get(var6);
+            if(var15.matches(var1, var2)) {
+               var1.currentRecipe = var15;
+               ItemStack var8 = var15.getCraftingResult(var1);
+               return CraftEventFactory.callPreCraftEvent(var1, var8, this.lastCraftView, false);
             }
          }
 
Binary files mcp-mcdev/net/minecraft/src/CrashReport.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CrashReport.class differ
diff -ur mcp-mcdev/net/minecraft/src/CrashReport.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CrashReport.java
--- mcp-mcdev/net/minecraft/src/CrashReport.java	2012-11-29 21:15:09.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CrashReport.java	2012-11-29 21:41:43.000000000 -0800
@@ -23,6 +23,7 @@
 import net.minecraft.src.CallableSuspiciousClasses;
 import net.minecraft.src.CrashReportCategory;
 import net.minecraft.src.ReportedException;
+import org.bukkit.craftbukkit.CraftCrashReport;
 
 public class CrashReport {
 
@@ -51,6 +52,7 @@
       this.field_85061_c.addCrashSectionCallable("AABB Pool Size", new CallableCrashMemoryReport(this));
       this.field_85061_c.addCrashSectionCallable("Suspicious classes", new CallableSuspiciousClasses(this));
       this.field_85061_c.addCrashSectionCallable("IntCache", new CallableIntCache(this));
+      this.field_85061_c.addCrashSectionCallable("CraftBukkit Information", new CraftCrashReport());
    }
 
    public String getDescription() {
Binary files mcp-mcdev/net/minecraft/src/CryptManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CryptManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/CryptManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CryptManager.java
--- mcp-mcdev/net/minecraft/src/CryptManager.java	2012-11-29 21:15:09.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/CryptManager.java	2012-11-29 21:41:42.000000000 -0800
@@ -22,14 +22,14 @@
 import javax.crypto.NoSuchPaddingException;
 import javax.crypto.SecretKey;
 import javax.crypto.spec.SecretKeySpec;
-import org.bouncycastle.crypto.BufferedBlockCipher;
-import org.bouncycastle.crypto.engines.AESFastEngine;
-import org.bouncycastle.crypto.io.CipherInputStream;
-import org.bouncycastle.crypto.io.CipherOutputStream;
-import org.bouncycastle.crypto.modes.CFBBlockCipher;
-import org.bouncycastle.crypto.params.KeyParameter;
-import org.bouncycastle.crypto.params.ParametersWithIV;
-import org.bouncycastle.jce.provider.BouncyCastleProvider;
+import net.minecraft.org.bouncycastle.crypto.BufferedBlockCipher;
+import net.minecraft.org.bouncycastle.crypto.engines.AESFastEngine;
+import net.minecraft.org.bouncycastle.crypto.io.CipherInputStream;
+import net.minecraft.org.bouncycastle.crypto.io.CipherOutputStream;
+import net.minecraft.org.bouncycastle.crypto.modes.CFBBlockCipher;
+import net.minecraft.org.bouncycastle.crypto.params.KeyParameter;
+import net.minecraft.org.bouncycastle.crypto.params.ParametersWithIV;
+import net.minecraft.org.bouncycastle.jce.provider.BouncyCastleProvider;
 
 public class CryptManager {
 
@@ -128,18 +128,18 @@
       return null;
    }
 
-   private static BufferedBlockCipher func_75892_a(boolean var0, Key var1) {
+   private static BufferedBlockCipher a(boolean var0, Key var1) {
       BufferedBlockCipher var2 = new BufferedBlockCipher(new CFBBlockCipher(new AESFastEngine(), 8));
-      var2.init(var0, new ParametersWithIV(new KeyParameter(var1.getEncoded()), var1.getEncoded(), 0, 16));
+      var2.a(var0, new ParametersWithIV(new KeyParameter(var1.getEncoded()), var1.getEncoded(), 0, 16));
       return var2;
    }
 
    public static OutputStream encryptOuputStream(SecretKey var0, OutputStream var1) {
-      return new CipherOutputStream(var1, func_75892_a(true, var0));
+      return new CipherOutputStream(var1, a(true, var0));
    }
 
    public static InputStream decryptInputStream(SecretKey var0, InputStream var1) {
-      return new CipherInputStream(var1, func_75892_a(false, var0));
+      return new CipherInputStream(var1, a(false, var0));
    }
 
    static {
Binary files mcp-mcdev/net/minecraft/src/DedicatedServer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/DedicatedServer.class differ
diff -ur mcp-mcdev/net/minecraft/src/DedicatedServer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/DedicatedServer.java
--- mcp-mcdev/net/minecraft/src/DedicatedServer.java	2012-11-29 21:15:09.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/DedicatedServer.java	2012-11-29 21:41:42.000000000 -0800
@@ -1,14 +1,16 @@
 package net.minecraft.src;
 
 import java.io.File;
-import java.io.IOException;
+import java.io.PrintStream;
 import java.net.InetAddress;
+import java.net.UnknownHostException;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 import java.util.Random;
 import java.util.logging.Level;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.src.AnvilSaveConverter;
 import net.minecraft.src.CallableServerType;
 import net.minecraft.src.CallableType;
 import net.minecraft.src.ConsoleLogManager;
@@ -32,36 +34,42 @@
 import net.minecraft.src.ServerGUI;
 import net.minecraft.src.WorldSettings;
 import net.minecraft.src.WorldType;
+import org.bukkit.craftbukkit.LoggerOutputStream;
+import org.bukkit.craftbukkit.command.CraftRemoteConsoleCommandSender;
+import org.bukkit.craftbukkit.libs.joptsimple.OptionSet;
+import org.bukkit.event.server.ServerCommandEvent;
 
 public class DedicatedServer extends MinecraftServer implements IServer {
 
    private final List pendingCommandList = Collections.synchronizedList(new ArrayList());
    private RConThreadQuery theRConThreadQuery;
    private RConThreadMain theRConThreadMain;
-   private PropertyManager settings;
+   public PropertyManager settings;
    private boolean canSpawnStructures;
    private EnumGameType theGameType;
    private NetworkListenThread networkThread;
    private boolean guiIsEnabled = false;
 
 
-   public DedicatedServer(File var1) {
+   public DedicatedServer(OptionSet var1) {
       super(var1);
       new DedicatedServerSleepThread(this);
    }
 
-   protected boolean startServer() {
+   protected boolean startServer() throws UnknownHostException {
       DedicatedServerCommandThread var1 = new DedicatedServerCommandThread(this);
       var1.setDaemon(true);
       var1.start();
-      ConsoleLogManager.init();
+      ConsoleLogManager.init(this);
+      System.setOut(new PrintStream(new LoggerOutputStream(logger, Level.INFO), true));
+      System.setErr(new PrintStream(new LoggerOutputStream(logger, Level.SEVERE), true));
       logger.info("Starting minecraft server version 1.4.5");
       if(Runtime.getRuntime().maxMemory() / 1024L / 1024L < 512L) {
          logger.warning("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
       }
 
       logger.info("Loading properties");
-      this.settings = new PropertyManager(new File("server.properties"));
+      this.settings = new PropertyManager(this.options);
       if(this.isSinglePlayer()) {
          this.setHostname("127.0.0.1");
       } else {
@@ -100,7 +108,7 @@
 
       try {
          this.networkThread = new DedicatedServerListenThread(this, var3, this.getServerPort());
-      } catch (IOException var19) {
+      } catch (Throwable var19) {
          logger.warning("**** FAILED TO BIND TO PORT!");
          logger.log(Level.WARNING, "The exception was: " + var19.toString());
          logger.warning("Perhaps a server is already running on that port?");
@@ -115,6 +123,7 @@
       }
 
       this.setConfigurationManager(new DedicatedPlayerList(this));
+      this.anvilConverterForAnvilFile = new AnvilSaveConverter(this.server.getWorldContainer());
       long var5 = System.nanoTime();
       if(this.getFolderName() == null) {
          this.setFolderName(this.settings.getStringProperty("level-name", "world"));
@@ -159,11 +168,24 @@
          logger.info("Starting remote control listener");
          this.theRConThreadMain = new RConThreadMain(this);
          this.theRConThreadMain.startThread();
+         this.remoteConsole = new CraftRemoteConsoleCommandSender();
+      }
+
+      if(this.server.getBukkitSpawnRadius() > -1) {
+         logger.info("\'settings.spawn-radius\' in bukkit.yml has been moved to \'spawn-protection\' in server.properties. I will move your config for you.");
+         this.settings.serverProperties.remove("spawn-protection");
+         this.settings.getIntProperty("spawn-protection", this.server.getBukkitSpawnRadius());
+         this.server.removeBukkitSpawnRadius();
+         this.settings.saveProperties();
       }
 
       return true;
    }
 
+   public PropertyManager getPropertyManager() {
+      return this.settings;
+   }
+
    public boolean canStructuresSpawn() {
       return this.canSpawnStructures;
    }
@@ -173,7 +195,7 @@
    }
 
    public int getDifficulty() {
-      return this.settings.getIntProperty("difficulty", 1);
+      return Math.max(0, Math.min(3, this.settings.getIntProperty("difficulty", 1)));
    }
 
    public boolean isHardcore() {
@@ -204,7 +226,7 @@
       System.exit(0);
    }
 
-   protected void updateTimeLightAndEntities() {
+   public void updateTimeLightAndEntities() {
       super.updateTimeLightAndEntities();
       this.executePendingCommands();
    }
@@ -234,7 +256,10 @@
    public void executePendingCommands() {
       while(!this.pendingCommandList.isEmpty()) {
          ServerCommand var1 = (ServerCommand)this.pendingCommandList.remove(0);
-         this.getCommandManager().executeCommand(var1.sender, var1.command);
+         ServerCommandEvent var2 = new ServerCommandEvent(this.console, var1.command);
+         this.server.getPluginManager().callEvent(var2);
+         var1 = new ServerCommand(var2.getCommand(), var1.sender);
+         this.server.dispatchServerCommand(this.console, var1);
       }
 
    }
@@ -297,7 +322,6 @@
       return this.settings.getIntProperty("spawn-protection", super.getSpawnProtectionSize());
    }
 
-   // $FF: synthetic method
    public ServerConfigurationManager getConfigurationManager() {
       return this.getDedicatedPlayerList();
    }
Binary files mcp-mcdev/net/minecraft/src/DedicatedServerCommandThread.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/DedicatedServerCommandThread.class differ
diff -ur mcp-mcdev/net/minecraft/src/DedicatedServerCommandThread.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/DedicatedServerCommandThread.java
--- mcp-mcdev/net/minecraft/src/DedicatedServerCommandThread.java	2012-11-29 21:15:09.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/DedicatedServerCommandThread.java	2012-11-29 21:41:42.000000000 -0800
@@ -1,13 +1,14 @@
 package net.minecraft.src;
 
-import java.io.BufferedReader;
 import java.io.IOException;
-import java.io.InputStreamReader;
+import java.util.logging.Level;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.DedicatedServer;
+import org.bukkit.craftbukkit.Main;
+import org.bukkit.craftbukkit.libs.jline.console.ConsoleReader;
 
 class DedicatedServerCommandThread extends Thread {
 
-   // $FF: synthetic field
    final DedicatedServer server;
 
 
@@ -16,16 +17,26 @@
    }
 
    public void run() {
-      BufferedReader var1 = new BufferedReader(new InputStreamReader(System.in));
+      if(Main.useConsole) {
+         ConsoleReader var1 = this.server.reader;
 
-      String var2;
-      try {
-         while(!this.server.isServerStopped() && this.server.isServerRunning() && (var2 = var1.readLine()) != null) {
-            this.server.addPendingCommand(var2, this.server);
+         try {
+            while(!this.server.isServerStopped() && this.server.isServerRunning()) {
+               String var2;
+               if(Main.useJline) {
+                  var2 = var1.readLine(">", (Character)null);
+               } else {
+                  var2 = var1.readLine();
+               }
+
+               if(var2 != null) {
+                  this.server.addPendingCommand(var2, this.server);
+               }
+            }
+         } catch (IOException var4) {
+            MinecraftServer.logger.log(Level.SEVERE, (String)null, var4);
          }
-      } catch (IOException var4) {
-         var4.printStackTrace();
-      }
 
+      }
    }
 }
Binary files mcp-mcdev/net/minecraft/src/Enchantment.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Enchantment.class differ
diff -ur mcp-mcdev/net/minecraft/src/Enchantment.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Enchantment.java
--- mcp-mcdev/net/minecraft/src/Enchantment.java	2012-11-29 21:15:09.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Enchantment.java	2012-11-29 21:41:42.000000000 -0800
@@ -18,6 +18,7 @@
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EnumEnchantmentType;
 import net.minecraft.src.StatCollector;
+import org.bukkit.craftbukkit.enchantments.CraftEnchantment;
 
 public abstract class Enchantment {
 
@@ -57,6 +58,7 @@
          throw new IllegalArgumentException("Duplicate enchantment id!");
       } else {
          enchantmentsList[var1] = this;
+         org.bukkit.enchantments.Enchantment.registerEnchantment(new CraftEnchantment(this));
       }
    }
 
Binary files mcp-mcdev/net/minecraft/src/Entity.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Entity.class differ
diff -ur mcp-mcdev/net/minecraft/src/Entity.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Entity.java
--- mcp-mcdev/net/minecraft/src/Entity.java	2012-11-29 21:15:08.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Entity.java	2012-11-29 21:41:41.000000000 -0800
@@ -2,6 +2,7 @@
 
 import java.util.List;
 import java.util.Random;
+import java.util.UUID;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.Block;
@@ -17,6 +18,7 @@
 import net.minecraft.src.EntityList;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EnumEntitySize;
 import net.minecraft.src.Explosion;
 import net.minecraft.src.ItemStack;
@@ -32,6 +34,28 @@
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldServer;
+import org.bukkit.Bukkit;
+import org.bukkit.Server;
+import org.bukkit.block.BlockFace;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.entity.Painting;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.entity.EntityCombustByBlockEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.entity.EntityDamageByBlockEvent;
+import org.bukkit.event.entity.EntityDamageByEntityEvent;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
+import org.bukkit.event.painting.PaintingBreakByEntityEvent;
+import org.bukkit.event.vehicle.VehicleBlockCollisionEvent;
+import org.bukkit.event.vehicle.VehicleEnterEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
+import org.bukkit.plugin.PluginManager;
 
 public abstract class Entity {
 
@@ -82,7 +106,7 @@
    protected Random rand;
    public int ticksExisted;
    public int fireResistance;
-   private int fire;
+   public int fire;
    protected boolean inWater;
    public int hurtResistantTime;
    private boolean firstUpdate;
@@ -103,6 +127,9 @@
    protected int field_82152_aq;
    private boolean field_83001_bt;
    public EnumEntitySize myEntitySize;
+   public UUID uniqueId = UUID.randomUUID();
+   public boolean valid = false;
+   protected org.bukkit.entity.Entity bukkitEntity;
 
 
    public Entity(World var1) {
@@ -190,6 +217,32 @@
    }
 
    protected void setRotation(float var1, float var2) {
+      if(Float.isNaN(var1)) {
+         var1 = 0.0F;
+      }
+
+      if(var1 == Float.POSITIVE_INFINITY || var1 == Float.NEGATIVE_INFINITY) {
+         if(this instanceof EntityPlayerMP) {
+            System.err.println(((CraftPlayer)this.getBukkitEntity()).getName() + " was caught trying to crash the server with an invalid yaw");
+            ((CraftPlayer)this.getBukkitEntity()).kickPlayer("Nope");
+         }
+
+         var1 = 0.0F;
+      }
+
+      if(Float.isNaN(var2)) {
+         var2 = 0.0F;
+      }
+
+      if(var2 == Float.POSITIVE_INFINITY || var2 == Float.NEGATIVE_INFINITY) {
+         if(this instanceof EntityPlayerMP) {
+            System.err.println(((CraftPlayer)this.getBukkitEntity()).getName() + " was caught trying to crash the server with an invalid pitch");
+            ((CraftPlayer)this.getBukkitEntity()).kickPlayer("Nope");
+         }
+
+         var2 = 0.0F;
+      }
+
       this.rotationYaw = var1 % 360.0F;
       this.rotationPitch = var2 % 360.0F;
    }
@@ -226,22 +279,20 @@
          MinecraftServer var1 = ((WorldServer)this.worldObj).getMinecraftServer();
          var2 = this.getMaxInPortalTime();
          if(this.inPortal) {
-            if(var1.getAllowNether()) {
-               if(this.ridingEntity == null && this.field_82153_h++ >= var2) {
-                  this.field_82153_h = var2;
-                  this.timeUntilPortal = this.getPortalCooldown();
-                  byte var3;
-                  if(this.worldObj.provider.dimensionId == -1) {
-                     var3 = 0;
-                  } else {
-                     var3 = -1;
-                  }
-
-                  this.travelToTheEnd(var3);
+            if(this.ridingEntity == null && this.field_82153_h++ >= var2) {
+               this.field_82153_h = var2;
+               this.timeUntilPortal = this.getPortalCooldown();
+               byte var3;
+               if(this.worldObj.provider.dimensionId == -1) {
+                  var3 = 0;
+               } else {
+                  var3 = -1;
                }
 
-               this.inPortal = false;
+               this.travelToTheEnd(var3);
             }
+
+            this.inPortal = false;
          } else {
             if(this.field_82153_h > 0) {
                this.field_82153_h -= 4;
@@ -262,10 +313,10 @@
       if(this.isSprinting() && !this.isInWater()) {
          int var5 = MathHelper.floor_double(this.posX);
          var2 = MathHelper.floor_double(this.posY - 0.20000000298023224D - (double)this.yOffset);
-         int var6 = MathHelper.floor_double(this.posZ);
-         int var4 = this.worldObj.getBlockId(var5, var2, var6);
+         int var7 = MathHelper.floor_double(this.posZ);
+         int var4 = this.worldObj.getBlockId(var5, var2, var7);
          if(var4 > 0) {
-            this.worldObj.spawnParticle("tilecrack_" + var4 + "_" + this.worldObj.getBlockMetadata(var5, var2, var6), this.posX + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, this.boundingBox.minY + 0.1D, this.posZ + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, -this.motionX * 4.0D, 1.5D, -this.motionZ * 4.0D);
+            this.worldObj.spawnParticle("tilecrack_" + var4 + "_" + this.worldObj.getBlockMetadata(var5, var2, var7), this.posX + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, this.boundingBox.minY + 0.1D, this.posZ + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, -this.motionX * 4.0D, 1.5D, -this.motionZ * 4.0D);
          }
       }
 
@@ -280,7 +331,16 @@
             }
          } else {
             if(this.fire % 20 == 0) {
-               this.attackEntityFrom(DamageSource.onFire, 1);
+               if(this instanceof EntityLiving) {
+                  EntityDamageEvent var6 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.FIRE_TICK, 1);
+                  this.worldObj.getServer().getPluginManager().callEvent(var6);
+                  if(!var6.isCancelled()) {
+                     var6.getEntity().setLastDamageCause(var6);
+                     this.attackEntityFrom(DamageSource.onFire, var6.getDamage());
+                  }
+               } else {
+                  this.attackEntityFrom(DamageSource.onFire, 1);
+               }
             }
 
             --this.fire;
@@ -311,6 +371,30 @@
 
    protected void setOnFireFromLava() {
       if(!this.isImmuneToFire) {
+         if(this instanceof EntityLiving) {
+            CraftServer var1 = this.worldObj.getServer();
+            Object var2 = null;
+            org.bukkit.entity.Entity var3 = this.getBukkitEntity();
+            EntityDamageByBlockEvent var4 = new EntityDamageByBlockEvent((org.bukkit.block.Block)var2, var3, DamageCause.LAVA, 4);
+            var1.getPluginManager().callEvent(var4);
+            if(!var4.isCancelled()) {
+               var3.setLastDamageCause(var4);
+               this.attackEntityFrom(DamageSource.lava, var4.getDamage());
+            }
+
+            if(this.fire <= 0) {
+               EntityCombustByBlockEvent var5 = new EntityCombustByBlockEvent((org.bukkit.block.Block)var2, var3, 15);
+               var1.getPluginManager().callEvent(var5);
+               if(!var5.isCancelled()) {
+                  this.setFire(var5.getDuration());
+               }
+            } else {
+               this.setFire(15);
+            }
+
+            return;
+         }
+
          this.attackEntityFrom(DamageSource.lava, 4);
          this.setFire(15);
       }
@@ -548,47 +632,70 @@
          var26 = this.posX - var7;
          var28 = this.posY - var9;
          var30 = this.posZ - var11;
+         if(this.isCollidedHorizontally && this.getBukkitEntity() instanceof Vehicle) {
+            Vehicle var41 = (Vehicle)this.getBukkitEntity();
+            org.bukkit.block.Block var36 = this.worldObj.getWorld().getBlockAt(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY - (double)this.yOffset), MathHelper.floor_double(this.posZ));
+            if(var13 > var1) {
+               var36 = var36.getRelative(BlockFace.SOUTH);
+            } else if(var13 < var1) {
+               var36 = var36.getRelative(BlockFace.NORTH);
+            } else if(var17 > var5) {
+               var36 = var36.getRelative(BlockFace.WEST);
+            } else if(var17 < var5) {
+               var36 = var36.getRelative(BlockFace.EAST);
+            }
+
+            VehicleBlockCollisionEvent var37 = new VehicleBlockCollisionEvent(var41, var36);
+            this.worldObj.getServer().getPluginManager().callEvent(var37);
+         }
+
          if(this.canTriggerWalking() && !var20 && this.ridingEntity == null) {
-            int var40 = MathHelper.floor_double(this.posX);
+            int var42 = MathHelper.floor_double(this.posX);
             var33 = MathHelper.floor_double(this.posY - 0.20000000298023224D - (double)this.yOffset);
-            int var36 = MathHelper.floor_double(this.posZ);
-            int var37 = this.worldObj.getBlockId(var40, var33, var36);
-            if(var37 == 0) {
-               int var38 = this.worldObj.func_85175_e(var40, var33 - 1, var36);
+            int var45 = MathHelper.floor_double(this.posZ);
+            int var46 = this.worldObj.getBlockId(var42, var33, var45);
+            if(var46 == 0) {
+               int var38 = this.worldObj.func_85175_e(var42, var33 - 1, var45);
                if(var38 == 11 || var38 == 32 || var38 == 21) {
-                  var37 = this.worldObj.getBlockId(var40, var33 - 1, var36);
+                  var46 = this.worldObj.getBlockId(var42, var33 - 1, var45);
                }
             }
 
-            if(var37 != Block.ladder.blockID) {
+            if(var46 != Block.ladder.blockID) {
                var28 = 0.0D;
             }
 
             this.distanceWalkedModified = (float)((double)this.distanceWalkedModified + (double)MathHelper.sqrt_double(var26 * var26 + var30 * var30) * 0.6D);
             this.field_82151_R = (float)((double)this.field_82151_R + (double)MathHelper.sqrt_double(var26 * var26 + var28 * var28 + var30 * var30) * 0.6D);
-            if(this.field_82151_R > (float)this.nextStepDistance && var37 > 0) {
+            if(this.field_82151_R > (float)this.nextStepDistance && var46 > 0) {
                this.nextStepDistance = (int)this.field_82151_R + 1;
                if(this.isInWater()) {
-                  float var42 = MathHelper.sqrt_double(this.motionX * this.motionX * 0.20000000298023224D + this.motionY * this.motionY + this.motionZ * this.motionZ * 0.20000000298023224D) * 0.35F;
-                  if(var42 > 1.0F) {
-                     var42 = 1.0F;
+                  float var44 = MathHelper.sqrt_double(this.motionX * this.motionX * 0.20000000298023224D + this.motionY * this.motionY + this.motionZ * this.motionZ * 0.20000000298023224D) * 0.35F;
+                  if(var44 > 1.0F) {
+                     var44 = 1.0F;
                   }
 
-                  this.func_85030_a("liquid.swim", var42, 1.0F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
+                  this.func_85030_a("liquid.swim", var44, 1.0F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
                }
 
-               this.playStepSound(var40, var33, var36, var37);
-               Block.blocksList[var37].onEntityWalking(this.worldObj, var40, var33, var36, this);
+               this.playStepSound(var42, var33, var45, var46);
+               Block.blocksList[var46].onEntityWalking(this.worldObj, var42, var33, var45, this);
             }
          }
 
          this.doBlockCollisions();
-         boolean var41 = this.isWet();
+         boolean var40 = this.isWet();
          if(this.worldObj.isBoundingBoxBurning(this.boundingBox.contract(0.0010D, 0.0010D, 0.0010D))) {
             this.dealFireDamage(1);
-            if(!var41) {
+            if(!var40) {
                ++this.fire;
-               if(this.fire == 0) {
+               if(this.fire <= 0) {
+                  EntityCombustEvent var43 = new EntityCombustEvent(this.getBukkitEntity(), 8);
+                  this.worldObj.getServer().getPluginManager().callEvent(var43);
+                  if(!var43.isCancelled()) {
+                     this.setFire(var43.getDuration());
+                  }
+               } else {
                   this.setFire(8);
                }
             }
@@ -596,13 +703,14 @@
             this.fire = -this.fireResistance;
          }
 
-         if(var41 && this.fire > 0) {
+         if(var40 && this.fire > 0) {
             this.func_85030_a("random.fizz", 0.7F, 1.6F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
             this.fire = -this.fireResistance;
          }
 
          this.worldObj.theProfiler.endSection();
       }
+
    }
 
    protected void doBlockCollisions() {
@@ -664,6 +772,17 @@
 
    protected void dealFireDamage(int var1) {
       if(!this.isImmuneToFire) {
+         if(this instanceof EntityLiving) {
+            EntityDamageEvent var2 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.FIRE, var1);
+            this.worldObj.getServer().getPluginManager().callEvent(var2);
+            if(var2.isCancelled()) {
+               return;
+            }
+
+            var1 = var2.getDamage();
+            var2.getEntity().setLastDamageCause(var2);
+         }
+
          this.attackEntityFrom(DamageSource.inFire, var1);
       }
 
@@ -764,6 +883,7 @@
          this.motionX += (double)(var1 * var6 - var2 * var5);
          this.motionZ += (double)(var2 * var6 + var1 * var5);
       }
+
    }
 
    public float getBrightness(float var1) {
@@ -779,7 +899,12 @@
    }
 
    public void setWorld(World var1) {
-      this.worldObj = var1;
+      if(var1 == null) {
+         this.setDead();
+         this.worldObj = ((CraftWorld)Bukkit.getServer().getWorlds().get(0)).getHandle();
+      } else {
+         this.worldObj = var1;
+      }
    }
 
    public void setPositionAndRotation(double var1, double var3, double var5, float var7, float var8) {
@@ -864,8 +989,8 @@
             this.addVelocity(-var2, 0.0D, -var4);
             var1.addVelocity(var2, 0.0D, var4);
          }
-
       }
+
    }
 
    public void addVelocity(double var1, double var3, double var5) {
@@ -913,6 +1038,14 @@
       try {
          var1.setTag("Pos", this.newDoubleNBTList(new double[]{this.posX, this.posY + (double)this.ySize, this.posZ}));
          var1.setTag("Motion", this.newDoubleNBTList(new double[]{this.motionX, this.motionY, this.motionZ}));
+         if(Float.isNaN(this.rotationYaw)) {
+            this.rotationYaw = 0.0F;
+         }
+
+         if(Float.isNaN(this.rotationPitch)) {
+            this.rotationPitch = 0.0F;
+         }
+
          var1.setTag("Rotation", this.newFloatNBTList(new float[]{this.rotationYaw, this.rotationPitch}));
          var1.setFloat("FallDistance", this.fallDistance);
          var1.setShort("Fire", (short)this.fire);
@@ -921,6 +1054,10 @@
          var1.setInteger("Dimension", this.dimension);
          var1.setBoolean("Invulnerable", this.field_83001_bt);
          var1.setInteger("PortalCooldown", this.timeUntilPortal);
+         var1.setLong("WorldUUIDLeast", this.worldObj.getSaveHandler().getUUID().getLeastSignificantBits());
+         var1.setLong("WorldUUIDMost", this.worldObj.getSaveHandler().getUUID().getMostSignificantBits());
+         var1.setLong("UUIDLeast", this.uniqueId.getLeastSignificantBits());
+         var1.setLong("UUIDMost", this.uniqueId.getMostSignificantBits());
          this.writeEntityToNBT(var1);
       } catch (Throwable var5) {
          CrashReport var3 = CrashReport.func_85055_a(var5, "Saving entity NBT");
@@ -933,28 +1070,16 @@
    public void readFromNBT(NBTTagCompound var1) {
       try {
          NBTTagList var2 = var1.getTagList("Pos");
-         NBTTagList var6 = var1.getTagList("Motion");
-         NBTTagList var7 = var1.getTagList("Rotation");
-         this.motionX = ((NBTTagDouble)var6.tagAt(0)).data;
-         this.motionY = ((NBTTagDouble)var6.tagAt(1)).data;
-         this.motionZ = ((NBTTagDouble)var6.tagAt(2)).data;
-         if(Math.abs(this.motionX) > 10.0D) {
-            this.motionX = 0.0D;
-         }
-
-         if(Math.abs(this.motionY) > 10.0D) {
-            this.motionY = 0.0D;
-         }
-
-         if(Math.abs(this.motionZ) > 10.0D) {
-            this.motionZ = 0.0D;
-         }
-
+         NBTTagList var14 = var1.getTagList("Motion");
+         NBTTagList var15 = var1.getTagList("Rotation");
+         this.motionX = ((NBTTagDouble)var14.tagAt(0)).data;
+         this.motionY = ((NBTTagDouble)var14.tagAt(1)).data;
+         this.motionZ = ((NBTTagDouble)var14.tagAt(2)).data;
          this.prevPosX = this.lastTickPosX = this.posX = ((NBTTagDouble)var2.tagAt(0)).data;
          this.prevPosY = this.lastTickPosY = this.posY = ((NBTTagDouble)var2.tagAt(1)).data;
          this.prevPosZ = this.lastTickPosZ = this.posZ = ((NBTTagDouble)var2.tagAt(2)).data;
-         this.prevRotationYaw = this.rotationYaw = ((NBTTagFloat)var7.tagAt(0)).data;
-         this.prevRotationPitch = this.rotationPitch = ((NBTTagFloat)var7.tagAt(1)).data;
+         this.prevRotationYaw = this.rotationYaw = ((NBTTagFloat)var15.tagAt(0)).data;
+         this.prevRotationPitch = this.rotationPitch = ((NBTTagFloat)var15.tagAt(1)).data;
          this.fallDistance = var1.getFloat("FallDistance");
          this.fire = var1.getShort("Fire");
          this.setAir(var1.getShort("Air"));
@@ -963,10 +1088,49 @@
          this.field_83001_bt = var1.getBoolean("Invulnerable");
          this.timeUntilPortal = var1.getInteger("PortalCooldown");
          this.setPosition(this.posX, this.posY, this.posZ);
+         long var5 = var1.getLong("UUIDLeast");
+         long var7 = var1.getLong("UUIDMost");
+         if(var5 != 0L && var7 != 0L) {
+            this.uniqueId = new UUID(var7, var5);
+         }
+
          this.setRotation(this.rotationYaw, this.rotationPitch);
          this.readEntityFromNBT(var1);
-      } catch (Throwable var5) {
-         CrashReport var3 = CrashReport.func_85055_a(var5, "Loading entity NBT");
+         if(!(this.getBukkitEntity() instanceof Vehicle)) {
+            if(Math.abs(this.motionX) > 10.0D) {
+               this.motionX = 0.0D;
+            }
+
+            if(Math.abs(this.motionY) > 10.0D) {
+               this.motionY = 0.0D;
+            }
+
+            if(Math.abs(this.motionZ) > 10.0D) {
+               this.motionZ = 0.0D;
+            }
+         }
+
+         if(this instanceof EntityPlayerMP) {
+            Server var9 = Bukkit.getServer();
+            Object var10 = null;
+            String var11 = var1.getString("World");
+            if(var1.hasKey("WorldUUIDMost") && var1.hasKey("WorldUUIDLeast")) {
+               UUID var12 = new UUID(var1.getLong("WorldUUIDMost"), var1.getLong("WorldUUIDLeast"));
+               var10 = var9.getWorld(var12);
+            } else {
+               var10 = var9.getWorld(var11);
+            }
+
+            if(var10 == null) {
+               EntityPlayerMP var16 = (EntityPlayerMP)this;
+               var10 = ((CraftServer)var9).getServer().worldServerForDimension(var16.dimension).getWorld();
+            }
+
+            this.setWorld(var10 == null?null:((CraftWorld)var10).getHandle());
+         }
+
+      } catch (Throwable var13) {
+         CrashReport var3 = CrashReport.func_85055_a(var13, "Loading entity NBT");
          CrashReportCategory var4 = var3.func_85058_a("Entity being loaded");
          this.func_85029_a(var4);
          throw new ReportedException(var3);
@@ -1103,6 +1267,7 @@
             this.rotationPitch = (float)((double)this.rotationPitch + var3);
          }
       }
+
    }
 
    public void updateRiderPosition() {
@@ -1124,20 +1289,53 @@
    }
 
    public void mountEntity(Entity var1) {
+      this.setPassengerOf(var1);
+   }
+
+   public org.bukkit.entity.Entity getBukkitEntity() {
+      if(this.bukkitEntity == null) {
+         this.bukkitEntity = CraftEntity.getEntity(this.worldObj.getServer(), this);
+      }
+
+      return this.bukkitEntity;
+   }
+
+   public void setPassengerOf(Entity var1) {
+      PluginManager var2 = Bukkit.getPluginManager();
+      this.getBukkitEntity();
       this.entityRiderPitchDelta = 0.0D;
       this.entityRiderYawDelta = 0.0D;
+      VehicleExitEvent var3;
       if(var1 == null) {
          if(this.ridingEntity != null) {
+            if(this.bukkitEntity instanceof LivingEntity && this.ridingEntity.getBukkitEntity() instanceof Vehicle) {
+               var3 = new VehicleExitEvent((Vehicle)this.ridingEntity.getBukkitEntity(), (LivingEntity)this.bukkitEntity);
+               var2.callEvent(var3);
+            }
+
             this.setLocationAndAngles(this.ridingEntity.posX, this.ridingEntity.boundingBox.minY + (double)this.ridingEntity.height, this.ridingEntity.posZ, this.rotationYaw, this.rotationPitch);
             this.ridingEntity.riddenByEntity = null;
          }
 
          this.ridingEntity = null;
       } else if(this.ridingEntity == var1) {
+         if(this.bukkitEntity instanceof LivingEntity && this.ridingEntity.getBukkitEntity() instanceof Vehicle) {
+            var3 = new VehicleExitEvent((Vehicle)this.ridingEntity.getBukkitEntity(), (LivingEntity)this.bukkitEntity);
+            var2.callEvent(var3);
+         }
+
          this.unmountEntity(var1);
          this.ridingEntity.riddenByEntity = null;
          this.ridingEntity = null;
       } else {
+         if(this.bukkitEntity instanceof LivingEntity && var1.getBukkitEntity() instanceof Vehicle) {
+            VehicleEnterEvent var4 = new VehicleEnterEvent((Vehicle)var1.getBukkitEntity(), this.bukkitEntity);
+            var2.callEvent(var4);
+            if(var4.isCancelled()) {
+               return;
+            }
+         }
+
          if(this.ridingEntity != null) {
             this.ridingEntity.riddenByEntity = null;
          }
@@ -1149,6 +1347,7 @@
          this.ridingEntity = var1;
          var1.riddenByEntity = this;
       }
+
    }
 
    public void unmountEntity(Entity var1) {
@@ -1201,6 +1400,7 @@
 
          this.inPortal = true;
       }
+
    }
 
    public int getPortalCooldown() {
@@ -1272,12 +1472,32 @@
    }
 
    public void onStruckByLightning(EntityLightningBolt var1) {
-      this.dealFireDamage(5);
-      ++this.fire;
-      if(this.fire == 0) {
-         this.setFire(8);
+      org.bukkit.entity.Entity var2 = this.getBukkitEntity();
+      org.bukkit.entity.Entity var3 = var1.getBukkitEntity();
+      PluginManager var4 = Bukkit.getPluginManager();
+      if(var2 instanceof Painting) {
+         PaintingBreakByEntityEvent var5 = new PaintingBreakByEntityEvent((Painting)var2, var3);
+         var4.callEvent(var5);
+         if(var5.isCancelled()) {
+            return;
+         }
       }
 
+      EntityDamageByEntityEvent var7 = new EntityDamageByEntityEvent(var3, var2, DamageCause.LIGHTNING, 5);
+      var4.callEvent(var7);
+      if(!var7.isCancelled()) {
+         var2.setLastDamageCause(var7);
+         this.dealFireDamage(var7.getDamage());
+         ++this.fire;
+         if(this.fire == 0) {
+            EntityCombustByEntityEvent var6 = new EntityCombustByEntityEvent(var3, var2, 8);
+            var4.callEvent(var6);
+            if(!var6.isCancelled()) {
+               this.setFire(var6.getDuration());
+            }
+         }
+
+      }
    }
 
    public void onKillEntity(EntityLiving var1) {}
@@ -1409,32 +1629,7 @@
       this.field_82152_aq = var1.field_82152_aq;
    }
 
-   public void travelToTheEnd(int var1) {
-      if(!this.worldObj.isRemote && !this.isDead) {
-         this.worldObj.theProfiler.startSection("changeDimension");
-         MinecraftServer var2 = MinecraftServer.getServer();
-         int var3 = this.dimension;
-         WorldServer var4 = var2.worldServerForDimension(var3);
-         WorldServer var5 = var2.worldServerForDimension(var1);
-         this.dimension = var1;
-         this.worldObj.setEntityDead(this);
-         this.isDead = false;
-         this.worldObj.theProfiler.startSection("reposition");
-         var2.getConfigurationManager().transferEntityToWorld(this, var3, var4, var5);
-         this.worldObj.theProfiler.endStartSection("reloading");
-         Entity var6 = EntityList.createEntityByName(EntityList.getEntityString(this), var5);
-         if(var6 != null) {
-            var6.copyDataFrom(this, true);
-            var5.spawnEntityInWorld(var6);
-         }
-
-         this.isDead = true;
-         this.worldObj.theProfiler.endSection();
-         var4.resetUpdateEntityTick();
-         var5.resetUpdateEntityTick();
-         this.worldObj.theProfiler.endSection();
-      }
-   }
+   public void travelToTheEnd(int var1) {}
 
    public float func_82146_a(Explosion var1, Block var2, int var3, int var4, int var5) {
       return var2.getExplosionResistance(this);
Binary files mcp-mcdev/net/minecraft/src/EntityAIArrowAttack.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIArrowAttack.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAIArrowAttack.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIArrowAttack.java
--- mcp-mcdev/net/minecraft/src/EntityAIArrowAttack.java	2012-11-29 21:15:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIArrowAttack.java	2012-11-29 21:41:39.000000000 -0800
@@ -1,8 +1,11 @@
 package net.minecraft.src;
 
+import net.minecraft.src.Entity;
 import net.minecraft.src.EntityAIBase;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.IRangedAttackMob;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EntityAIArrowAttack extends EntityAIBase {
 
@@ -45,6 +48,8 @@
    }
 
    public void resetTask() {
+      TargetReason var1 = this.attackTarget.isEntityAlive()?TargetReason.FORGOT_TARGET:TargetReason.TARGET_DIED;
+      CraftEventFactory.callEntityTargetEvent((Entity)this.rangedAttackEntityHost, (Entity)null, var1);
       this.attackTarget = null;
       this.field_75318_f = 0;
       this.rangedAttackTime = this.maxRangedAttackTime / 2;
@@ -67,11 +72,10 @@
 
       this.entityHost.getLookHelper().setLookPositionWithEntity(this.attackTarget, 30.0F, 30.0F);
       this.rangedAttackTime = Math.max(this.rangedAttackTime - 1, 0);
-      if(this.rangedAttackTime <= 0) {
-         if(var1 <= (double)this.field_82642_h && var3) {
-            this.rangedAttackEntityHost.attackEntityWithRangedAttack(this.attackTarget);
-            this.rangedAttackTime = this.maxRangedAttackTime;
-         }
+      if(this.rangedAttackTime <= 0 && var1 <= (double)this.field_82642_h && var3) {
+         this.rangedAttackEntityHost.attackEntityWithRangedAttack(this.attackTarget);
+         this.rangedAttackTime = this.maxRangedAttackTime;
       }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityAIAttackOnCollide.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIAttackOnCollide.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAIAttackOnCollide.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIAttackOnCollide.java
--- mcp-mcdev/net/minecraft/src/EntityAIAttackOnCollide.java	2012-11-29 21:15:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIAttackOnCollide.java	2012-11-29 21:41:39.000000000 -0800
@@ -1,10 +1,13 @@
 package net.minecraft.src;
 
+import net.minecraft.src.Entity;
 import net.minecraft.src.EntityAIBase;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.PathEntity;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EntityAIAttackOnCollide extends EntityAIBase {
 
@@ -57,6 +60,8 @@
    }
 
    public void resetTask() {
+      TargetReason var1 = this.entityTarget.isEntityAlive()?TargetReason.FORGOT_TARGET:TargetReason.TARGET_DIED;
+      CraftEventFactory.callEntityTargetEvent(this.attacker, (Entity)null, var1);
       this.entityTarget = null;
       this.attacker.getNavigator().clearPathEntity();
    }
@@ -70,15 +75,14 @@
 
       this.attackTick = Math.max(this.attackTick - 1, 0);
       double var1 = (double)(this.attacker.width * 2.0F * this.attacker.width * 2.0F);
-      if(this.attacker.getDistanceSq(this.entityTarget.posX, this.entityTarget.boundingBox.minY, this.entityTarget.posZ) <= var1) {
-         if(this.attackTick <= 0) {
-            this.attackTick = 20;
-            if(this.attacker.getHeldItem() != null) {
-               this.attacker.swingItem();
-            }
-
-            this.attacker.attackEntityAsMob(this.entityTarget);
+      if(this.attacker.getDistanceSq(this.entityTarget.posX, this.entityTarget.boundingBox.minY, this.entityTarget.posZ) <= var1 && this.attackTick <= 0) {
+         this.attackTick = 20;
+         if(this.attacker.getHeldItem() != null) {
+            this.attacker.swingItem();
          }
+
+         this.attacker.attackEntityAsMob(this.entityTarget);
       }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityAIBreakDoor.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIBreakDoor.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAIBreakDoor.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIBreakDoor.java
--- mcp-mcdev/net/minecraft/src/EntityAIBreakDoor.java	2012-11-29 21:15:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIBreakDoor.java	2012-11-29 21:41:39.000000000 -0800
@@ -2,6 +2,7 @@
 
 import net.minecraft.src.EntityAIDoorInteract;
 import net.minecraft.src.EntityLiving;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityAIBreakDoor extends EntityAIDoorInteract {
 
@@ -46,6 +47,11 @@
       }
 
       if(this.breakingTime == 240 && this.theEntity.worldObj.difficultySetting == 3) {
+         if(CraftEventFactory.callEntityBreakDoorEvent(this.theEntity, this.entityPosX, this.entityPosY, this.entityPosZ).isCancelled()) {
+            this.updateTask();
+            return;
+         }
+
          this.theEntity.worldObj.setBlockWithNotify(this.entityPosX, this.entityPosY, this.entityPosZ, 0);
          this.theEntity.worldObj.playAuxSFX(1012, this.entityPosX, this.entityPosY, this.entityPosZ, 0);
          this.theEntity.worldObj.playAuxSFX(2001, this.entityPosX, this.entityPosY, this.entityPosZ, this.targetDoor.blockID);
Binary files mcp-mcdev/net/minecraft/src/EntityAIEatGrass.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIEatGrass.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAIEatGrass.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIEatGrass.java
--- mcp-mcdev/net/minecraft/src/EntityAIEatGrass.java	2012-11-29 21:15:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIEatGrass.java	2012-11-29 21:41:39.000000000 -0800
@@ -5,6 +5,7 @@
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityAIEatGrass extends EntityAIBase {
 
@@ -55,15 +56,17 @@
          int var2 = MathHelper.floor_double(this.theEntity.posY);
          int var3 = MathHelper.floor_double(this.theEntity.posZ);
          if(this.theWorld.getBlockId(var1, var2, var3) == Block.tallGrass.blockID) {
-            this.theWorld.playAuxSFX(2001, var1, var2, var3, Block.tallGrass.blockID + 4096);
-            this.theWorld.setBlockWithNotify(var1, var2, var3, 0);
-            this.theEntity.eatGrassBonus();
-         } else if(this.theWorld.getBlockId(var1, var2 - 1, var3) == Block.grass.blockID) {
+            if(!CraftEventFactory.callEntityChangeBlockEvent(this.theEntity.getBukkitEntity(), this.theEntity.worldObj.getWorld().getBlockAt(var1, var2, var3), org.bukkit.Material.AIR).isCancelled()) {
+               this.theWorld.playAuxSFX(2001, var1, var2, var3, Block.tallGrass.blockID + 4096);
+               this.theWorld.setBlockWithNotify(var1, var2, var3, 0);
+               this.theEntity.eatGrassBonus();
+            }
+         } else if(this.theWorld.getBlockId(var1, var2 - 1, var3) == Block.grass.blockID && !CraftEventFactory.callEntityChangeBlockEvent(this.theEntity.getBukkitEntity(), this.theEntity.worldObj.getWorld().getBlockAt(var1, var2 - 1, var3), org.bukkit.Material.DIRT).isCancelled()) {
             this.theWorld.playAuxSFX(2001, var1, var2 - 1, var3, Block.grass.blockID);
             this.theWorld.setBlockWithNotify(var1, var2 - 1, var3, Block.dirt.blockID);
             this.theEntity.eatGrassBonus();
          }
-
       }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityAIMate.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIMate.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAIMate.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIMate.java
--- mcp-mcdev/net/minecraft/src/EntityAIMate.java	2012-11-29 21:15:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAIMate.java	2012-11-29 21:41:39.000000000 -0800
@@ -8,6 +8,7 @@
 import net.minecraft.src.EntityAnimal;
 import net.minecraft.src.EntityXPOrb;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class EntityAIMate extends EntityAIBase {
 
@@ -58,16 +59,14 @@
       List var2 = this.theWorld.getEntitiesWithinAABB(this.theAnimal.getClass(), this.theAnimal.boundingBox.expand((double)var1, (double)var1, (double)var1));
       Iterator var3 = var2.iterator();
 
-      EntityAnimal var4;
-      do {
-         if(!var3.hasNext()) {
-            return null;
+      while(var3.hasNext()) {
+         EntityAnimal var4 = (EntityAnimal)var3.next();
+         if(this.theAnimal.canMateWith(var4)) {
+            return var4;
          }
+      }
 
-         var4 = (EntityAnimal)var3.next();
-      } while(!this.theAnimal.canMateWith(var4));
-
-      return var4;
+      return null;
    }
 
    private void spawnBaby() {
@@ -79,7 +78,7 @@
          this.targetMate.resetInLove();
          var1.setGrowingAge(-24000);
          var1.setLocationAndAngles(this.theAnimal.posX, this.theAnimal.posY, this.theAnimal.posZ, 0.0F, 0.0F);
-         this.theWorld.spawnEntityInWorld(var1);
+         this.theWorld.addEntity(var1, SpawnReason.BREEDING);
          Random var2 = this.theAnimal.getRNG();
 
          for(int var3 = 0; var3 < 7; ++var3) {
@@ -91,5 +90,6 @@
 
          this.theWorld.spawnEntityInWorld(new EntityXPOrb(this.theWorld, this.theAnimal.posX, this.theAnimal.posY, this.theAnimal.posZ, var2.nextInt(4) + 1));
       }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityAITarget.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAITarget.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAITarget.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAITarget.java
--- mcp-mcdev/net/minecraft/src/EntityAITarget.java	2012-11-29 21:15:05.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAITarget.java	2012-11-29 21:41:38.000000000 -0800
@@ -1,12 +1,22 @@
 package net.minecraft.src;
 
 import net.minecraft.src.EntityAIBase;
+import net.minecraft.src.EntityAIDefendVillage;
+import net.minecraft.src.EntityAIHurtByTarget;
+import net.minecraft.src.EntityAINearestAttackableTarget;
+import net.minecraft.src.EntityAIOwnerHurtByTarget;
+import net.minecraft.src.EntityAIOwnerHurtTarget;
+import net.minecraft.src.EntityCreature;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.EntityTameable;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.PathEntity;
 import net.minecraft.src.PathPoint;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public abstract class EntityAITarget extends EntityAIBase {
 
@@ -105,7 +115,39 @@
                }
             }
 
-            return true;
+            TargetReason var3 = TargetReason.RANDOM_TARGET;
+            if(this instanceof EntityAIDefendVillage) {
+               var3 = TargetReason.DEFEND_VILLAGE;
+            } else if(this instanceof EntityAIHurtByTarget) {
+               var3 = TargetReason.TARGET_ATTACKED_ENTITY;
+            } else if(this instanceof EntityAINearestAttackableTarget) {
+               if(var1 instanceof EntityPlayer) {
+                  var3 = TargetReason.CLOSEST_PLAYER;
+               }
+            } else if(this instanceof EntityAIOwnerHurtByTarget) {
+               var3 = TargetReason.TARGET_ATTACKED_OWNER;
+            } else if(this instanceof EntityAIOwnerHurtTarget) {
+               var3 = TargetReason.OWNER_ATTACKED_TARGET;
+            }
+
+            EntityTargetLivingEntityEvent var4 = CraftEventFactory.callEntityTargetLivingEvent(this.taskOwner, var1, var3);
+            if(!var4.isCancelled() && var4.getTarget() != null) {
+               if(var1.getBukkitEntity() != var4.getTarget()) {
+                  this.taskOwner.setAttackTarget((EntityLiving)((CraftEntity)var4.getTarget()).getHandle());
+               }
+
+               if(this.taskOwner instanceof EntityCreature) {
+                  ((EntityCreature)this.taskOwner).entityToAttack = ((CraftEntity)var4.getTarget()).getHandle();
+               }
+
+               return true;
+            } else {
+               if(this.taskOwner instanceof EntityCreature) {
+                  ((EntityCreature)this.taskOwner).entityToAttack = null;
+               }
+
+               return false;
+            }
          }
       }
    }
Binary files mcp-mcdev/net/minecraft/src/EntityAITasks.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAITasks.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAITasks.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAITasks.java
--- mcp-mcdev/net/minecraft/src/EntityAITasks.java	2012-11-29 21:15:05.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAITasks.java	2012-11-29 21:41:38.000000000 -0800
@@ -1,16 +1,17 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.src.EntityAIBase;
 import net.minecraft.src.EntityAITaskEntry;
 import net.minecraft.src.Profiler;
+import org.bukkit.craftbukkit.util.UnsafeList;
+import org.bukkit.craftbukkit.util.UnsafeList.Itr;
 
 public class EntityAITasks {
 
-   private List taskEntries = new ArrayList();
-   private List executingTaskEntries = new ArrayList();
+   private List taskEntries = new UnsafeList();
+   private List executingTaskEntries = new UnsafeList();
    private final Profiler theProfiler;
    private int field_75778_d = 0;
    private int field_75779_e = 3;
@@ -43,58 +44,48 @@
    }
 
    public void onUpdateTasks() {
-      ArrayList var1 = new ArrayList();
-      Iterator var2;
-      EntityAITaskEntry var3;
+      Iterator var1;
+      EntityAITaskEntry var2;
       if(this.field_75778_d++ % this.field_75779_e == 0) {
-         var2 = this.taskEntries.iterator();
+         var1 = this.taskEntries.iterator();
 
-         while(var2.hasNext()) {
-            var3 = (EntityAITaskEntry)var2.next();
-            boolean var4 = this.executingTaskEntries.contains(var3);
-            if(var4) {
-               if(this.func_75775_b(var3) && this.func_75773_a(var3)) {
+         while(var1.hasNext()) {
+            var2 = (EntityAITaskEntry)var1.next();
+            boolean var3 = this.executingTaskEntries.contains(var2);
+            if(var3) {
+               if(this.func_75775_b(var2) && this.func_75773_a(var2)) {
                   continue;
                }
 
-               var3.action.resetTask();
-               this.executingTaskEntries.remove(var3);
+               var2.action.resetTask();
+               this.executingTaskEntries.remove(var2);
             }
 
-            if(this.func_75775_b(var3) && var3.action.shouldExecute()) {
-               var1.add(var3);
-               this.executingTaskEntries.add(var3);
+            if(this.func_75775_b(var2) && var2.action.shouldExecute()) {
+               var2.action.startExecuting();
+               this.executingTaskEntries.add(var2);
             }
          }
       } else {
-         var2 = this.executingTaskEntries.iterator();
+         var1 = this.executingTaskEntries.iterator();
 
-         while(var2.hasNext()) {
-            var3 = (EntityAITaskEntry)var2.next();
-            if(!var3.action.continueExecuting()) {
-               var3.action.resetTask();
-               var2.remove();
+         while(var1.hasNext()) {
+            var2 = (EntityAITaskEntry)var1.next();
+            if(!var2.action.continueExecuting()) {
+               var2.action.resetTask();
+               var1.remove();
             }
          }
       }
 
       this.theProfiler.startSection("goalStart");
-      var2 = var1.iterator();
-
-      while(var2.hasNext()) {
-         var3 = (EntityAITaskEntry)var2.next();
-         this.theProfiler.startSection(var3.action.getClass().getSimpleName());
-         var3.action.startExecuting();
-         this.theProfiler.endSection();
-      }
-
       this.theProfiler.endSection();
       this.theProfiler.startSection("goalTick");
-      var2 = this.executingTaskEntries.iterator();
+      var1 = this.executingTaskEntries.iterator();
 
-      while(var2.hasNext()) {
-         var3 = (EntityAITaskEntry)var2.next();
-         var3.action.updateTask();
+      while(var1.hasNext()) {
+         var2 = (EntityAITaskEntry)var1.next();
+         var2.action.updateTask();
       }
 
       this.theProfiler.endSection();
@@ -115,12 +106,14 @@
          EntityAITaskEntry var3 = (EntityAITaskEntry)var2.next();
          if(var3 != var1) {
             if(var1.priority >= var3.priority) {
-               if(this.executingTaskEntries.contains(var3) && !this.areTasksCompatible(var1, var3)) {
+               if(!this.areTasksCompatible(var1, var3) && this.executingTaskEntries.contains(var3)) {
                   this.theProfiler.endSection();
+                  ((Itr)var2).valid = false;
                   return false;
                }
-            } else if(this.executingTaskEntries.contains(var3) && !var3.action.isContinuous()) {
+            } else if(!var3.action.isContinuous() && this.executingTaskEntries.contains(var3)) {
                this.theProfiler.endSection();
+               ((Itr)var2).valid = false;
                return false;
             }
          }
Binary files mcp-mcdev/net/minecraft/src/EntityAgeable.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAgeable.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityAgeable.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAgeable.java
--- mcp-mcdev/net/minecraft/src/EntityAgeable.java	2012-11-29 21:15:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityAgeable.java	2012-11-29 21:41:39.000000000 -0800
@@ -7,9 +7,13 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public abstract class EntityAgeable extends EntityCreature {
 
+   public boolean ageLocked = false;
+
+
    public EntityAgeable(World var1) {
       super(var1);
    }
@@ -25,7 +29,10 @@
             if(var4 != null) {
                var4.setGrowingAge(-24000);
                var4.setLocationAndAngles(this.posX, this.posY, this.posZ, 0.0F, 0.0F);
-               this.worldObj.spawnEntityInWorld(var4);
+               this.worldObj.addEntity(var4, SpawnReason.SPAWNER_EGG);
+               if(!var1.capabilities.isCreativeMode) {
+                  --var2.stackSize;
+               }
             }
          }
       }
@@ -49,24 +56,28 @@
    public void writeEntityToNBT(NBTTagCompound var1) {
       super.writeEntityToNBT(var1);
       var1.setInteger("Age", this.getGrowingAge());
+      var1.setBoolean("AgeLocked", this.ageLocked);
    }
 
    public void readEntityFromNBT(NBTTagCompound var1) {
       super.readEntityFromNBT(var1);
       this.setGrowingAge(var1.getInteger("Age"));
+      this.ageLocked = var1.getBoolean("AgeLocked");
    }
 
    public void onLivingUpdate() {
       super.onLivingUpdate();
       int var1 = this.getGrowingAge();
-      if(var1 < 0) {
-         ++var1;
-         this.setGrowingAge(var1);
-      } else if(var1 > 0) {
-         --var1;
-         this.setGrowingAge(var1);
-      }
+      if(!this.ageLocked) {
+         if(var1 < 0) {
+            ++var1;
+            this.setGrowingAge(var1);
+         } else if(var1 > 0) {
+            --var1;
+            this.setGrowingAge(var1);
+         }
 
+      }
    }
 
    public boolean isChild() {
Binary files mcp-mcdev/net/minecraft/src/EntityArrow.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityArrow.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityArrow.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityArrow.java
--- mcp-mcdev/net/minecraft/src/EntityArrow.java	2012-11-29 21:15:05.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityArrow.java	2012-11-29 21:41:38.000000000 -0800
@@ -5,8 +5,10 @@
 import net.minecraft.src.Block;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityItem;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.IProjectile;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
@@ -15,6 +17,13 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.entity.CraftItem;
+import org.bukkit.entity.Player;
+import org.bukkit.entity.Projectile;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.ProjectileHitEvent;
+import org.bukkit.event.player.PlayerPickupItemEvent;
 
 public class EntityArrow extends Entity implements IProjectile {
 
@@ -67,6 +76,7 @@
          float var20 = (float)var12 * 0.2F;
          this.setThrowableHeading(var6, var8 + (double)var20, var10, var4, var5);
       }
+
    }
 
    public EntityArrow(World var1, EntityLiving var2, float var3) {
@@ -121,10 +131,10 @@
          this.prevRotationPitch = this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var1) * 180.0D / 3.1415927410125732D);
       }
 
-      int var16 = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
-      if(var16 > 0) {
-         Block.blocksList[var16].setBlockBoundsBasedOnState(this.worldObj, this.xTile, this.yTile, this.zTile);
-         AxisAlignedBB var2 = Block.blocksList[var16].getCollisionBoundingBoxFromPool(this.worldObj, this.xTile, this.yTile, this.zTile);
+      int var19 = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
+      if(var19 > 0) {
+         Block.blocksList[var19].setBlockBoundsBasedOnState(this.worldObj, this.xTile, this.yTile, this.zTile);
+         AxisAlignedBB var2 = Block.blocksList[var19].getCollisionBoundingBoxFromPool(this.worldObj, this.xTile, this.yTile, this.zTile);
          if(var2 != null && var2.isVecInside(this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX, this.posY, this.posZ))) {
             this.inGround = true;
          }
@@ -135,14 +145,13 @@
       }
 
       if(this.inGround) {
-         int var18 = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
-         int var19 = this.worldObj.getBlockMetadata(this.xTile, this.yTile, this.zTile);
-         if(var18 == this.inTile && var19 == this.inData) {
+         int var20 = this.worldObj.getBlockId(this.xTile, this.yTile, this.zTile);
+         int var3 = this.worldObj.getBlockMetadata(this.xTile, this.yTile, this.zTile);
+         if(var20 == this.inTile && var3 == this.inData) {
             ++this.ticksInGround;
             if(this.ticksInGround == 1200) {
                this.setDead();
             }
-
          } else {
             this.inGround = false;
             this.motionX *= (double)(this.rand.nextFloat() * 0.2F);
@@ -153,13 +162,13 @@
          }
       } else {
          ++this.ticksInAir;
-         Vec3 var17 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX, this.posY, this.posZ);
-         Vec3 var3 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
-         MovingObjectPosition var4 = this.worldObj.rayTraceBlocks_do_do(var17, var3, false, true);
-         var17 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX, this.posY, this.posZ);
-         var3 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+         Vec3 var21 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX, this.posY, this.posZ);
+         Vec3 var22 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
+         MovingObjectPosition var4 = this.worldObj.rayTraceBlocks_do_do(var21, var22, false, true);
+         var21 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX, this.posY, this.posZ);
+         var22 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.posX + this.motionX, this.posY + this.motionY, this.posZ + this.motionZ);
          if(var4 != null) {
-            var3 = this.worldObj.getWorldVec3Pool().getVecFromPool(var4.hitVec.xCoord, var4.hitVec.yCoord, var4.hitVec.zCoord);
+            var22 = this.worldObj.getWorldVec3Pool().getVecFromPool(var4.hitVec.xCoord, var4.hitVec.yCoord, var4.hitVec.zCoord);
          }
 
          Entity var5 = null;
@@ -173,9 +182,9 @@
             if(var10.canBeCollidedWith() && (var10 != this.shootingEntity || this.ticksInAir >= 5)) {
                var11 = 0.3F;
                AxisAlignedBB var12 = var10.boundingBox.expand((double)var11, (double)var11, (double)var11);
-               MovingObjectPosition var13 = var12.calculateIntercept(var17, var3);
+               MovingObjectPosition var13 = var12.calculateIntercept(var21, var22);
                if(var13 != null) {
-                  double var14 = var17.distanceTo(var13.hitVec);
+                  double var14 = var21.squareDistanceTo(var13.hitVec);
                   if(var14 < var7 || var7 == 0.0D) {
                      var5 = var10;
                      var7 = var14;
@@ -188,37 +197,44 @@
             var4 = new MovingObjectPosition(var5);
          }
 
-         float var20;
+         float var23;
          if(var4 != null) {
+            Projectile var24 = (Projectile)this.getBukkitEntity();
+            ProjectileHitEvent var27 = new ProjectileHitEvent(var24);
+            this.worldObj.getServer().getPluginManager().callEvent(var27);
             if(var4.entityHit != null) {
-               var20 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
-               int var23 = MathHelper.ceiling_double_int((double)var20 * this.damage);
+               var23 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
+               int var16 = MathHelper.ceiling_double_int((double)var23 * this.damage);
                if(this.getIsCritical()) {
-                  var23 += this.rand.nextInt(var23 / 2 + 2);
+                  var16 += this.rand.nextInt(var16 / 2 + 2);
                }
 
-               DamageSource var21 = null;
+               DamageSource var17 = null;
                if(this.shootingEntity == null) {
-                  var21 = DamageSource.causeArrowDamage(this, this);
+                  var17 = DamageSource.causeArrowDamage(this, this);
                } else {
-                  var21 = DamageSource.causeArrowDamage(this, this.shootingEntity);
+                  var17 = DamageSource.causeArrowDamage(this, this.shootingEntity);
                }
 
-               if(this.isBurning()) {
-                  var4.entityHit.setFire(5);
-               }
+               if(var4.entityHit.attackEntityFrom(var17, var16)) {
+                  if(this.isBurning() && (!(var4.entityHit instanceof EntityPlayerMP) || this.worldObj.pvpMode)) {
+                     EntityCombustByEntityEvent var18 = new EntityCombustByEntityEvent(this.getBukkitEntity(), var5.getBukkitEntity(), 5);
+                     Bukkit.getPluginManager().callEvent(var18);
+                     if(!var18.isCancelled()) {
+                        var4.entityHit.setFire(var18.getDuration());
+                     }
+                  }
 
-               if(var4.entityHit.attackEntityFrom(var21, var23)) {
                   if(var4.entityHit instanceof EntityLiving) {
                      if(!this.worldObj.isRemote) {
-                        EntityLiving var24 = (EntityLiving)var4.entityHit;
-                        var24.func_85034_r(var24.func_85035_bI() + 1);
+                        EntityLiving var30 = (EntityLiving)var4.entityHit;
+                        var30.func_85034_r(var30.func_85035_bI() + 1);
                      }
 
                      if(this.knockbackStrength > 0) {
-                        float var25 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
-                        if(var25 > 0.0F) {
-                           var4.entityHit.addVelocity(this.motionX * (double)this.knockbackStrength * 0.6000000238418579D / (double)var25, 0.1D, this.motionZ * (double)this.knockbackStrength * 0.6000000238418579D / (double)var25);
+                        float var29 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+                        if(var29 > 0.0F) {
+                           var4.entityHit.addVelocity(this.motionX * (double)this.knockbackStrength * 0.6000000238418579D / (double)var29, 0.1D, this.motionZ * (double)this.knockbackStrength * 0.6000000238418579D / (double)var29);
                         }
                      }
                   }
@@ -242,10 +258,10 @@
                this.motionX = (double)((float)(var4.hitVec.xCoord - this.posX));
                this.motionY = (double)((float)(var4.hitVec.yCoord - this.posY));
                this.motionZ = (double)((float)(var4.hitVec.zCoord - this.posZ));
-               var20 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
-               this.posX -= this.motionX / (double)var20 * 0.05000000074505806D;
-               this.posY -= this.motionY / (double)var20 * 0.05000000074505806D;
-               this.posZ -= this.motionZ / (double)var20 * 0.05000000074505806D;
+               var23 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionY * this.motionY + this.motionZ * this.motionZ);
+               this.posX -= this.motionX / (double)var23 * 0.05000000074505806D;
+               this.posY -= this.motionY / (double)var23 * 0.05000000074505806D;
+               this.posZ -= this.motionZ / (double)var23 * 0.05000000074505806D;
                this.func_85030_a("random.bowhit", 1.0F, 1.2F / (this.rand.nextFloat() * 0.2F + 0.9F));
                this.inGround = true;
                this.arrowShake = 7;
@@ -265,10 +281,10 @@
          this.posX += this.motionX;
          this.posY += this.motionY;
          this.posZ += this.motionZ;
-         var20 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+         var23 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
          this.rotationYaw = (float)(Math.atan2(this.motionX, this.motionZ) * 180.0D / 3.1415927410125732D);
 
-         for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var20) * 180.0D / 3.1415927410125732D); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+         for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var23) * 180.0D / 3.1415927410125732D); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
             ;
          }
 
@@ -286,24 +302,25 @@
 
          this.rotationPitch = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * 0.2F;
          this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
-         float var22 = 0.99F;
+         float var25 = 0.99F;
          var11 = 0.05F;
          if(this.isInWater()) {
             for(int var26 = 0; var26 < 4; ++var26) {
-               float var27 = 0.25F;
-               this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var27, this.posY - this.motionY * (double)var27, this.posZ - this.motionZ * (double)var27, this.motionX, this.motionY, this.motionZ);
+               float var28 = 0.25F;
+               this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var28, this.posY - this.motionY * (double)var28, this.posZ - this.motionZ * (double)var28, this.motionX, this.motionY, this.motionZ);
             }
 
-            var22 = 0.8F;
+            var25 = 0.8F;
          }
 
-         this.motionX *= (double)var22;
-         this.motionY *= (double)var22;
-         this.motionZ *= (double)var22;
+         this.motionX *= (double)var25;
+         this.motionY *= (double)var25;
+         this.motionZ *= (double)var25;
          this.motionY -= (double)var11;
          this.setPosition(this.posX, this.posY, this.posZ);
          this.doBlockCollisions();
       }
+
    }
 
    public void writeEntityToNBT(NBTTagCompound var1) {
@@ -340,18 +357,28 @@
 
    public void onCollideWithPlayer(EntityPlayer var1) {
       if(!this.worldObj.isRemote && this.inGround && this.arrowShake <= 0) {
-         boolean var2 = this.canBePickedUp == 1 || this.canBePickedUp == 2 && var1.capabilities.isCreativeMode;
+         ItemStack var2 = new ItemStack(Item.arrow);
+         if(this.canBePickedUp == 1 && var1.inventory.canHold(var2) > 0) {
+            EntityItem var3 = new EntityItem(this.worldObj, this.posX, this.posY, this.posZ, var2);
+            PlayerPickupItemEvent var4 = new PlayerPickupItemEvent((Player)var1.getBukkitEntity(), new CraftItem(this.worldObj.getServer(), this, var3), 0);
+            this.worldObj.getServer().getPluginManager().callEvent(var4);
+            if(var4.isCancelled()) {
+               return;
+            }
+         }
+
+         boolean var5 = this.canBePickedUp == 1 || this.canBePickedUp == 2 && var1.capabilities.isCreativeMode;
          if(this.canBePickedUp == 1 && !var1.inventory.addItemStackToInventory(new ItemStack(Item.arrow, 1))) {
-            var2 = false;
+            var5 = false;
          }
 
-         if(var2) {
+         if(var5) {
             this.func_85030_a("random.pop", 0.2F, ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.0F) * 2.0F);
             var1.onItemPickup(this, 1);
             this.setDead();
          }
-
       }
+
    }
 
    protected boolean canTriggerWalking() {
Binary files mcp-mcdev/net/minecraft/src/EntityBlaze.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityBlaze.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityBlaze.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityBlaze.java
--- mcp-mcdev/net/minecraft/src/EntityBlaze.java	2012-11-29 21:15:04.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityBlaze.java	2012-11-29 21:41:37.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Entity;
 import net.minecraft.src.EntityMob;
@@ -8,6 +9,7 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityBlaze extends EntityMob {
 
@@ -131,11 +133,13 @@
 
    protected void dropFewItems(boolean var1, int var2) {
       if(var1) {
-         int var3 = this.rand.nextInt(2 + var2);
-
-         for(int var4 = 0; var4 < var3; ++var4) {
-            this.dropItem(Item.blazeRod.shiftedIndex, 1);
+         ArrayList var3 = new ArrayList();
+         int var4 = this.rand.nextInt(2 + var2);
+         if(var4 > 0) {
+            var3.add(new org.bukkit.inventory.ItemStack(Item.blazeRod.shiftedIndex, var4));
          }
+
+         CraftEventFactory.callEntityDeathEvent(this, var3);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/EntityBoat.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityBoat.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityBoat.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityBoat.java
--- mcp-mcdev/net/minecraft/src/EntityBoat.java	2012-11-29 21:15:04.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityBoat.java	2012-11-29 21:41:37.000000000 -0800
@@ -11,6 +11,16 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.vehicle.VehicleCreateEvent;
+import org.bukkit.event.vehicle.VehicleDamageEvent;
+import org.bukkit.event.vehicle.VehicleDestroyEvent;
+import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.event.vehicle.VehicleMoveEvent;
+import org.bukkit.event.vehicle.VehicleUpdateEvent;
 
 public class EntityBoat extends Entity {
 
@@ -22,10 +32,27 @@
    private double boatZ;
    private double boatYaw;
    private double boatPitch;
+   public double maxSpeed;
+   public double occupiedDeceleration;
+   public double unoccupiedDeceleration;
+   public boolean landBoats;
 
 
+   public void collide(Entity var1) {
+      org.bukkit.entity.Entity var2 = var1 == null?null:var1.getBukkitEntity();
+      VehicleEntityCollisionEvent var3 = new VehicleEntityCollisionEvent((Vehicle)this.getBukkitEntity(), var2);
+      this.worldObj.getServer().getPluginManager().callEvent(var3);
+      if(!var3.isCancelled()) {
+         super.applyEntityCollision(var1);
+      }
+   }
+
    public EntityBoat(World var1) {
       super(var1);
+      this.maxSpeed = 0.4D;
+      this.occupiedDeceleration = 0.2D;
+      this.unoccupiedDeceleration = -1.0D;
+      this.landBoats = false;
       this.field_70279_a = true;
       this.field_70276_b = 0.07D;
       this.preventEntitySpawning = true;
@@ -64,6 +91,7 @@
       this.prevPosX = var2;
       this.prevPosY = var4;
       this.prevPosZ = var6;
+      this.worldObj.getServer().getPluginManager().callEvent(new VehicleCreateEvent((Vehicle)this.getBukkitEntity()));
    }
 
    public double getMountedYOffset() {
@@ -74,24 +102,39 @@
       if(this.func_85032_ar()) {
          return false;
       } else if(!this.worldObj.isRemote && !this.isDead) {
-         this.setForwardDirection(-this.getForwardDirection());
-         this.setTimeSinceHit(10);
-         this.setDamageTaken(this.getDamageTaken() + var2 * 10);
-         this.setBeenAttacked();
-         if(var1.getEntity() instanceof EntityPlayer && ((EntityPlayer)var1.getEntity()).capabilities.isCreativeMode) {
-            this.setDamageTaken(100);
-         }
+         Vehicle var3 = (Vehicle)this.getBukkitEntity();
+         org.bukkit.entity.Entity var4 = var1.getEntity() == null?null:var1.getEntity().getBukkitEntity();
+         VehicleDamageEvent var5 = new VehicleDamageEvent(var3, var4, var2);
+         this.worldObj.getServer().getPluginManager().callEvent(var5);
+         if(var5.isCancelled()) {
+            return true;
+         } else {
+            this.setForwardDirection(-this.getForwardDirection());
+            this.setTimeSinceHit(10);
+            this.setDamageTaken(this.getDamageTaken() + var2 * 10);
+            this.setBeenAttacked();
+            if(var1.getEntity() instanceof EntityPlayer && ((EntityPlayer)var1.getEntity()).capabilities.isCreativeMode) {
+               this.setDamageTaken(100);
+            }
+
+            if(this.getDamageTaken() > 40) {
+               VehicleDestroyEvent var6 = new VehicleDestroyEvent(var3, var4);
+               this.worldObj.getServer().getPluginManager().callEvent(var6);
+               if(var6.isCancelled()) {
+                  this.setDamageTaken(40);
+                  return true;
+               }
+
+               if(this.riddenByEntity != null) {
+                  this.riddenByEntity.mountEntity(this);
+               }
 
-         if(this.getDamageTaken() > 40) {
-            if(this.riddenByEntity != null) {
-               this.riddenByEntity.mountEntity(this);
+               this.dropItemWithOffset(Item.boat.shiftedIndex, 1, 0.0F);
+               this.setDead();
             }
 
-            this.dropItemWithOffset(Item.boat.shiftedIndex, 1, 0.0F);
-            this.setDead();
+            return true;
          }
-
-         return true;
       } else {
          return true;
       }
@@ -102,6 +145,11 @@
    }
 
    public void onUpdate() {
+      double var1 = this.posX;
+      double var3 = this.posY;
+      double var5 = this.posZ;
+      float var7 = this.rotationYaw;
+      float var8 = this.rotationPitch;
       super.onUpdate();
       if(this.getTimeSinceHit() > 0) {
          this.setTimeSinceHit(this.getTimeSinceHit() - 1);
@@ -114,60 +162,60 @@
       this.prevPosX = this.posX;
       this.prevPosY = this.posY;
       this.prevPosZ = this.posZ;
-      byte var1 = 5;
-      double var2 = 0.0D;
+      byte var9 = 5;
+      double var10 = 0.0D;
 
-      for(int var4 = 0; var4 < var1; ++var4) {
-         double var5 = this.boundingBox.minY + (this.boundingBox.maxY - this.boundingBox.minY) * (double)(var4 + 0) / (double)var1 - 0.125D;
-         double var7 = this.boundingBox.minY + (this.boundingBox.maxY - this.boundingBox.minY) * (double)(var4 + 1) / (double)var1 - 0.125D;
-         AxisAlignedBB var9 = AxisAlignedBB.getAABBPool().addOrModifyAABBInPool(this.boundingBox.minX, var5, this.boundingBox.minZ, this.boundingBox.maxX, var7, this.boundingBox.maxZ);
-         if(this.worldObj.isAABBInMaterial(var9, Material.water)) {
-            var2 += 1.0D / (double)var1;
+      for(int var12 = 0; var12 < var9; ++var12) {
+         double var13 = this.boundingBox.minY + (this.boundingBox.maxY - this.boundingBox.minY) * (double)(var12 + 0) / (double)var9 - 0.125D;
+         double var15 = this.boundingBox.minY + (this.boundingBox.maxY - this.boundingBox.minY) * (double)(var12 + 1) / (double)var9 - 0.125D;
+         AxisAlignedBB var17 = AxisAlignedBB.getAABBPool().addOrModifyAABBInPool(this.boundingBox.minX, var13, this.boundingBox.minZ, this.boundingBox.maxX, var15, this.boundingBox.maxZ);
+         if(this.worldObj.isAABBInMaterial(var17, Material.water)) {
+            var10 += 1.0D / (double)var9;
          }
       }
 
-      double var10 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-      double var12;
-      double var14;
-      if(var10 > 0.26249999999999996D) {
-         var12 = Math.cos((double)this.rotationYaw * 3.141592653589793D / 180.0D);
-         var14 = Math.sin((double)this.rotationYaw * 3.141592653589793D / 180.0D);
-
-         for(int var16 = 0; (double)var16 < 1.0D + var10 * 60.0D; ++var16) {
-            double var17 = (double)(this.rand.nextFloat() * 2.0F - 1.0F);
-            double var19 = (double)(this.rand.nextInt(2) * 2 - 1) * 0.7D;
-            double var21;
-            double var23;
+      double var18 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+      double var20;
+      double var22;
+      if(var18 > 0.26249999999999996D) {
+         var20 = Math.cos((double)this.rotationYaw * 3.141592653589793D / 180.0D);
+         var22 = Math.sin((double)this.rotationYaw * 3.141592653589793D / 180.0D);
+
+         for(int var24 = 0; (double)var24 < 1.0D + var18 * 60.0D; ++var24) {
+            double var25 = (double)(this.rand.nextFloat() * 2.0F - 1.0F);
+            double var27 = (double)(this.rand.nextInt(2) * 2 - 1) * 0.7D;
+            double var29;
+            double var31;
             if(this.rand.nextBoolean()) {
-               var21 = this.posX - var12 * var17 * 0.8D + var14 * var19;
-               var23 = this.posZ - var14 * var17 * 0.8D - var12 * var19;
-               this.worldObj.spawnParticle("splash", var21, this.posY - 0.125D, var23, this.motionX, this.motionY, this.motionZ);
+               var29 = this.posX - var20 * var25 * 0.8D + var22 * var27;
+               var31 = this.posZ - var22 * var25 * 0.8D - var20 * var27;
+               this.worldObj.spawnParticle("splash", var29, this.posY - 0.125D, var31, this.motionX, this.motionY, this.motionZ);
             } else {
-               var21 = this.posX + var12 + var14 * var17 * 0.7D;
-               var23 = this.posZ + var14 - var12 * var17 * 0.7D;
-               this.worldObj.spawnParticle("splash", var21, this.posY - 0.125D, var23, this.motionX, this.motionY, this.motionZ);
+               var29 = this.posX + var20 + var22 * var25 * 0.7D;
+               var31 = this.posZ + var22 - var20 * var25 * 0.7D;
+               this.worldObj.spawnParticle("splash", var29, this.posY - 0.125D, var31, this.motionX, this.motionY, this.motionZ);
             }
          }
       }
 
-      double var25;
-      double var27;
+      double var35;
+      double var33;
       if(this.worldObj.isRemote && this.field_70279_a) {
          if(this.boatPosRotationIncrements > 0) {
-            var12 = this.posX + (this.boatX - this.posX) / (double)this.boatPosRotationIncrements;
-            var14 = this.posY + (this.boatY - this.posY) / (double)this.boatPosRotationIncrements;
-            var25 = this.posZ + (this.boatZ - this.posZ) / (double)this.boatPosRotationIncrements;
-            var27 = MathHelper.wrapAngleTo180_double(this.boatYaw - (double)this.rotationYaw);
-            this.rotationYaw = (float)((double)this.rotationYaw + var27 / (double)this.boatPosRotationIncrements);
+            var20 = this.posX + (this.boatX - this.posX) / (double)this.boatPosRotationIncrements;
+            var22 = this.posY + (this.boatY - this.posY) / (double)this.boatPosRotationIncrements;
+            var33 = this.posZ + (this.boatZ - this.posZ) / (double)this.boatPosRotationIncrements;
+            var35 = MathHelper.wrapAngleTo180_double(this.boatYaw - (double)this.rotationYaw);
+            this.rotationYaw = (float)((double)this.rotationYaw + var35 / (double)this.boatPosRotationIncrements);
             this.rotationPitch = (float)((double)this.rotationPitch + (this.boatPitch - (double)this.rotationPitch) / (double)this.boatPosRotationIncrements);
             --this.boatPosRotationIncrements;
-            this.setPosition(var12, var14, var25);
+            this.setPosition(var20, var22, var33);
             this.setRotation(this.rotationYaw, this.rotationPitch);
          } else {
-            var12 = this.posX + this.motionX;
-            var14 = this.posY + this.motionY;
-            var25 = this.posZ + this.motionZ;
-            this.setPosition(var12, var14, var25);
+            var20 = this.posX + this.motionX;
+            var22 = this.posY + this.motionY;
+            var33 = this.posZ + this.motionZ;
+            this.setPosition(var20, var22, var33);
             if(this.onGround) {
                this.motionX *= 0.5D;
                this.motionY *= 0.5D;
@@ -178,11 +226,10 @@
             this.motionY *= 0.949999988079071D;
             this.motionZ *= 0.9900000095367432D;
          }
-
       } else {
-         if(var2 < 1.0D) {
-            var12 = var2 * 2.0D - 1.0D;
-            this.motionY += 0.03999999910593033D * var12;
+         if(var10 < 1.0D) {
+            var20 = var10 * 2.0D - 1.0D;
+            this.motionY += 0.03999999910593033D * var20;
          } else {
             if(this.motionY < 0.0D) {
                this.motionY /= 2.0D;
@@ -194,17 +241,27 @@
          if(this.riddenByEntity != null) {
             this.motionX += this.riddenByEntity.motionX * this.field_70276_b;
             this.motionZ += this.riddenByEntity.motionZ * this.field_70276_b;
+         } else if(this.unoccupiedDeceleration >= 0.0D) {
+            this.motionX *= this.unoccupiedDeceleration;
+            this.motionZ *= this.unoccupiedDeceleration;
+            if(this.motionX <= 1.0E-5D) {
+               this.motionX = 0.0D;
+            }
+
+            if(this.motionZ <= 1.0E-5D) {
+               this.motionZ = 0.0D;
+            }
          }
 
-         var12 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-         if(var12 > 0.35D) {
-            var14 = 0.35D / var12;
-            this.motionX *= var14;
-            this.motionZ *= var14;
-            var12 = 0.35D;
+         var20 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+         if(var20 > 0.35D) {
+            var22 = 0.35D / var20;
+            this.motionX *= var22;
+            this.motionZ *= var22;
+            var20 = 0.35D;
          }
 
-         if(var12 > var10 && this.field_70276_b < 0.35D) {
+         if(var20 > var18 && this.field_70276_b < 0.35D) {
             this.field_70276_b += (0.35D - this.field_70276_b) / 35.0D;
             if(this.field_70276_b > 0.35D) {
                this.field_70276_b = 0.35D;
@@ -216,24 +273,29 @@
             }
          }
 
-         if(this.onGround) {
+         if(this.onGround && !this.landBoats) {
             this.motionX *= 0.5D;
             this.motionY *= 0.5D;
             this.motionZ *= 0.5D;
          }
 
          this.moveEntity(this.motionX, this.motionY, this.motionZ);
-         if(this.isCollidedHorizontally && var10 > 0.2D) {
+         if(this.isCollidedHorizontally && var18 > 0.2D) {
             if(!this.worldObj.isRemote) {
-               this.setDead();
-
-               int var29;
-               for(var29 = 0; var29 < 3; ++var29) {
-                  this.dropItemWithOffset(Block.planks.blockID, 1, 0.0F);
-               }
+               Vehicle var37 = (Vehicle)this.getBukkitEntity();
+               VehicleDestroyEvent var38 = new VehicleDestroyEvent(var37, (org.bukkit.entity.Entity)null);
+               this.worldObj.getServer().getPluginManager().callEvent(var38);
+               if(!var38.isCancelled()) {
+                  this.setDead();
+
+                  int var39;
+                  for(var39 = 0; var39 < 3; ++var39) {
+                     this.dropItemWithOffset(Block.planks.blockID, 1, 0.0F);
+                  }
 
-               for(var29 = 0; var29 < 2; ++var29) {
-                  this.dropItemWithOffset(Item.stick.shiftedIndex, 1, 0.0F);
+                  for(var39 = 0; var39 < 2; ++var39) {
+                     this.dropItemWithOffset(Item.stick.shiftedIndex, 1, 0.0F);
+                  }
                }
             }
          } else {
@@ -243,59 +305,71 @@
          }
 
          this.rotationPitch = 0.0F;
-         var14 = (double)this.rotationYaw;
-         var25 = this.prevPosX - this.posX;
-         var27 = this.prevPosZ - this.posZ;
-         if(var25 * var25 + var27 * var27 > 0.0010D) {
-            var14 = (double)((float)(Math.atan2(var27, var25) * 180.0D / 3.141592653589793D));
+         var22 = (double)this.rotationYaw;
+         var33 = this.prevPosX - this.posX;
+         var35 = this.prevPosZ - this.posZ;
+         if(var33 * var33 + var35 * var35 > 0.0010D) {
+            var22 = (double)((float)(Math.atan2(var35, var33) * 180.0D / 3.141592653589793D));
          }
 
-         double var30 = MathHelper.wrapAngleTo180_double(var14 - (double)this.rotationYaw);
-         if(var30 > 20.0D) {
-            var30 = 20.0D;
+         double var40 = MathHelper.wrapAngleTo180_double(var22 - (double)this.rotationYaw);
+         if(var40 > 20.0D) {
+            var40 = 20.0D;
          }
 
-         if(var30 < -20.0D) {
-            var30 = -20.0D;
+         if(var40 < -20.0D) {
+            var40 = -20.0D;
          }
 
-         this.rotationYaw = (float)((double)this.rotationYaw + var30);
+         this.rotationYaw = (float)((double)this.rotationYaw + var40);
          this.setRotation(this.rotationYaw, this.rotationPitch);
+         CraftServer var54 = this.worldObj.getServer();
+         CraftWorld var42 = this.worldObj.getWorld();
+         Location var43 = new Location(var42, var1, var3, var5, var7, var8);
+         Location var44 = new Location(var42, this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
+         Vehicle var45 = (Vehicle)this.getBukkitEntity();
+         var54.getPluginManager().callEvent(new VehicleUpdateEvent(var45));
+         if(!var43.equals(var44)) {
+            VehicleMoveEvent var46 = new VehicleMoveEvent(var45, var43, var44);
+            var54.getPluginManager().callEvent(var46);
+         }
+
          if(!this.worldObj.isRemote) {
-            List var32 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand(0.20000000298023224D, 0.0D, 0.20000000298023224D));
-            int var33;
-            if(var32 != null && !var32.isEmpty()) {
-               for(var33 = 0; var33 < var32.size(); ++var33) {
-                  Entity var34 = (Entity)var32.get(var33);
-                  if(var34 != this.riddenByEntity && var34.canBePushed() && var34 instanceof EntityBoat) {
-                     var34.applyEntityCollision(this);
+            List var55 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand(0.20000000298023224D, 0.0D, 0.20000000298023224D));
+            int var47;
+            if(var55 != null && !var55.isEmpty()) {
+               for(var47 = 0; var47 < var55.size(); ++var47) {
+                  Entity var48 = (Entity)var55.get(var47);
+                  if(var48 != this.riddenByEntity && var48.canBePushed() && var48 instanceof EntityBoat) {
+                     var48.applyEntityCollision(this);
                   }
                }
             }
 
-            for(var33 = 0; var33 < 4; ++var33) {
-               int var40 = MathHelper.floor_double(this.posX + ((double)(var33 % 2) - 0.5D) * 0.8D);
-               int var35 = MathHelper.floor_double(this.posZ + ((double)(var33 / 2) - 0.5D) * 0.8D);
-
-               for(int var36 = 0; var36 < 2; ++var36) {
-                  int var37 = MathHelper.floor_double(this.posY) + var36;
-                  int var38 = this.worldObj.getBlockId(var40, var37, var35);
-                  int var39 = this.worldObj.getBlockMetadata(var40, var37, var35);
-                  if(var38 == Block.snow.blockID) {
-                     this.worldObj.setBlockWithNotify(var40, var37, var35, 0);
-                  } else if(var38 == Block.waterlily.blockID) {
-                     Block.waterlily.dropBlockAsItemWithChance(this.worldObj, var40, var37, var35, var39, 0.3F, 0);
-                     this.worldObj.setBlockWithNotify(var40, var37, var35, 0);
+            for(var47 = 0; var47 < 4; ++var47) {
+               int var56 = MathHelper.floor_double(this.posX + ((double)(var47 % 2) - 0.5D) * 0.8D);
+               int var49 = MathHelper.floor_double(this.posZ + ((double)(var47 / 2) - 0.5D) * 0.8D);
+
+               for(int var50 = 0; var50 < 2; ++var50) {
+                  int var51 = MathHelper.floor_double(this.posY) + var50;
+                  int var52 = this.worldObj.getBlockId(var56, var51, var49);
+                  int var53 = this.worldObj.getBlockMetadata(var56, var51, var49);
+                  if(var52 == Block.snow.blockID) {
+                     this.worldObj.setBlockWithNotify(var56, var51, var49, 0);
+                  } else if(var52 == Block.waterlily.blockID) {
+                     Block.waterlily.dropBlockAsItemWithChance(this.worldObj, var56, var51, var49, var53, 0.3F, 0);
+                     this.worldObj.setBlockWithNotify(var56, var51, var49, 0);
                   }
                }
             }
 
             if(this.riddenByEntity != null && this.riddenByEntity.isDead) {
+               this.riddenByEntity.ridingEntity = null;
                this.riddenByEntity = null;
             }
-
          }
       }
+
    }
 
    public void updateRiderPosition() {
@@ -304,6 +378,7 @@
          double var3 = Math.sin((double)this.rotationYaw * 3.141592653589793D / 180.0D) * 0.4D;
          this.riddenByEntity.setPosition(this.posX + var1, this.posY + this.getMountedYOffset() + this.riddenByEntity.getYOffset(), this.posZ + var3);
       }
+
    }
 
    protected void writeEntityToNBT(NBTTagCompound var1) {}
Binary files mcp-mcdev/net/minecraft/src/EntityChicken.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityChicken.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityChicken.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityChicken.java
--- mcp-mcdev/net/minecraft/src/EntityChicken.java	2012-11-29 21:15:04.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityChicken.java	2012-11-29 21:41:37.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.EntityAIFollowParent;
 import net.minecraft.src.EntityAILookIdle;
 import net.minecraft.src.EntityAIMate;
@@ -15,6 +16,7 @@
 import net.minecraft.src.ItemSeeds;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityChicken extends EntityAnimal {
 
@@ -105,18 +107,19 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(3) + this.rand.nextInt(1 + var2);
-
-      for(int var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.feather.shiftedIndex, 1);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3) + this.rand.nextInt(1 + var2);
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(Item.feather.shiftedIndex, var4));
       }
 
       if(this.isBurning()) {
-         this.dropItem(Item.chickenCooked.shiftedIndex, 1);
+         var3.add(new org.bukkit.inventory.ItemStack(Item.chickenCooked.shiftedIndex, 1));
       } else {
-         this.dropItem(Item.chickenRaw.shiftedIndex, 1);
+         var3.add(new org.bukkit.inventory.ItemStack(Item.chickenRaw.shiftedIndex, 1));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public EntityChicken spawnBabyAnimal(EntityAgeable var1) {
@@ -127,7 +130,6 @@
       return var1 != null && var1.getItem() instanceof ItemSeeds;
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntityCow.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCow.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityCow.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCow.java
--- mcp-mcdev/net/minecraft/src/EntityCow.java	2012-11-29 21:15:04.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCow.java	2012-11-29 21:41:37.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.EntityAIFollowParent;
 import net.minecraft.src.EntityAILookIdle;
 import net.minecraft.src.EntityAIMate;
@@ -14,6 +15,10 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.player.PlayerBucketFillEvent;
 
 public class EntityCow extends EntityAnimal {
 
@@ -65,35 +70,36 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(3) + this.rand.nextInt(1 + var2);
-
-      int var4;
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.leather.shiftedIndex, 1);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3) + this.rand.nextInt(1 + var2);
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(Item.leather.shiftedIndex, var4));
       }
 
-      var3 = this.rand.nextInt(3) + 1 + this.rand.nextInt(1 + var2);
-
-      for(var4 = 0; var4 < var3; ++var4) {
-         if(this.isBurning()) {
-            this.dropItem(Item.beefCooked.shiftedIndex, 1);
-         } else {
-            this.dropItem(Item.beefRaw.shiftedIndex, 1);
-         }
+      var4 = this.rand.nextInt(3) + 1 + this.rand.nextInt(1 + var2);
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(this.isBurning()?Item.beefCooked.shiftedIndex:Item.beefRaw.shiftedIndex, var4));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public boolean interact(EntityPlayer var1) {
       ItemStack var2 = var1.inventory.getCurrentItem();
       if(var2 != null && var2.itemID == Item.bucketEmpty.shiftedIndex) {
-         if(--var2.stackSize <= 0) {
-            var1.inventory.setInventorySlotContents(var1.inventory.currentItem, new ItemStack(Item.bucketMilk));
-         } else if(!var1.inventory.addItemStackToInventory(new ItemStack(Item.bucketMilk))) {
-            var1.dropPlayerItem(new ItemStack(Item.bucketMilk.shiftedIndex, 1, 0));
-         }
+         Location var3 = this.getBukkitEntity().getLocation();
+         PlayerBucketFillEvent var4 = CraftEventFactory.callPlayerBucketFillEvent(var1, var3.getBlockX(), var3.getBlockY(), var3.getBlockZ(), -1, var2, Item.bucketMilk);
+         if(var4.isCancelled()) {
+            return false;
+         } else {
+            if(--var2.stackSize <= 0) {
+               var1.inventory.setInventorySlotContents(var1.inventory.currentItem, CraftItemStack.createNMSItemStack(var4.getItemStack()));
+            } else if(!var1.inventory.addItemStackToInventory(new ItemStack(Item.bucketMilk))) {
+               var1.dropPlayerItem(CraftItemStack.createNMSItemStack(var4.getItemStack()));
+            }
 
-         return true;
+            return true;
+         }
       } else {
          return super.interact(var1);
       }
@@ -103,7 +109,6 @@
       return new EntityCow(this.worldObj);
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntityCreature.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCreature.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityCreature.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCreature.java
--- mcp-mcdev/net/minecraft/src/EntityCreature.java	2012-11-29 21:15:04.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCreature.java	2012-11-29 21:41:37.000000000 -0800
@@ -6,11 +6,15 @@
 import net.minecraft.src.PathEntity;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.TrigMath;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public abstract class EntityCreature extends EntityLiving {
 
-   private PathEntity pathToEntity;
-   protected Entity entityToAttack;
+   public PathEntity pathToEntity;
+   public Entity entityToAttack;
    protected boolean hasAttacked = false;
    protected int fleeingTick = 0;
 
@@ -32,17 +36,37 @@
       this.hasAttacked = this.isMovementCeased();
       float var1 = 16.0F;
       if(this.entityToAttack == null) {
-         this.entityToAttack = this.findPlayerToAttack();
+         Entity var2 = this.findPlayerToAttack();
+         if(var2 != null) {
+            EntityTargetEvent var3 = new EntityTargetEvent(this.getBukkitEntity(), var2.getBukkitEntity(), TargetReason.CLOSEST_PLAYER);
+            this.worldObj.getServer().getPluginManager().callEvent(var3);
+            if(!var3.isCancelled()) {
+               if(var3.getTarget() == null) {
+                  this.entityToAttack = null;
+               } else {
+                  this.entityToAttack = ((CraftEntity)var3.getTarget()).getHandle();
+               }
+            }
+         }
+
          if(this.entityToAttack != null) {
             this.pathToEntity = this.worldObj.getPathEntityToEntity(this, this.entityToAttack, var1, true, false, false, true);
          }
       } else if(this.entityToAttack.isEntityAlive()) {
-         float var2 = this.entityToAttack.getDistanceToEntity(this);
+         float var21 = this.entityToAttack.getDistanceToEntity(this);
          if(this.canEntityBeSeen(this.entityToAttack)) {
-            this.attackEntity(this.entityToAttack, var2);
+            this.attackEntity(this.entityToAttack, var21);
          }
       } else {
-         this.entityToAttack = null;
+         EntityTargetEvent var22 = new EntityTargetEvent(this.getBukkitEntity(), (org.bukkit.entity.Entity)null, TargetReason.TARGET_DIED);
+         this.worldObj.getServer().getPluginManager().callEvent(var22);
+         if(!var22.isCancelled()) {
+            if(var22.getTarget() == null) {
+               this.entityToAttack = null;
+            } else {
+               this.entityToAttack = ((CraftEntity)var22.getTarget()).getHandle();
+            }
+         }
       }
 
       this.worldObj.theProfiler.endSection();
@@ -52,8 +76,8 @@
          this.updateWanderPath();
       }
 
-      int var21 = MathHelper.floor_double(this.boundingBox.minY + 0.5D);
-      boolean var3 = this.isInWater();
+      int var23 = MathHelper.floor_double(this.boundingBox.minY + 0.5D);
+      boolean var24 = this.isInWater();
       boolean var4 = this.handleLavaMovement();
       this.rotationPitch = 0.0F;
       if(this.pathToEntity != null && this.rand.nextInt(100) != 0) {
@@ -75,8 +99,8 @@
          if(var5 != null) {
             double var8 = var5.xCoord - this.posX;
             double var10 = var5.zCoord - this.posZ;
-            double var12 = var5.yCoord - (double)var21;
-            float var14 = (float)(Math.atan2(var10, var8) * 180.0D / 3.1415927410125732D) - 90.0F;
+            double var12 = var5.yCoord - (double)var23;
+            float var14 = (float)(TrigMath.atan2(var10, var8) * 180.0D / 3.1415927410125732D) - 90.0F;
             float var15 = MathHelper.wrapAngleTo180_float(var14 - this.rotationYaw);
             this.moveForward = this.moveSpeed;
             if(var15 > 30.0F) {
@@ -111,7 +135,7 @@
             this.isJumping = true;
          }
 
-         if(this.rand.nextFloat() < 0.8F && (var3 || var4)) {
+         if(this.rand.nextFloat() < 0.8F && (var24 || var4)) {
             this.isJumping = true;
          }
 
@@ -120,6 +144,7 @@
          super.updateEntityActionState();
          this.pathToEntity = null;
       }
+
    }
 
    protected void updateWanderPath() {
Binary files mcp-mcdev/net/minecraft/src/EntityCreeper.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCreeper.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityCreeper.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCreeper.java
--- mcp-mcdev/net/minecraft/src/EntityCreeper.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityCreeper.java	2012-11-29 21:41:36.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Entity;
 import net.minecraft.src.EntityAIAttackOnCollide;
@@ -19,6 +20,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+import org.bukkit.event.entity.CreeperPowerEvent.PowerCause;
 
 public class EntityCreeper extends EntityMob {
 
@@ -26,6 +30,7 @@
    private int timeSinceIgnited;
    private int fuseTime = 30;
    private int explosionRadius = 3;
+   private int record = -1;
 
 
    public EntityCreeper(World var1) {
@@ -109,13 +114,15 @@
             this.timeSinceIgnited = this.fuseTime;
             if(!this.worldObj.isRemote) {
                boolean var2 = this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing");
-               if(this.getPowered()) {
-                  this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)(this.explosionRadius * 2), var2);
+               float var3 = this.getPowered()?6.0F:3.0F;
+               ExplosionPrimeEvent var4 = new ExplosionPrimeEvent(this.getBukkitEntity(), var3, false);
+               this.worldObj.getServer().getPluginManager().callEvent(var4);
+               if(!var4.isCancelled()) {
+                  this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, var4.getRadius(), var4.getFire(), var2);
+                  this.setDead();
                } else {
-                  this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)this.explosionRadius, var2);
+                  this.timeSinceIgnited = 0;
                }
-
-               this.setDead();
             }
          }
       }
@@ -132,12 +139,34 @@
    }
 
    public void onDeath(DamageSource var1) {
-      super.onDeath(var1);
       if(var1.getEntity() instanceof EntitySkeleton) {
          int var2 = Item.record13.shiftedIndex + this.rand.nextInt(Item.field_85180_cf.shiftedIndex - Item.record13.shiftedIndex + 1);
-         this.dropItem(var2, 1);
+         this.record = var2;
       }
 
+      super.onDeath(var1);
+   }
+
+   protected void dropDeathLoot(boolean var1, int var2) {
+      int var3 = this.getDropItemId();
+      ArrayList var4 = new ArrayList();
+      if(var3 > 0) {
+         int var5 = this.rand.nextInt(3);
+         if(var2 > 0) {
+            var5 += this.rand.nextInt(var2 + 1);
+         }
+
+         if(var5 > 0) {
+            var4.add(new org.bukkit.inventory.ItemStack(var3, var5));
+         }
+      }
+
+      if(this.record != -1) {
+         var4.add(new org.bukkit.inventory.ItemStack(this.record, 1));
+         this.record = -1;
+      }
+
+      CraftEventFactory.callEntityDeathEvent(this, var4);
    }
 
    public boolean attackEntityAsMob(Entity var1) {
@@ -162,6 +191,17 @@
 
    public void onStruckByLightning(EntityLightningBolt var1) {
       super.onStruckByLightning(var1);
-      this.dataWatcher.updateObject(17, Byte.valueOf((byte)1));
+      if(!CraftEventFactory.callCreeperPowerEvent(this, var1, PowerCause.LIGHTNING).isCancelled()) {
+         this.setPowered(true);
+      }
+   }
+
+   public void setPowered(boolean var1) {
+      if(!var1) {
+         this.dataWatcher.updateObject(17, Byte.valueOf((byte)0));
+      } else {
+         this.dataWatcher.updateObject(17, Byte.valueOf((byte)1));
+      }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityDamageSourceIndirect.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityDamageSourceIndirect.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityDamageSourceIndirect.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityDamageSourceIndirect.java
--- mcp-mcdev/net/minecraft/src/EntityDamageSourceIndirect.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityDamageSourceIndirect.java	2012-11-29 21:41:36.000000000 -0800
@@ -26,4 +26,8 @@
    public String getDeathMessage(EntityPlayer var1) {
       return StatCollector.translateToLocalFormatted("death." + this.damageType, new Object[]{var1.username, this.indirectEntity == null?this.damageSourceEntity.getEntityName():this.indirectEntity.getEntityName()});
    }
+
+   public Entity getProximateDamageSource() {
+      return super.getEntity();
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityDragon.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityDragon.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityDragon.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityDragon.java
--- mcp-mcdev/net/minecraft/src/EntityDragon.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityDragon.java	2012-11-29 21:41:36.000000000 -0800
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.src.AxisAlignedBB;
@@ -11,11 +13,25 @@
 import net.minecraft.src.EntityEnderCrystal;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EntityXPOrb;
 import net.minecraft.src.IEntityMultiPart;
 import net.minecraft.src.MathHelper;
+import net.minecraft.src.Packet53BlockChange;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.PortalType;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.util.BlockStateListPopulator;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.entity.EntityCreatePortalEvent;
+import org.bukkit.event.entity.EntityDamageByEntityEvent;
+import org.bukkit.event.entity.EntityExplodeEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public class EntityDragon extends EntityLiving implements IEntityMultiPart {
 
@@ -113,9 +129,9 @@
 
          this.rotationYaw = MathHelper.wrapAngleTo180_float(this.rotationYaw);
          if(this.ringBufferIndex < 0) {
-            for(int var45 = 0; var45 < this.ringBuffer.length; ++var45) {
-               this.ringBuffer[var45][0] = (double)this.rotationYaw;
-               this.ringBuffer[var45][1] = this.posY;
+            for(int var4 = 0; var4 < this.ringBuffer.length; ++var4) {
+               this.ringBuffer[var4][0] = (double)this.rotationYaw;
+               this.ringBuffer[var4][1] = this.posY;
             }
          }
 
@@ -125,101 +141,107 @@
 
          this.ringBuffer[this.ringBufferIndex][0] = (double)this.rotationYaw;
          this.ringBuffer[this.ringBufferIndex][1] = this.posY;
-         double var4;
-         double var6;
-         double var8;
-         double var10;
-         float var20;
+         double var5;
+         double var7;
+         double var9;
+         double var11;
+         float var21;
+         float var24;
+         float var29;
+         float var28;
+         float var31;
          if(this.worldObj.isRemote) {
             if(this.newPosRotationIncrements > 0) {
-               var4 = this.posX + (this.newPosX - this.posX) / (double)this.newPosRotationIncrements;
-               var6 = this.posY + (this.newPosY - this.posY) / (double)this.newPosRotationIncrements;
-               var8 = this.posZ + (this.newPosZ - this.posZ) / (double)this.newPosRotationIncrements;
-               var10 = MathHelper.wrapAngleTo180_double(this.newRotationYaw - (double)this.rotationYaw);
-               this.rotationYaw = (float)((double)this.rotationYaw + var10 / (double)this.newPosRotationIncrements);
+               var5 = this.posX + (this.newPosX - this.posX) / (double)this.newPosRotationIncrements;
+               var7 = this.posY + (this.newPosY - this.posY) / (double)this.newPosRotationIncrements;
+               var9 = this.posZ + (this.newPosZ - this.posZ) / (double)this.newPosRotationIncrements;
+               var11 = MathHelper.wrapAngleTo180_double(this.newRotationYaw - (double)this.rotationYaw);
+               this.rotationYaw = (float)((double)this.rotationYaw + var11 / (double)this.newPosRotationIncrements);
                this.rotationPitch = (float)((double)this.rotationPitch + (this.newRotationPitch - (double)this.rotationPitch) / (double)this.newPosRotationIncrements);
                --this.newPosRotationIncrements;
-               this.setPosition(var4, var6, var8);
+               this.setPosition(var5, var7, var9);
                this.setRotation(this.rotationYaw, this.rotationPitch);
             }
          } else {
-            var4 = this.targetX - this.posX;
-            var6 = this.targetY - this.posY;
-            var8 = this.targetZ - this.posZ;
-            var10 = var4 * var4 + var6 * var6 + var8 * var8;
+            var5 = this.targetX - this.posX;
+            var7 = this.targetY - this.posY;
+            var9 = this.targetZ - this.posZ;
+            var11 = var5 * var5 + var7 * var7 + var9 * var9;
+            double var13;
+            double var15;
             if(this.target != null) {
                this.targetX = this.target.posX;
                this.targetZ = this.target.posZ;
-               double var12 = this.targetX - this.posX;
-               double var14 = this.targetZ - this.posZ;
-               double var16 = Math.sqrt(var12 * var12 + var14 * var14);
-               double var18 = 0.4000000059604645D + var16 / 80.0D - 1.0D;
-               if(var18 > 10.0D) {
-                  var18 = 10.0D;
+               var13 = this.targetX - this.posX;
+               var15 = this.targetZ - this.posZ;
+               double var17 = Math.sqrt(var13 * var13 + var15 * var15);
+               double var19 = 0.4000000059604645D + var17 / 80.0D - 1.0D;
+               if(var19 > 10.0D) {
+                  var19 = 10.0D;
                }
 
-               this.targetY = this.target.boundingBox.minY + var18;
+               this.targetY = this.target.boundingBox.minY + var19;
             } else {
                this.targetX += this.rand.nextGaussian() * 2.0D;
                this.targetZ += this.rand.nextGaussian() * 2.0D;
             }
 
-            if(this.forceNewTarget || var10 < 100.0D || var10 > 22500.0D || this.isCollidedHorizontally || this.isCollidedVertically) {
+            if(this.forceNewTarget || var11 < 100.0D || var11 > 22500.0D || this.isCollidedHorizontally || this.isCollidedVertically) {
                this.setNewTarget();
             }
 
-            var6 /= (double)MathHelper.sqrt_double(var4 * var4 + var8 * var8);
-            var20 = 0.6F;
-            if(var6 < (double)(-var20)) {
-               var6 = (double)(-var20);
+            var7 /= (double)MathHelper.sqrt_double(var5 * var5 + var9 * var9);
+            var21 = 0.6F;
+            if(var7 < (double)(-var21)) {
+               var7 = (double)(-var21);
             }
 
-            if(var6 > (double)var20) {
-               var6 = (double)var20;
+            if(var7 > (double)var21) {
+               var7 = (double)var21;
             }
 
-            this.motionY += var6 * 0.10000000149011612D;
+            this.motionY += var7 * 0.10000000149011612D;
             this.rotationYaw = MathHelper.wrapAngleTo180_float(this.rotationYaw);
-            double var21 = 180.0D - Math.atan2(var4, var8) * 180.0D / 3.1415927410125732D;
-            double var23 = MathHelper.wrapAngleTo180_double(var21 - (double)this.rotationYaw);
-            if(var23 > 50.0D) {
-               var23 = 50.0D;
+            var13 = 180.0D - Math.atan2(var5, var9) * 180.0D / 3.1415927410125732D;
+            var15 = MathHelper.wrapAngleTo180_double(var13 - (double)this.rotationYaw);
+            if(var15 > 50.0D) {
+               var15 = 50.0D;
             }
 
-            if(var23 < -50.0D) {
-               var23 = -50.0D;
+            if(var15 < -50.0D) {
+               var15 = -50.0D;
             }
 
-            Vec3 var25 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.targetX - this.posX, this.targetY - this.posY, this.targetZ - this.posZ).normalize();
-            Vec3 var26 = this.worldObj.getWorldVec3Pool().getVecFromPool((double)MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F), this.motionY, (double)(-MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F))).normalize();
-            float var27 = (float)(var26.dotProduct(var25) + 0.5D) / 1.5F;
-            if(var27 < 0.0F) {
-               var27 = 0.0F;
+            Vec3 var22 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.targetX - this.posX, this.targetY - this.posY, this.targetZ - this.posZ).normalize();
+            Vec3 var23 = this.worldObj.getWorldVec3Pool().getVecFromPool((double)MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F), this.motionY, (double)(-MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F))).normalize();
+            var24 = (float)(var23.dotProduct(var22) + 0.5D) / 1.5F;
+            if(var24 < 0.0F) {
+               var24 = 0.0F;
             }
 
             this.randomYawVelocity *= 0.8F;
-            float var28 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ) * 1.0F + 1.0F;
-            double var29 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ) * 1.0D + 1.0D;
-            if(var29 > 40.0D) {
-               var29 = 40.0D;
+            float var25 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ) * 1.0F + 1.0F;
+            double var26 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ) * 1.0D + 1.0D;
+            if(var26 > 40.0D) {
+               var26 = 40.0D;
             }
 
-            this.randomYawVelocity = (float)((double)this.randomYawVelocity + var23 * (0.699999988079071D / var29 / (double)var28));
+            this.randomYawVelocity = (float)((double)this.randomYawVelocity + var15 * (0.699999988079071D / var26 / (double)var25));
             this.rotationYaw += this.randomYawVelocity * 0.1F;
-            float var31 = (float)(2.0D / (var29 + 1.0D));
-            float var32 = 0.06F;
-            this.moveFlying(0.0F, -1.0F, var32 * (var27 * var31 + (1.0F - var31)));
+            var28 = (float)(2.0D / (var26 + 1.0D));
+            var29 = 0.06F;
+            this.moveFlying(0.0F, -1.0F, var29 * (var24 * var28 + (1.0F - var28)));
             if(this.slowed) {
                this.moveEntity(this.motionX * 0.800000011920929D, this.motionY * 0.800000011920929D, this.motionZ * 0.800000011920929D);
             } else {
                this.moveEntity(this.motionX, this.motionY, this.motionZ);
             }
 
-            Vec3 var33 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.motionX, this.motionY, this.motionZ).normalize();
-            float var34 = (float)(var33.dotProduct(var26) + 1.0D) / 2.0F;
-            var34 = 0.8F + 0.15F * var34;
-            this.motionX *= (double)var34;
-            this.motionZ *= (double)var34;
+            Vec3 var30 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.motionX, this.motionY, this.motionZ).normalize();
+            var31 = (float)(var30.dotProduct(var23) + 1.0D) / 2.0F;
+            var31 = 0.8F + 0.15F * var31;
+            this.motionX *= (double)var31;
+            this.motionZ *= (double)var31;
             this.motionY *= 0.9100000262260437D;
          }
 
@@ -236,16 +258,16 @@
          this.dragonPartWing2.width = 4.0F;
          var2 = (float)(this.getMovementOffsets(5, 1.0F)[1] - this.getMovementOffsets(10, 1.0F)[1]) * 10.0F / 180.0F * 3.1415927F;
          var3 = MathHelper.cos(var2);
-         float var35 = -MathHelper.sin(var2);
-         float var36 = this.rotationYaw * 3.1415927F / 180.0F;
-         float var37 = MathHelper.sin(var36);
-         float var38 = MathHelper.cos(var36);
+         float var32 = -MathHelper.sin(var2);
+         float var33 = this.rotationYaw * 3.1415927F / 180.0F;
+         float var34 = MathHelper.sin(var33);
+         float var35 = MathHelper.cos(var33);
          this.dragonPartBody.onUpdate();
-         this.dragonPartBody.setLocationAndAngles(this.posX + (double)(var37 * 0.5F), this.posY, this.posZ - (double)(var38 * 0.5F), 0.0F, 0.0F);
+         this.dragonPartBody.setLocationAndAngles(this.posX + (double)(var34 * 0.5F), this.posY, this.posZ - (double)(var35 * 0.5F), 0.0F, 0.0F);
          this.dragonPartWing1.onUpdate();
-         this.dragonPartWing1.setLocationAndAngles(this.posX + (double)(var38 * 4.5F), this.posY + 2.0D, this.posZ + (double)(var37 * 4.5F), 0.0F, 0.0F);
+         this.dragonPartWing1.setLocationAndAngles(this.posX + (double)(var35 * 4.5F), this.posY + 2.0D, this.posZ + (double)(var34 * 4.5F), 0.0F, 0.0F);
          this.dragonPartWing2.onUpdate();
-         this.dragonPartWing2.setLocationAndAngles(this.posX - (double)(var38 * 4.5F), this.posY + 2.0D, this.posZ - (double)(var37 * 4.5F), 0.0F, 0.0F);
+         this.dragonPartWing2.setLocationAndAngles(this.posX - (double)(var35 * 4.5F), this.posY + 2.0D, this.posZ - (double)(var34 * 4.5F), 0.0F, 0.0F);
          if(!this.worldObj.isRemote && this.hurtTime == 0) {
             this.collideWithEntities(this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.dragonPartWing1.boundingBox.expand(4.0D, 2.0D, 4.0D).offset(0.0D, -2.0D, 0.0D)));
             this.collideWithEntities(this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.dragonPartWing2.boundingBox.expand(4.0D, 2.0D, 4.0D).offset(0.0D, -2.0D, 0.0D)));
@@ -254,40 +276,40 @@
 
          double[] var39 = this.getMovementOffsets(5, 1.0F);
          double[] var40 = this.getMovementOffsets(0, 1.0F);
-         var20 = MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F - this.randomYawVelocity * 0.01F);
-         float var41 = MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F - this.randomYawVelocity * 0.01F);
+         var21 = MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F - this.randomYawVelocity * 0.01F);
+         var24 = MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F - this.randomYawVelocity * 0.01F);
          this.dragonPartHead.onUpdate();
-         this.dragonPartHead.setLocationAndAngles(this.posX + (double)(var20 * 5.5F * var3), this.posY + (var40[1] - var39[1]) * 1.0D + (double)(var35 * 5.5F), this.posZ - (double)(var41 * 5.5F * var3), 0.0F, 0.0F);
+         this.dragonPartHead.setLocationAndAngles(this.posX + (double)(var21 * 5.5F * var3), this.posY + (var40[1] - var39[1]) * 1.0D + (double)(var32 * 5.5F), this.posZ - (double)(var24 * 5.5F * var3), 0.0F, 0.0F);
 
-         for(int var50 = 0; var50 < 3; ++var50) {
-            EntityDragonPart var46 = null;
-            if(var50 == 0) {
-               var46 = this.dragonPartTail1;
+         for(int var41 = 0; var41 < 3; ++var41) {
+            EntityDragonPart var36 = null;
+            if(var41 == 0) {
+               var36 = this.dragonPartTail1;
             }
 
-            if(var50 == 1) {
-               var46 = this.dragonPartTail2;
+            if(var41 == 1) {
+               var36 = this.dragonPartTail2;
             }
 
-            if(var50 == 2) {
-               var46 = this.dragonPartTail3;
+            if(var41 == 2) {
+               var36 = this.dragonPartTail3;
             }
 
-            double[] var49 = this.getMovementOffsets(12 + var50 * 2, 1.0F);
-            float var42 = this.rotationYaw * 3.1415927F / 180.0F + this.simplifyAngle(var49[0] - var39[0]) * 3.1415927F / 180.0F * 1.0F;
-            float var43 = MathHelper.sin(var42);
-            float var44 = MathHelper.cos(var42);
-            float var47 = 1.5F;
-            float var48 = (float)(var50 + 1) * 2.0F;
-            var46.onUpdate();
-            var46.setLocationAndAngles(this.posX - (double)((var37 * var47 + var43 * var48) * var3), this.posY + (var49[1] - var39[1]) * 1.0D - (double)((var48 + var47) * var35) + 1.5D, this.posZ + (double)((var38 * var47 + var44 * var48) * var3), 0.0F, 0.0F);
+            double[] var37 = this.getMovementOffsets(12 + var41 * 2, 1.0F);
+            var28 = this.rotationYaw * 3.1415927F / 180.0F + this.simplifyAngle(var37[0] - var39[0]) * 3.1415927F / 180.0F * 1.0F;
+            var29 = MathHelper.sin(var28);
+            float var42 = MathHelper.cos(var28);
+            var31 = 1.5F;
+            float var38 = (float)(var41 + 1) * 2.0F;
+            var36.onUpdate();
+            var36.setLocationAndAngles(this.posX - (double)((var34 * var31 + var29 * var38) * var3), this.posY + (var37[1] - var39[1]) * 1.0D - (double)((var38 + var31) * var32) + 1.5D, this.posZ + (double)((var35 * var31 + var42 * var38) * var3), 0.0F, 0.0F);
          }
 
          if(!this.worldObj.isRemote) {
             this.slowed = this.destroyBlocksInAABB(this.dragonPartHead.boundingBox) | this.destroyBlocksInAABB(this.dragonPartBody.boundingBox);
          }
-
       }
+
    }
 
    private void updateDragonEnderCrystal() {
@@ -299,13 +321,17 @@
 
             this.healingEnderCrystal = null;
          } else if(this.ticksExisted % 10 == 0 && this.health < this.getMaxHealth()) {
-            ++this.health;
+            EntityRegainHealthEvent var1 = new EntityRegainHealthEvent(this.getBukkitEntity(), 1, RegainReason.ENDER_CRYSTAL);
+            this.worldObj.getServer().getPluginManager().callEvent(var1);
+            if(!var1.isCancelled()) {
+               this.health += var1.getAmount();
+            }
          }
       }
 
       if(this.rand.nextInt(10) == 0) {
-         float var1 = 32.0F;
-         List var2 = this.worldObj.getEntitiesWithinAABB(EntityEnderCrystal.class, this.boundingBox.expand((double)var1, (double)var1, (double)var1));
+         float var10 = 32.0F;
+         List var2 = this.worldObj.getEntitiesWithinAABB(EntityEnderCrystal.class, this.boundingBox.expand((double)var10, (double)var10, (double)var10));
          EntityEnderCrystal var3 = null;
          double var4 = Double.MAX_VALUE;
          Iterator var6 = var2.iterator();
@@ -345,7 +371,16 @@
       for(int var2 = 0; var2 < var1.size(); ++var2) {
          Entity var3 = (Entity)var1.get(var2);
          if(var3 instanceof EntityLiving) {
-            var3.attackEntityFrom(DamageSource.causeMobDamage(this), 10);
+            if(!(var3 instanceof EntityPlayer)) {
+               EntityDamageByEntityEvent var4 = new EntityDamageByEntityEvent(this.getBukkitEntity(), var3.getBukkitEntity(), DamageCause.ENTITY_ATTACK, 10);
+               Bukkit.getPluginManager().callEvent(var4);
+               if(!var4.isCancelled()) {
+                  var3.getBukkitEntity().setLastDamageCause(var4);
+                  var3.attackEntityFrom(DamageSource.causeMobDamage(this), var4.getDamage());
+               }
+            } else {
+               var3.attackEntityFrom(DamageSource.causeMobDamage(this), 10);
+            }
          }
       }
 
@@ -388,15 +423,17 @@
       int var7 = MathHelper.floor_double(var1.maxZ);
       boolean var8 = false;
       boolean var9 = false;
+      ArrayList var10 = new ArrayList();
+      CraftWorld var11 = this.worldObj.getWorld();
 
-      for(int var10 = var2; var10 <= var5; ++var10) {
-         for(int var11 = var3; var11 <= var6; ++var11) {
-            for(int var12 = var4; var12 <= var7; ++var12) {
-               int var13 = this.worldObj.getBlockId(var10, var11, var12);
-               if(var13 != 0) {
-                  if(var13 != Block.obsidian.blockID && var13 != Block.whiteStone.blockID && var13 != Block.bedrock.blockID) {
+      for(int var12 = var2; var12 <= var5; ++var12) {
+         for(int var13 = var3; var13 <= var6; ++var13) {
+            for(int var14 = var4; var14 <= var7; ++var14) {
+               int var15 = this.worldObj.getBlockId(var12, var13, var14);
+               if(var15 != 0) {
+                  if(var15 != Block.obsidian.blockID && var15 != Block.whiteStone.blockID && var15 != Block.bedrock.blockID) {
                      var9 = true;
-                     this.worldObj.setBlockWithNotify(var10, var11, var12, 0);
+                     var10.add(var11.getBlockAt(var12, var13, var14));
                   } else {
                      var8 = true;
                   }
@@ -406,10 +443,24 @@
       }
 
       if(var9) {
-         double var14 = var1.minX + (var1.maxX - var1.minX) * (double)this.rand.nextFloat();
-         double var16 = var1.minY + (var1.maxY - var1.minY) * (double)this.rand.nextFloat();
-         double var18 = var1.minZ + (var1.maxZ - var1.minZ) * (double)this.rand.nextFloat();
-         this.worldObj.spawnParticle("largeexplode", var14, var16, var18, 0.0D, 0.0D, 0.0D);
+         org.bukkit.entity.Entity var22 = this.getBukkitEntity();
+         EntityExplodeEvent var23 = new EntityExplodeEvent(var22, var22.getLocation(), var10, 0.0F);
+         Bukkit.getPluginManager().callEvent(var23);
+         if(var23.isCancelled()) {
+            return var8;
+         }
+
+         Iterator var25 = var23.blockList().iterator();
+
+         while(var25.hasNext()) {
+            org.bukkit.block.Block var24 = (org.bukkit.block.Block)var25.next();
+            var11.explodeBlock(var24, var23.getYield());
+         }
+
+         double var16 = var1.minX + (var1.maxX - var1.minX) * (double)this.rand.nextFloat();
+         double var18 = var1.minY + (var1.maxY - var1.minY) * (double)this.rand.nextFloat();
+         double var20 = var1.minZ + (var1.maxZ - var1.minZ) * (double)this.rand.nextFloat();
+         this.worldObj.spawnParticle("largeexplode", var16, var18, var20, 0.0D, 0.0D, 0.0D);
       }
 
       return var8;
@@ -438,7 +489,7 @@
       return false;
    }
 
-   protected boolean func_82195_e(DamageSource var1, int var2) {
+   public boolean func_82195_e(DamageSource var1, int var2) {
       return super.attackEntityFrom(var1, var2);
    }
 
@@ -455,7 +506,7 @@
       int var5;
       if(!this.worldObj.isRemote) {
          if(this.deathTicks > 150 && this.deathTicks % 5 == 0) {
-            var4 = 1000;
+            var4 = this.expToDrop / 12;
 
             while(var4 > 0) {
                var5 = EntityXPOrb.getXPSplit(var4);
@@ -472,7 +523,7 @@
       this.moveEntity(0.0D, 0.10000000149011612D, 0.0D);
       this.renderYawOffset = this.rotationYaw += 20.0F;
       if(this.deathTicks == 200 && !this.worldObj.isRemote) {
-         var4 = 2000;
+         var4 = this.expToDrop - 10 * (this.expToDrop / 12);
 
          while(var4 > 0) {
             var5 = EntityXPOrb.getXPSplit(var4);
@@ -490,39 +541,68 @@
       byte var3 = 64;
       BlockEndPortal.bossDefeated = true;
       byte var4 = 4;
+      BlockStateListPopulator var5 = new BlockStateListPopulator(this.worldObj.getWorld());
 
-      for(int var5 = var3 - 1; var5 <= var3 + 32; ++var5) {
-         for(int var6 = var1 - var4; var6 <= var1 + var4; ++var6) {
-            for(int var7 = var2 - var4; var7 <= var2 + var4; ++var7) {
-               double var8 = (double)(var6 - var1);
-               double var10 = (double)(var7 - var2);
-               double var12 = var8 * var8 + var10 * var10;
-               if(var12 <= ((double)var4 - 0.5D) * ((double)var4 - 0.5D)) {
-                  if(var5 < var3) {
-                     if(var12 <= ((double)(var4 - 1) - 0.5D) * ((double)(var4 - 1) - 0.5D)) {
-                        this.worldObj.setBlockWithNotify(var6, var5, var7, Block.bedrock.blockID);
+      for(int var6 = var3 - 1; var6 <= var3 + 32; ++var6) {
+         for(int var7 = var1 - var4; var7 <= var1 + var4; ++var7) {
+            for(int var8 = var2 - var4; var8 <= var2 + var4; ++var8) {
+               double var9 = (double)(var7 - var1);
+               double var11 = (double)(var8 - var2);
+               double var13 = var9 * var9 + var11 * var11;
+               if(var13 <= ((double)var4 - 0.5D) * ((double)var4 - 0.5D)) {
+                  if(var6 < var3) {
+                     if(var13 <= ((double)(var4 - 1) - 0.5D) * ((double)(var4 - 1) - 0.5D)) {
+                        var5.setTypeId(var7, var6, var8, Block.bedrock.blockID);
                      }
-                  } else if(var5 > var3) {
-                     this.worldObj.setBlockWithNotify(var6, var5, var7, 0);
-                  } else if(var12 > ((double)(var4 - 1) - 0.5D) * ((double)(var4 - 1) - 0.5D)) {
-                     this.worldObj.setBlockWithNotify(var6, var5, var7, Block.bedrock.blockID);
+                  } else if(var6 > var3) {
+                     var5.setTypeId(var7, var6, var8, 0);
+                  } else if(var13 > ((double)(var4 - 1) - 0.5D) * ((double)(var4 - 1) - 0.5D)) {
+                     var5.setTypeId(var7, var6, var8, Block.bedrock.blockID);
                   } else {
-                     this.worldObj.setBlockWithNotify(var6, var5, var7, Block.endPortal.blockID);
+                     var5.setTypeId(var7, var6, var8, Block.endPortal.blockID);
                   }
                }
             }
          }
       }
 
-      this.worldObj.setBlockWithNotify(var1, var3 + 0, var2, Block.bedrock.blockID);
-      this.worldObj.setBlockWithNotify(var1, var3 + 1, var2, Block.bedrock.blockID);
-      this.worldObj.setBlockWithNotify(var1, var3 + 2, var2, Block.bedrock.blockID);
-      this.worldObj.setBlockWithNotify(var1 - 1, var3 + 2, var2, Block.torchWood.blockID);
-      this.worldObj.setBlockWithNotify(var1 + 1, var3 + 2, var2, Block.torchWood.blockID);
-      this.worldObj.setBlockWithNotify(var1, var3 + 2, var2 - 1, Block.torchWood.blockID);
-      this.worldObj.setBlockWithNotify(var1, var3 + 2, var2 + 1, Block.torchWood.blockID);
-      this.worldObj.setBlockWithNotify(var1, var3 + 3, var2, Block.bedrock.blockID);
-      this.worldObj.setBlockWithNotify(var1, var3 + 4, var2, Block.dragonEgg.blockID);
+      var5.setTypeId(var1, var3 + 0, var2, Block.bedrock.blockID);
+      var5.setTypeId(var1, var3 + 1, var2, Block.bedrock.blockID);
+      var5.setTypeId(var1, var3 + 2, var2, Block.bedrock.blockID);
+      var5.setTypeId(var1 - 1, var3 + 2, var2, Block.torchWood.blockID);
+      var5.setTypeId(var1 + 1, var3 + 2, var2, Block.torchWood.blockID);
+      var5.setTypeId(var1, var3 + 2, var2 - 1, Block.torchWood.blockID);
+      var5.setTypeId(var1, var3 + 2, var2 + 1, Block.torchWood.blockID);
+      var5.setTypeId(var1, var3 + 3, var2, Block.bedrock.blockID);
+      var5.setTypeId(var1, var3 + 4, var2, Block.dragonEgg.blockID);
+      EntityCreatePortalEvent var18 = new EntityCreatePortalEvent((LivingEntity)this.getBukkitEntity(), Collections.unmodifiableList(var5.getList()), PortalType.ENDER);
+      this.worldObj.getServer().getPluginManager().callEvent(var18);
+      Iterator var19;
+      BlockState var20;
+      if(!var18.isCancelled()) {
+         var19 = var18.getBlocks().iterator();
+
+         while(var19.hasNext()) {
+            var20 = (BlockState)var19.next();
+            var20.update(true);
+         }
+      } else {
+         var19 = var18.getBlocks().iterator();
+
+         while(var19.hasNext()) {
+            var20 = (BlockState)var19.next();
+            Packet53BlockChange var15 = new Packet53BlockChange(var20.getX(), var20.getY(), var20.getZ(), this.worldObj);
+            Iterator var16 = this.worldObj.playerEntities.iterator();
+
+            while(var16.hasNext()) {
+               EntityPlayer var17 = (EntityPlayer)var16.next();
+               if(var17 instanceof EntityPlayerMP) {
+                  ((EntityPlayerMP)var17).playerNetServerHandler.sendPacket(var15);
+               }
+            }
+         }
+      }
+
       BlockEndPortal.bossDefeated = false;
    }
 
@@ -551,4 +631,8 @@
    protected float getSoundVolume() {
       return 5.0F;
    }
+
+   public int getExpReward() {
+      return 12000;
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityEgg.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEgg.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityEgg.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEgg.java
--- mcp-mcdev/net/minecraft/src/EntityEgg.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEgg.java	2012-11-29 21:41:36.000000000 -0800
@@ -1,11 +1,18 @@
 package net.minecraft.src;
 
 import net.minecraft.src.DamageSource;
-import net.minecraft.src.EntityChicken;
 import net.minecraft.src.EntityLiving;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EntityThrowable;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.entity.Ageable;
+import org.bukkit.entity.Egg;
+import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Player;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+import org.bukkit.event.player.PlayerEggThrowEvent;
 
 public class EntityEgg extends EntityThrowable {
 
@@ -26,21 +33,34 @@
          var1.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, this.func_85052_h()), 0);
       }
 
-      if(!this.worldObj.isRemote && this.rand.nextInt(8) == 0) {
-         byte var2 = 1;
-         if(this.rand.nextInt(32) == 0) {
-            var2 = 4;
-         }
+      boolean var2 = !this.worldObj.isRemote && this.rand.nextInt(8) == 0;
+      int var3 = this.rand.nextInt(32) == 0?4:1;
+      if(!var2) {
+         var3 = 0;
+      }
+
+      EntityType var4 = EntityType.CHICKEN;
+      EntityLiving var5 = this.func_85052_h();
+      if(var5 instanceof EntityPlayerMP) {
+         Player var6 = var5 == null?null:(Player)var5.getBukkitEntity();
+         PlayerEggThrowEvent var7 = new PlayerEggThrowEvent(var6, (Egg)this.getBukkitEntity(), var2, (byte)var3, var4);
+         this.worldObj.getServer().getPluginManager().callEvent(var7);
+         var2 = var7.isHatching();
+         var3 = var7.getNumHatches();
+         var4 = var7.getHatchingType();
+      }
 
-         for(int var3 = 0; var3 < var2; ++var3) {
-            EntityChicken var4 = new EntityChicken(this.worldObj);
-            var4.setGrowingAge(-24000);
-            var4.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, 0.0F);
-            this.worldObj.spawnEntityInWorld(var4);
+      int var8;
+      if(var2) {
+         for(var8 = 0; var8 < var3; ++var8) {
+            org.bukkit.entity.Entity var9 = this.worldObj.getWorld().spawn(new Location(this.worldObj.getWorld(), this.posX, this.posY, this.posZ, this.rotationYaw, 0.0F), var4.getEntityClass(), SpawnReason.EGG);
+            if(var9 instanceof Ageable) {
+               ((Ageable)var9).setBaby();
+            }
          }
       }
 
-      for(int var5 = 0; var5 < 8; ++var5) {
+      for(var8 = 0; var8 < 8; ++var8) {
          this.worldObj.spawnParticle("snowballpoof", this.posX, this.posY, this.posZ, 0.0D, 0.0D, 0.0D);
       }
 
Binary files mcp-mcdev/net/minecraft/src/EntityEnderCrystal.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderCrystal.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityEnderCrystal.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderCrystal.java
--- mcp-mcdev/net/minecraft/src/EntityEnderCrystal.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderCrystal.java	2012-11-29 21:41:36.000000000 -0800
@@ -6,6 +6,7 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityEnderCrystal extends Entity {
 
@@ -58,11 +59,15 @@
          return false;
       } else {
          if(!this.isDead && !this.worldObj.isRemote) {
+            if(CraftEventFactory.handleNonLivingEntityDamageEvent(this, var1, var2)) {
+               return false;
+            }
+
             this.health = 0;
             if(this.health <= 0) {
                this.setDead();
                if(!this.worldObj.isRemote) {
-                  this.worldObj.createExplosion((Entity)null, this.posX, this.posY, this.posZ, 6.0F, true);
+                  this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, 6.0F, true);
                }
             }
          }
Binary files mcp-mcdev/net/minecraft/src/EntityEnderPearl.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderPearl.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityEnderPearl.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderPearl.java
--- mcp-mcdev/net/minecraft/src/EntityEnderPearl.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderPearl.java	2012-11-29 21:41:35.000000000 -0800
@@ -6,6 +6,13 @@
 import net.minecraft.src.EntityThrowable;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.event.entity.EntityDamageByEntityEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 
 public class EntityEnderPearl extends EntityThrowable {
 
@@ -28,11 +35,25 @@
 
       if(!this.worldObj.isRemote) {
          if(this.func_85052_h() != null && this.func_85052_h() instanceof EntityPlayerMP) {
-            EntityPlayerMP var3 = (EntityPlayerMP)this.func_85052_h();
-            if(!var3.playerNetServerHandler.connectionClosed && var3.worldObj == this.worldObj) {
-               this.func_85052_h().setPositionAndUpdate(this.posX, this.posY, this.posZ);
-               this.func_85052_h().fallDistance = 0.0F;
-               this.func_85052_h().attackEntityFrom(DamageSource.fall, 5);
+            EntityPlayerMP var7 = (EntityPlayerMP)this.func_85052_h();
+            if(!var7.playerNetServerHandler.connectionClosed && var7.worldObj == this.worldObj) {
+               CraftPlayer var3 = var7.getBukkitEntity();
+               Location var4 = this.getBukkitEntity().getLocation();
+               var4.setPitch(var3.getLocation().getPitch());
+               var4.setYaw(var3.getLocation().getYaw());
+               PlayerTeleportEvent var5 = new PlayerTeleportEvent(var3, var3.getLocation(), var4, TeleportCause.ENDER_PEARL);
+               Bukkit.getPluginManager().callEvent(var5);
+               if(!var5.isCancelled() && !var7.playerNetServerHandler.connectionClosed) {
+                  var7.playerNetServerHandler.teleport(var5.getTo());
+                  this.func_85052_h().fallDistance = 0.0F;
+                  EntityDamageByEntityEvent var6 = new EntityDamageByEntityEvent(this.getBukkitEntity(), var3, DamageCause.FALL, 5);
+                  Bukkit.getPluginManager().callEvent(var6);
+                  if(!var6.isCancelled() && !var7.playerNetServerHandler.connectionClosed) {
+                     var7.ticksOfInvuln = -1;
+                     var3.setLastDamageCause(var6);
+                     var7.attackEntityFrom(DamageSource.fall, var6.getDamage());
+                  }
+               }
             }
          }
 
Binary files mcp-mcdev/net/minecraft/src/EntityEnderman.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderman.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityEnderman.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderman.java
--- mcp-mcdev/net/minecraft/src/EntityEnderman.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityEnderman.java	2012-11-29 21:41:36.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.Block;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Entity;
@@ -12,6 +13,9 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTeleportEvent;
 
 public class EntityEnderman extends EntityMob {
 
@@ -103,7 +107,7 @@
                var2 = MathHelper.floor_double(this.posY + this.rand.nextDouble() * 3.0D);
                var3 = MathHelper.floor_double(this.posZ - 2.0D + this.rand.nextDouble() * 4.0D);
                var4 = this.worldObj.getBlockId(var1, var2, var3);
-               if(carriableBlocks[var4]) {
+               if(carriableBlocks[var4] && !CraftEventFactory.callEntityChangeBlockEvent(this, this.worldObj.getWorld().getBlockAt(var1, var2, var3), org.bukkit.Material.AIR).isCancelled()) {
                   this.setCarried(this.worldObj.getBlockId(var1, var2, var3));
                   this.setCarryingData(this.worldObj.getBlockMetadata(var1, var2, var3));
                   this.worldObj.setBlockWithNotify(var1, var2, var3, 0);
@@ -116,8 +120,11 @@
             var4 = this.worldObj.getBlockId(var1, var2, var3);
             int var5 = this.worldObj.getBlockId(var1, var2 - 1, var3);
             if(var4 == 0 && var5 > 0 && Block.blocksList[var5].renderAsNormalBlock()) {
-               this.worldObj.setBlockAndMetadataWithNotify(var1, var2, var3, this.getCarried(), this.getCarryingData());
-               this.setCarried(0);
+               org.bukkit.block.Block var6 = this.worldObj.getWorld().getBlockAt(var1, var2, var3);
+               if(!CraftEventFactory.callEntityChangeBlockEvent(this, var6, var6.getType()).isCancelled()) {
+                  this.worldObj.setBlockAndMetadataWithNotify(var1, var2, var3, this.getCarried(), this.getCarryingData());
+                  this.setCarried(0);
+               }
             }
          }
       }
@@ -127,8 +134,8 @@
       }
 
       if(this.worldObj.isDaytime() && !this.worldObj.isRemote) {
-         float var6 = this.getBrightness(1.0F);
-         if(var6 > 0.5F && this.worldObj.canBlockSeeTheSky(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) && this.rand.nextFloat() * 30.0F < (var6 - 0.4F) * 2.0F) {
+         float var7 = this.getBrightness(1.0F);
+         if(var7 > 0.5F && this.worldObj.canBlockSeeTheSky(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) && this.rand.nextFloat() * 30.0F < (var7 - 0.4F) * 2.0F) {
             this.entityToAttack = null;
             this.func_70819_e(false);
             this.teleportRandomly();
@@ -211,7 +218,14 @@
          }
 
          if(var17) {
-            this.setPosition(this.posX, this.posY, this.posZ);
+            EntityTeleportEvent var19 = new EntityTeleportEvent(this.getBukkitEntity(), new Location(this.worldObj.getWorld(), var7, var9, var11), new Location(this.worldObj.getWorld(), this.posX, this.posY, this.posZ));
+            this.worldObj.getServer().getPluginManager().callEvent(var19);
+            if(var19.isCancelled()) {
+               return false;
+            }
+
+            Location var20 = var19.getTo();
+            this.setPosition(var20.getX(), var20.getY(), var20.getZ());
             if(this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox).isEmpty() && !this.worldObj.isAnyLiquid(this.boundingBox)) {
                var13 = true;
             }
@@ -222,17 +236,17 @@
          this.setPosition(var7, var9, var11);
          return false;
       } else {
-         short var30 = 128;
+         short var32 = 128;
 
-         for(var18 = 0; var18 < var30; ++var18) {
-            double var19 = (double)var18 / ((double)var30 - 1.0D);
-            float var21 = (this.rand.nextFloat() - 0.5F) * 0.2F;
-            float var22 = (this.rand.nextFloat() - 0.5F) * 0.2F;
+         for(var18 = 0; var18 < var32; ++var18) {
+            double var21 = (double)var18 / ((double)var32 - 1.0D);
             float var23 = (this.rand.nextFloat() - 0.5F) * 0.2F;
-            double var24 = var7 + (this.posX - var7) * var19 + (this.rand.nextDouble() - 0.5D) * (double)this.width * 2.0D;
-            double var26 = var9 + (this.posY - var9) * var19 + this.rand.nextDouble() * (double)this.height;
-            double var28 = var11 + (this.posZ - var11) * var19 + (this.rand.nextDouble() - 0.5D) * (double)this.width * 2.0D;
-            this.worldObj.spawnParticle("portal", var24, var26, var28, (double)var21, (double)var22, (double)var23);
+            float var24 = (this.rand.nextFloat() - 0.5F) * 0.2F;
+            float var25 = (this.rand.nextFloat() - 0.5F) * 0.2F;
+            double var26 = var7 + (this.posX - var7) * var21 + (this.rand.nextDouble() - 0.5D) * (double)this.width * 2.0D;
+            double var28 = var9 + (this.posY - var9) * var21 + this.rand.nextDouble() * (double)this.height;
+            double var30 = var11 + (this.posZ - var11) * var21 + (this.rand.nextDouble() - 0.5D) * (double)this.width * 2.0D;
+            this.worldObj.spawnParticle("portal", var26, var28, var30, (double)var23, (double)var24, (double)var25);
          }
 
          this.worldObj.playSoundEffect(var7, var9, var11, "mob.endermen.portal", 1.0F, 1.0F);
@@ -260,11 +274,13 @@
    protected void dropFewItems(boolean var1, int var2) {
       int var3 = this.getDropItemId();
       if(var3 > 0) {
-         int var4 = this.rand.nextInt(2 + var2);
-
-         for(int var5 = 0; var5 < var4; ++var5) {
-            this.dropItem(var3, 1);
+         ArrayList var4 = new ArrayList();
+         int var5 = this.rand.nextInt(2 + var2);
+         if(var3 > 0 && var5 > 0) {
+            var4.add(new org.bukkit.inventory.ItemStack(var3, var5));
          }
+
+         CraftEventFactory.callEntityDeathEvent(this, var4);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/EntityExpBottle.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityExpBottle.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityExpBottle.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityExpBottle.java
--- mcp-mcdev/net/minecraft/src/EntityExpBottle.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityExpBottle.java	2012-11-29 21:41:35.000000000 -0800
@@ -5,6 +5,8 @@
 import net.minecraft.src.EntityXPOrb;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.ExpBottleEvent;
 
 public class EntityExpBottle extends EntityThrowable {
 
@@ -34,13 +36,17 @@
 
    protected void onImpact(MovingObjectPosition var1) {
       if(!this.worldObj.isRemote) {
-         this.worldObj.playAuxSFX(2002, (int)Math.round(this.posX), (int)Math.round(this.posY), (int)Math.round(this.posZ), 0);
          int var2 = 3 + this.worldObj.rand.nextInt(5) + this.worldObj.rand.nextInt(5);
+         ExpBottleEvent var3 = CraftEventFactory.callExpBottleEvent(this, var2);
+         var2 = var3.getExperience();
+         if(var3.getShowEffect()) {
+            this.worldObj.playAuxSFX(2002, (int)Math.round(this.posX), (int)Math.round(this.posY), (int)Math.round(this.posZ), 0);
+         }
 
          while(var2 > 0) {
-            int var3 = EntityXPOrb.getXPSplit(var2);
-            var2 -= var3;
-            this.worldObj.spawnEntityInWorld(new EntityXPOrb(this.worldObj, this.posX, this.posY, this.posZ, var3));
+            int var4 = EntityXPOrb.getXPSplit(var2);
+            var2 -= var4;
+            this.worldObj.spawnEntityInWorld(new EntityXPOrb(this.worldObj, this.posX, this.posY, this.posZ, var4));
          }
 
          this.setDead();
Binary files mcp-mcdev/net/minecraft/src/EntityFallingSand.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFallingSand.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityFallingSand.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFallingSand.java
--- mcp-mcdev/net/minecraft/src/EntityFallingSand.java	2012-11-29 21:15:03.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFallingSand.java	2012-11-29 21:41:35.000000000 -0800
@@ -10,6 +10,9 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
 
 public class EntityFallingSand extends Entity {
 
@@ -87,11 +90,12 @@
             int var2 = MathHelper.floor_double(this.posY);
             int var3 = MathHelper.floor_double(this.posZ);
             if(this.fallTime == 1) {
-               if(this.fallTime == 1 && this.worldObj.getBlockId(var1, var2, var3) == this.blockID) {
-                  this.worldObj.setBlockWithNotify(var1, var2, var3, 0);
-               } else {
+               if(this.fallTime != 1 || this.worldObj.getBlockId(var1, var2, var3) != this.blockID) {
                   this.setDead();
+                  return;
                }
+
+               this.worldObj.setBlockWithNotify(var1, var2, var3, 0);
             }
 
             if(this.onGround) {
@@ -116,8 +120,8 @@
                this.setDead();
             }
          }
-
       }
+
    }
 
    protected void fall(float var1) {
@@ -128,19 +132,24 @@
             DamageSource var4 = this.blockID == Block.anvil.blockID?DamageSource.anvil:DamageSource.fallingBlock;
             Iterator var5 = var3.iterator();
 
+            int var7;
             while(var5.hasNext()) {
                Entity var6 = (Entity)var5.next();
-               var6.attackEntityFrom(var4, Math.min(MathHelper.floor_float((float)var2 * this.field_82158_h), this.field_82156_g));
+               var7 = Math.min(MathHelper.floor_float((float)var2 * this.field_82158_h), this.field_82156_g);
+               EntityDamageEvent var8 = CraftEventFactory.callEntityDamageEvent(this, var6, DamageCause.FALLING_BLOCK, var7);
+               if(!var8.isCancelled()) {
+                  var6.attackEntityFrom(var4, var8.getDamage());
+               }
             }
 
             if(this.blockID == Block.anvil.blockID && (double)this.rand.nextFloat() < 0.05000000074505806D + (double)var2 * 0.05D) {
-               int var7 = this.metadata >> 2;
-               int var8 = this.metadata & 3;
-               ++var7;
-               if(var7 > 2) {
+               int var9 = this.metadata >> 2;
+               var7 = this.metadata & 3;
+               ++var9;
+               if(var9 > 2) {
                   this.isBreakingAnvil = true;
                } else {
-                  this.metadata = var8 | var7 << 2;
+                  this.metadata = var7 | var9 << 2;
                }
             }
          }
Binary files mcp-mcdev/net/minecraft/src/EntityFireball.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFireball.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityFireball.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFireball.java
--- mcp-mcdev/net/minecraft/src/EntityFireball.java	2012-11-29 21:15:02.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFireball.java	2012-11-29 21:41:35.000000000 -0800
@@ -12,6 +12,8 @@
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.entity.Projectile;
+import org.bukkit.event.entity.ProjectileHitEvent;
 
 public abstract class EntityFireball extends Entity {
 
@@ -26,6 +28,8 @@
    public double accelerationX;
    public double accelerationY;
    public double accelerationZ;
+   public float yield = 1.0F;
+   public boolean isIncendiary = true;
 
 
    public EntityFireball(World var1) {
@@ -54,13 +58,17 @@
       this.setPosition(this.posX, this.posY, this.posZ);
       this.yOffset = 0.0F;
       this.motionX = this.motionY = this.motionZ = 0.0D;
+      this.setDirection(var3, var5, var7);
+   }
+
+   public void setDirection(double var1, double var3, double var5) {
+      var1 += this.rand.nextGaussian() * 0.4D;
       var3 += this.rand.nextGaussian() * 0.4D;
       var5 += this.rand.nextGaussian() * 0.4D;
-      var7 += this.rand.nextGaussian() * 0.4D;
-      double var9 = (double)MathHelper.sqrt_double(var3 * var3 + var5 * var5 + var7 * var7);
-      this.accelerationX = var3 / var9 * 0.1D;
-      this.accelerationY = var5 / var9 * 0.1D;
-      this.accelerationZ = var7 / var9 * 0.1D;
+      double var7 = (double)MathHelper.sqrt_double(var1 * var1 + var3 * var3 + var5 * var5);
+      this.accelerationX = var1 / var7 * 0.1D;
+      this.accelerationY = var3 / var7 * 0.1D;
+      this.accelerationZ = var5 / var7 * 0.1D;
    }
 
    public void onUpdate() {
@@ -110,7 +118,7 @@
                AxisAlignedBB var11 = var9.boundingBox.expand((double)var10, (double)var10, (double)var10);
                MovingObjectPosition var12 = var11.calculateIntercept(var15, var2);
                if(var12 != null) {
-                  double var13 = var15.distanceTo(var12.hitVec);
+                  double var13 = var15.squareDistanceTo(var12.hitVec);
                   if(var13 < var6 || var6 == 0.0D) {
                      var4 = var9;
                      var6 = var13;
@@ -125,15 +133,19 @@
 
          if(var3 != null) {
             this.onImpact(var3);
+            if(this.isDead) {
+               ProjectileHitEvent var16 = new ProjectileHitEvent((Projectile)this.getBukkitEntity());
+               this.worldObj.getServer().getPluginManager().callEvent(var16);
+            }
          }
 
          this.posX += this.motionX;
          this.posY += this.motionY;
          this.posZ += this.motionZ;
-         float var16 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+         float var18 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
          this.rotationYaw = (float)(Math.atan2(this.motionZ, this.motionX) * 180.0D / 3.1415927410125732D) + 90.0F;
 
-         for(this.rotationPitch = (float)(Math.atan2((double)var16, this.motionY) * 180.0D / 3.1415927410125732D) - 90.0F; this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+         for(this.rotationPitch = (float)(Math.atan2((double)var18, this.motionY) * 180.0D / 3.1415927410125732D) - 90.0F; this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
             ;
          }
 
@@ -153,9 +165,9 @@
          this.rotationYaw = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * 0.2F;
          float var17 = this.getMotionFactor();
          if(this.isInWater()) {
-            for(int var19 = 0; var19 < 4; ++var19) {
-               float var18 = 0.25F;
-               this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var18, this.posY - this.motionY * (double)var18, this.posZ - this.motionZ * (double)var18, this.motionX, this.motionY, this.motionZ);
+            for(int var20 = 0; var20 < 4; ++var20) {
+               float var19 = 0.25F;
+               this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var19, this.posY - this.motionY * (double)var19, this.posZ - this.motionZ * (double)var19, this.motionX, this.motionY, this.motionZ);
             }
 
             var17 = 0.8F;
@@ -170,6 +182,7 @@
          this.worldObj.spawnParticle("smoke", this.posX, this.posY + 0.5D, this.posZ, 0.0D, 0.0D, 0.0D);
          this.setPosition(this.posX, this.posY, this.posZ);
       }
+
    }
 
    protected float getMotionFactor() {
Binary files mcp-mcdev/net/minecraft/src/EntityFishHook.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFishHook.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityFishHook.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFishHook.java
--- mcp-mcdev/net/minecraft/src/EntityFishHook.java	2012-11-29 21:15:02.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityFishHook.java	2012-11-29 21:41:35.000000000 -0800
@@ -16,6 +16,9 @@
 import net.minecraft.src.StatList;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerFishEvent;
+import org.bukkit.event.player.PlayerFishEvent.State;
 
 public class EntityFishHook extends Entity {
 
@@ -164,7 +167,7 @@
                AxisAlignedBB var19 = var17.boundingBox.expand((double)var18, (double)var18, (double)var18);
                MovingObjectPosition var20 = var19.calculateIntercept(var36, var10);
                if(var20 != null) {
-                  var21 = var36.distanceTo(var20.hitVec);
+                  var21 = var36.squareDistanceTo(var20.hitVec);
                   if(var21 < var14 || var14 == 0.0D) {
                      var12 = var17;
                      var14 = var21;
@@ -277,6 +280,7 @@
             this.setPosition(this.posX, this.posY, this.posZ);
          }
       }
+
    }
 
    public void writeEntityToNBT(NBTTagCompound var1) {
@@ -302,36 +306,66 @@
          return 0;
       } else {
          byte var1 = 0;
+         PlayerFishEvent var2;
          if(this.bobber != null) {
-            double var2 = this.angler.posX - this.posX;
-            double var4 = this.angler.posY - this.posY;
-            double var6 = this.angler.posZ - this.posZ;
-            double var8 = (double)MathHelper.sqrt_double(var2 * var2 + var4 * var4 + var6 * var6);
-            double var10 = 0.1D;
-            this.bobber.motionX += var2 * var10;
-            this.bobber.motionY += var4 * var10 + (double)MathHelper.sqrt_double(var8) * 0.08D;
-            this.bobber.motionZ += var6 * var10;
+            var2 = new PlayerFishEvent((Player)this.angler.getBukkitEntity(), this.bobber.getBukkitEntity(), State.CAUGHT_ENTITY);
+            this.worldObj.getServer().getPluginManager().callEvent(var2);
+            if(var2.isCancelled()) {
+               this.setDead();
+               this.angler.fishEntity = null;
+               return 0;
+            }
+
+            double var3 = this.angler.posX - this.posX;
+            double var5 = this.angler.posY - this.posY;
+            double var7 = this.angler.posZ - this.posZ;
+            double var9 = (double)MathHelper.sqrt_double(var3 * var3 + var5 * var5 + var7 * var7);
+            double var11 = 0.1D;
+            this.bobber.motionX += var3 * var11;
+            this.bobber.motionY += var5 * var11 + (double)MathHelper.sqrt_double(var9) * 0.08D;
+            this.bobber.motionZ += var7 * var11;
             var1 = 3;
          } else if(this.ticksCatchable > 0) {
-            EntityItem var12 = new EntityItem(this.worldObj, this.posX, this.posY, this.posZ, new ItemStack(Item.fishRaw));
-            double var13 = this.angler.posX - this.posX;
-            double var15 = this.angler.posY - this.posY;
-            double var17 = this.angler.posZ - this.posZ;
-            double var19 = (double)MathHelper.sqrt_double(var13 * var13 + var15 * var15 + var17 * var17);
-            double var21 = 0.1D;
-            var12.motionX = var13 * var21;
-            var12.motionY = var15 * var21 + (double)MathHelper.sqrt_double(var19) * 0.08D;
-            var12.motionZ = var17 * var21;
-            this.worldObj.spawnEntityInWorld(var12);
+            EntityItem var24 = new EntityItem(this.worldObj, this.posX, this.posY, this.posZ, new ItemStack(Item.fishRaw));
+            PlayerFishEvent var13 = new PlayerFishEvent((Player)this.angler.getBukkitEntity(), var24.getBukkitEntity(), State.CAUGHT_FISH);
+            this.worldObj.getServer().getPluginManager().callEvent(var13);
+            if(var13.isCancelled()) {
+               this.setDead();
+               this.angler.fishEntity = null;
+               return 0;
+            }
+
+            double var14 = this.angler.posX - this.posX;
+            double var16 = this.angler.posY - this.posY;
+            double var18 = this.angler.posZ - this.posZ;
+            double var20 = (double)MathHelper.sqrt_double(var14 * var14 + var16 * var16 + var18 * var18);
+            double var22 = 0.1D;
+            var24.motionX = var14 * var22;
+            var24.motionY = var16 * var22 + (double)MathHelper.sqrt_double(var20) * 0.08D;
+            var24.motionZ = var18 * var22;
+            this.worldObj.spawnEntityInWorld(var24);
             this.angler.addStat(StatList.fishCaughtStat, 1);
             this.angler.worldObj.spawnEntityInWorld(new EntityXPOrb(this.angler.worldObj, this.angler.posX, this.angler.posY + 0.5D, this.angler.posZ + 0.5D, this.rand.nextInt(3) + 1));
             var1 = 1;
          }
 
          if(this.inGround) {
+            var2 = new PlayerFishEvent((Player)this.angler.getBukkitEntity(), (org.bukkit.entity.Entity)null, State.IN_GROUND);
+            this.worldObj.getServer().getPluginManager().callEvent(var2);
+            if(var2.isCancelled()) {
+               this.setDead();
+               this.angler.fishEntity = null;
+               return 0;
+            }
+
             var1 = 2;
          }
 
+         if(var1 == 0) {
+            var2 = new PlayerFishEvent((Player)this.angler.getBukkitEntity(), (org.bukkit.entity.Entity)null, State.FAILED_ATTEMPT);
+            this.worldObj.getServer().getPluginManager().callEvent(var2);
+         }
+
          this.setDead();
          this.angler.fishEntity = null;
          return var1;
Binary files mcp-mcdev/net/minecraft/src/EntityGhast.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityGhast.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityGhast.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityGhast.java
--- mcp-mcdev/net/minecraft/src/EntityGhast.java	2012-11-29 21:15:02.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityGhast.java	2012-11-29 21:41:34.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.AchievementList;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.DamageSource;
@@ -12,6 +13,11 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EntityGhast extends EntityFlying implements IMob {
 
@@ -92,22 +98,42 @@
       }
 
       if(this.targetedEntity != null && this.targetedEntity.isDead) {
-         this.targetedEntity = null;
+         EntityTargetEvent var9 = new EntityTargetEvent(this.getBukkitEntity(), (org.bukkit.entity.Entity)null, TargetReason.TARGET_DIED);
+         this.worldObj.getServer().getPluginManager().callEvent(var9);
+         if(!var9.isCancelled()) {
+            if(var9.getTarget() == null) {
+               this.targetedEntity = null;
+            } else {
+               this.targetedEntity = ((CraftEntity)var9.getTarget()).getHandle();
+            }
+         }
       }
 
       if(this.targetedEntity == null || this.aggroCooldown-- <= 0) {
-         this.targetedEntity = this.worldObj.getClosestVulnerablePlayerToEntity(this, 100.0D);
+         EntityPlayer var25 = this.worldObj.getClosestVulnerablePlayerToEntity(this, 100.0D);
+         if(var25 != null) {
+            EntityTargetEvent var10 = new EntityTargetEvent(this.getBukkitEntity(), var25.getBukkitEntity(), TargetReason.CLOSEST_PLAYER);
+            this.worldObj.getServer().getPluginManager().callEvent(var10);
+            if(!var10.isCancelled()) {
+               if(var10.getTarget() == null) {
+                  this.targetedEntity = null;
+               } else {
+                  this.targetedEntity = ((CraftEntity)var10.getTarget()).getHandle();
+               }
+            }
+         }
+
          if(this.targetedEntity != null) {
             this.aggroCooldown = 20;
          }
       }
 
-      double var9 = 64.0D;
-      if(this.targetedEntity != null && this.targetedEntity.getDistanceSqToEntity(this) < var9 * var9) {
-         double var11 = this.targetedEntity.posX - this.posX;
-         double var13 = this.targetedEntity.boundingBox.minY + (double)(this.targetedEntity.height / 2.0F) - (this.posY + (double)(this.height / 2.0F));
-         double var15 = this.targetedEntity.posZ - this.posZ;
-         this.renderYawOffset = this.rotationYaw = -((float)Math.atan2(var11, var15)) * 180.0F / 3.1415927F;
+      double var11 = 64.0D;
+      if(this.targetedEntity != null && this.targetedEntity.getDistanceSqToEntity(this) < var11 * var11) {
+         double var13 = this.targetedEntity.posX - this.posX;
+         double var15 = this.targetedEntity.boundingBox.minY + (double)(this.targetedEntity.height / 2.0F) - (this.posY + (double)(this.height / 2.0F));
+         double var17 = this.targetedEntity.posZ - this.posZ;
+         this.renderYawOffset = this.rotationYaw = -((float)Math.atan2(var13, var17)) * 180.0F / 3.1415927F;
          if(this.canEntityBeSeen(this.targetedEntity)) {
             if(this.attackCounter == 10) {
                this.worldObj.playAuxSFXAtEntity((EntityPlayer)null, 1007, (int)this.posX, (int)this.posY, (int)this.posZ, 0);
@@ -116,13 +142,13 @@
             ++this.attackCounter;
             if(this.attackCounter == 20) {
                this.worldObj.playAuxSFXAtEntity((EntityPlayer)null, 1008, (int)this.posX, (int)this.posY, (int)this.posZ, 0);
-               EntityLargeFireball var17 = new EntityLargeFireball(this.worldObj, this, var11, var13, var15);
-               double var18 = 4.0D;
-               Vec3 var20 = this.getLook(1.0F);
-               var17.posX = this.posX + var20.xCoord * var18;
-               var17.posY = this.posY + (double)(this.height / 2.0F) + 0.5D;
-               var17.posZ = this.posZ + var20.zCoord * var18;
-               this.worldObj.spawnEntityInWorld(var17);
+               EntityLargeFireball var19 = new EntityLargeFireball(this.worldObj, this, var13, var15, var17);
+               double var20 = 4.0D;
+               Vec3 var22 = this.getLook(1.0F);
+               var19.posX = this.posX + var22.xCoord * var20;
+               var19.posY = this.posY + (double)(this.height / 2.0F) + 0.5D;
+               var19.posZ = this.posZ + var22.zCoord * var20;
+               this.worldObj.spawnEntityInWorld(var19);
                this.attackCounter = -40;
             }
          } else if(this.attackCounter > 0) {
@@ -136,10 +162,10 @@
       }
 
       if(!this.worldObj.isRemote) {
-         byte var21 = this.dataWatcher.getWatchableObjectByte(16);
-         byte var22 = (byte)(this.attackCounter > 10?1:0);
-         if(var21 != var22) {
-            this.dataWatcher.updateObject(16, Byte.valueOf(var22));
+         byte var23 = this.dataWatcher.getWatchableObjectByte(16);
+         byte var24 = (byte)(this.attackCounter > 10?1:0);
+         if(var23 != var24) {
+            this.dataWatcher.updateObject(16, Byte.valueOf(var24));
          }
       }
 
@@ -178,19 +204,18 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(2) + this.rand.nextInt(1 + var2);
-
-      int var4;
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.ghastTear.shiftedIndex, 1);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(2) + this.rand.nextInt(1 + var2);
+      if(var4 > 0) {
+         var3.add(new CraftItemStack(Item.ghastTear.shiftedIndex, var4));
       }
 
-      var3 = this.rand.nextInt(3) + this.rand.nextInt(1 + var2);
-
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.gunpowder.shiftedIndex, 1);
+      var4 = this.rand.nextInt(3) + this.rand.nextInt(1 + var2);
+      if(var4 > 0) {
+         var3.add(new CraftItemStack(Item.gunpowder.shiftedIndex, var4));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    protected float getSoundVolume() {
Binary files mcp-mcdev/net/minecraft/src/EntityHanging.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityHanging.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityHanging.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityHanging.java
--- mcp-mcdev/net/minecraft/src/EntityHanging.java	2012-11-29 21:15:02.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityHanging.java	2012-11-29 21:41:34.000000000 -0800
@@ -5,11 +5,20 @@
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Direction;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityPainting;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.Material;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.entity.Hanging;
+import org.bukkit.entity.Painting;
+import org.bukkit.event.Event;
+import org.bukkit.event.hanging.HangingBreakByEntityEvent;
+import org.bukkit.event.hanging.HangingBreakEvent;
+import org.bukkit.event.hanging.HangingBreakEvent.RemoveCause;
+import org.bukkit.event.painting.PaintingBreakByEntityEvent;
+import org.bukkit.event.painting.PaintingBreakEvent;
 
 public abstract class EntityHanging extends Entity {
 
@@ -103,6 +112,27 @@
       if(this.tickCounter1++ == 100 && !this.worldObj.isRemote) {
          this.tickCounter1 = 0;
          if(!this.isDead && !this.onValidSurface()) {
+            Material var1 = this.worldObj.getBlockMaterial((int)this.posX, (int)this.posY, (int)this.posZ);
+            RemoveCause var2;
+            if(!var1.equals(Material.air)) {
+               var2 = RemoveCause.OBSTRUCTION;
+            } else {
+               var2 = RemoveCause.PHYSICS;
+            }
+
+            HangingBreakEvent var3 = new HangingBreakEvent((Hanging)this.getBukkitEntity(), var2);
+            this.worldObj.getServer().getPluginManager().callEvent(var3);
+            PaintingBreakEvent var4 = null;
+            if(this instanceof EntityPainting) {
+               var4 = new PaintingBreakEvent((Painting)this.getBukkitEntity(), org.bukkit.event.painting.PaintingBreakEvent.RemoveCause.valueOf(var2.name()));
+               var4.setCancelled(var3.isCancelled());
+               this.worldObj.getServer().getPluginManager().callEvent(var4);
+            }
+
+            if(this.isDead || var3.isCancelled() || var4 != null && var4.isCancelled()) {
+               return;
+            }
+
             this.setDead();
             this.dropItemStack();
          }
@@ -155,16 +185,14 @@
          List var9 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox);
          Iterator var10 = var9.iterator();
 
-         Entity var11;
-         do {
-            if(!var10.hasNext()) {
-               return true;
+         while(var10.hasNext()) {
+            Entity var11 = (Entity)var10.next();
+            if(var11 instanceof EntityHanging) {
+               return false;
             }
+         }
 
-            var11 = (Entity)var10.next();
-         } while(!(var11 instanceof EntityHanging));
-
-         return false;
+         return true;
       }
    }
 
@@ -181,14 +209,35 @@
          return false;
       } else {
          if(!this.isDead && !this.worldObj.isRemote) {
+            Object var3 = new HangingBreakEvent((Hanging)this.getBukkitEntity(), RemoveCause.DEFAULT);
+            PaintingBreakByEntityEvent var4 = null;
+            if(var1.getEntity() != null) {
+               var3 = new HangingBreakByEntityEvent((Hanging)this.getBukkitEntity(), var1.getEntity() == null?null:var1.getEntity().getBukkitEntity());
+               if(this instanceof EntityPainting) {
+                  var4 = new PaintingBreakByEntityEvent((Painting)this.getBukkitEntity(), var1.getEntity() == null?null:var1.getEntity().getBukkitEntity());
+               }
+            } else if(var1 == DamageSource.explosion || var1 == DamageSource.field_76375_l) {
+               var3 = new HangingBreakEvent((Hanging)this.getBukkitEntity(), RemoveCause.EXPLOSION);
+            }
+
+            this.worldObj.getServer().getPluginManager().callEvent((Event)var3);
+            if(var4 != null) {
+               var4.setCancelled(((HangingBreakEvent)var3).isCancelled());
+               this.worldObj.getServer().getPluginManager().callEvent(var4);
+            }
+
+            if(this.isDead || ((HangingBreakEvent)var3).isCancelled() || var4 != null && var4.isCancelled()) {
+               return true;
+            }
+
             this.setDead();
             this.setBeenAttacked();
-            EntityPlayer var3 = null;
+            EntityPlayer var5 = null;
             if(var1.getEntity() instanceof EntityPlayer) {
-               var3 = (EntityPlayer)var1.getEntity();
+               var5 = (EntityPlayer)var1.getEntity();
             }
 
-            if(var3 != null && var3.capabilities.isCreativeMode) {
+            if(var5 != null && var5.capabilities.isCreativeMode) {
                return true;
             }
 
@@ -201,20 +250,18 @@
 
    public void moveEntity(double var1, double var3, double var5) {
       if(!this.worldObj.isRemote && !this.isDead && var1 * var1 + var3 * var3 + var5 * var5 > 0.0D) {
-         this.setDead();
-         this.dropItemStack();
-      }
+         if(this.isDead) {
+            return;
+         }
 
-   }
-
-   public void addVelocity(double var1, double var3, double var5) {
-      if(!this.worldObj.isRemote && !this.isDead && var1 * var1 + var3 * var3 + var5 * var5 > 0.0D) {
          this.setDead();
          this.dropItemStack();
       }
 
    }
 
+   public void addVelocity(double var1, double var3, double var5) {}
+
    public void writeEntityToNBT(NBTTagCompound var1) {
       var1.setByte("Direction", (byte)this.hangingDirection);
       var1.setInteger("TileX", this.xPosition);
Binary files mcp-mcdev/net/minecraft/src/EntityIronGolem.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityIronGolem.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityIronGolem.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityIronGolem.java
--- mcp-mcdev/net/minecraft/src/EntityIronGolem.java	2012-11-29 21:15:01.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityIronGolem.java	2012-11-29 21:41:34.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.Block;
 import net.minecraft.src.ChunkCoordinates;
 import net.minecraft.src.DamageSource;
@@ -24,6 +25,8 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.Village;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
 
 public class EntityIronGolem extends EntityGolem {
 
@@ -165,19 +168,18 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(3);
-
-      int var4;
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Block.plantRed.blockID, 1);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3);
+      if(var4 > 0) {
+         var3.add(new CraftItemStack(Block.plantRed.blockID, var4));
       }
 
-      var4 = 3 + this.rand.nextInt(3);
-
-      for(int var5 = 0; var5 < var4; ++var5) {
-         this.dropItem(Item.ingotIron.shiftedIndex, 1);
+      int var5 = 3 + this.rand.nextInt(3);
+      if(var5 > 0) {
+         var3.add(new CraftItemStack(Item.ingotIron.shiftedIndex, var5));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public int getHoldRoseTick() {
Binary files mcp-mcdev/net/minecraft/src/EntityItem.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityItem.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityItem.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityItem.java
--- mcp-mcdev/net/minecraft/src/EntityItem.java	2012-11-29 21:15:01.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityItem.java	2012-11-29 21:41:34.000000000 -0800
@@ -13,6 +13,9 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.StatCollector;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerPickupItemEvent;
 
 public class EntityItem extends Entity {
 
@@ -21,6 +24,7 @@
    public int delayBeforeCanPickup;
    private int health = 5;
    public float hoverStart = (float)(Math.random() * 3.141592653589793D * 2.0D);
+   private int lastTick = (int)(System.currentTimeMillis() / 50L);
 
 
    public EntityItem(World var1, double var2, double var4, double var6, ItemStack var8) {
@@ -29,10 +33,18 @@
       this.yOffset = this.height / 2.0F;
       this.setPosition(var2, var4, var6);
       this.item = var8;
-      this.rotationYaw = (float)(Math.random() * 360.0D);
-      this.motionX = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D));
-      this.motionY = 0.20000000298023224D;
-      this.motionZ = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D));
+      if(this.item == null) {
+         throw new IllegalArgumentException("Can\'t create an EntityItem for a null item");
+      } else {
+         if(this.item.stackSize <= -1) {
+            this.item.stackSize = 1;
+         }
+
+         this.rotationYaw = (float)(Math.random() * 360.0D);
+         this.motionX = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D));
+         this.motionY = 0.20000000298023224D;
+         this.motionZ = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D));
+      }
    }
 
    protected boolean canTriggerWalking() {
@@ -49,18 +61,17 @@
 
    public void onUpdate() {
       super.onUpdate();
-      if(this.delayBeforeCanPickup > 0) {
-         --this.delayBeforeCanPickup;
-      }
-
+      int var1 = (int)(System.currentTimeMillis() / 50L);
+      this.delayBeforeCanPickup -= var1 - this.lastTick;
+      this.lastTick = var1;
       this.prevPosX = this.posX;
       this.prevPosY = this.posY;
       this.prevPosZ = this.posZ;
       this.motionY -= 0.03999999910593033D;
       this.noClip = this.pushOutOfBlocks(this.posX, (this.boundingBox.minY + this.boundingBox.maxY) / 2.0D, this.posZ);
       this.moveEntity(this.motionX, this.motionY, this.motionZ);
-      boolean var1 = (int)this.prevPosX != (int)this.posX || (int)this.prevPosY != (int)this.posY || (int)this.prevPosZ != (int)this.posZ;
-      if(var1) {
+      boolean var2 = (int)this.prevPosX != (int)this.posX || (int)this.prevPosY != (int)this.posY || (int)this.prevPosZ != (int)this.posZ;
+      if(var2) {
          if(this.worldObj.getBlockMaterial(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) == Material.lava) {
             this.motionY = 0.20000000298023224D;
             this.motionX = (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F);
@@ -73,24 +84,29 @@
          }
       }
 
-      float var2 = 0.98F;
+      float var3 = 0.98F;
       if(this.onGround) {
-         var2 = 0.58800006F;
-         int var3 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
-         if(var3 > 0) {
-            var2 = Block.blocksList[var3].slipperiness * 0.98F;
+         var3 = 0.58800006F;
+         int var4 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
+         if(var4 > 0) {
+            var3 = Block.blocksList[var4].slipperiness * 0.98F;
          }
       }
 
-      this.motionX *= (double)var2;
+      this.motionX *= (double)var3;
       this.motionY *= 0.9800000190734863D;
-      this.motionZ *= (double)var2;
+      this.motionZ *= (double)var3;
       if(this.onGround) {
          this.motionY *= -0.5D;
       }
 
       ++this.age;
       if(!this.worldObj.isRemote && this.age >= 6000) {
+         if(CraftEventFactory.callItemDespawnEvent(this).isCancelled()) {
+            this.age = 0;
+            return;
+         }
+
          this.setDead();
       }
 
@@ -122,12 +138,14 @@
             return var1.func_70289_a(this);
          } else if(var1.item.stackSize + this.item.stackSize > var1.item.getMaxStackSize()) {
             return false;
-         } else {
+         } else if(!var1.item.isItemEnchanted() && !this.item.isItemEnchanted()) {
             var1.item.stackSize += this.item.stackSize;
             var1.delayBeforeCanPickup = Math.max(var1.delayBeforeCanPickup, this.delayBeforeCanPickup);
             var1.age = Math.min(var1.age, this.age);
             this.setDead();
             return true;
+         } else {
+            return false;
          }
       } else {
          return false;
@@ -181,8 +199,22 @@
    }
 
    public void onCollideWithPlayer(EntityPlayer var1) {
-      if(!this.worldObj.isRemote) {
+      if(!this.worldObj.isRemote && this.item != null) {
          int var2 = this.item.stackSize;
+         int var3 = var1.inventory.canHold(this.item);
+         int var4 = this.item.stackSize - var3;
+         if(this.delayBeforeCanPickup <= 0 && var3 > 0) {
+            this.item.stackSize = var3;
+            PlayerPickupItemEvent var5 = new PlayerPickupItemEvent((Player)var1.getBukkitEntity(), (org.bukkit.entity.Item)this.getBukkitEntity(), var4);
+            this.worldObj.getServer().getPluginManager().callEvent(var5);
+            this.item.stackSize = var3 + var4;
+            if(var5.isCancelled()) {
+               return;
+            }
+
+            this.delayBeforeCanPickup = 0;
+         }
+
          if(this.delayBeforeCanPickup == 0 && var1.inventory.addItemStackToInventory(this.item)) {
             if(this.item.itemID == Block.wood.blockID) {
                var1.triggerAchievement(AchievementList.mineWood);
@@ -206,12 +238,12 @@
                this.setDead();
             }
          }
-
       }
+
    }
 
    public String getEntityName() {
-      return StatCollector.translateToLocal("item." + this.item.getItemName());
+      return this.item == null?StatCollector.translateToLocal("item.unknown"):StatCollector.translateToLocal("item." + this.item.getItemName());
    }
 
    public boolean canAttackWithItem() {
Binary files mcp-mcdev/net/minecraft/src/EntityLargeFireball.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLargeFireball.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityLargeFireball.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLargeFireball.java
--- mcp-mcdev/net/minecraft/src/EntityLargeFireball.java	2012-11-29 21:15:01.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLargeFireball.java	2012-11-29 21:41:34.000000000 -0800
@@ -1,11 +1,13 @@
 package net.minecraft.src;
 
 import net.minecraft.src.DamageSource;
-import net.minecraft.src.Entity;
 import net.minecraft.src.EntityFireball;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Explosive;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
 
 public class EntityLargeFireball extends EntityFireball {
 
@@ -23,7 +25,12 @@
             var1.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, this.shootingEntity), 6);
          }
 
-         this.worldObj.newExplosion((Entity)null, this.posX, this.posY, this.posZ, 1.0F, true, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+         ExplosionPrimeEvent var2 = new ExplosionPrimeEvent((Explosive)CraftEntity.getEntity(this.worldObj.getServer(), this));
+         this.worldObj.getServer().getPluginManager().callEvent(var2);
+         if(!var2.isCancelled()) {
+            this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, var2.getRadius(), var2.getFire(), this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+         }
+
          this.setDead();
       }
 
Binary files mcp-mcdev/net/minecraft/src/EntityLightningBolt.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLightningBolt.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityLightningBolt.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLightningBolt.java
--- mcp-mcdev/net/minecraft/src/EntityLightningBolt.java	2012-11-29 21:15:01.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLightningBolt.java	2012-11-29 21:41:34.000000000 -0800
@@ -8,34 +8,56 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockIgniteEvent;
+import org.bukkit.event.block.BlockIgniteEvent.IgniteCause;
 
 public class EntityLightningBolt extends EntityWeatherEffect {
 
    private int lightningState;
-   public long boltVertex = 0L;
+   public long boltVertex;
    private int boltLivingTime;
+   private CraftWorld cworld;
+   public boolean isEffect;
 
 
    public EntityLightningBolt(World var1, double var2, double var4, double var6) {
+      this(var1, var2, var4, var6, false);
+   }
+
+   public EntityLightningBolt(World var1, double var2, double var4, double var6, boolean var8) {
       super(var1);
+      this.boltVertex = 0L;
+      this.isEffect = false;
+      this.isEffect = var8;
+      this.cworld = var1.getWorld();
       this.setLocationAndAngles(var2, var4, var6, 0.0F, 0.0F);
       this.lightningState = 2;
       this.boltVertex = this.rand.nextLong();
       this.boltLivingTime = this.rand.nextInt(3) + 1;
-      if(!var1.isRemote && var1.difficultySetting >= 2 && var1.doChunksNearChunkExist(MathHelper.floor_double(var2), MathHelper.floor_double(var4), MathHelper.floor_double(var6), 10)) {
-         int var8 = MathHelper.floor_double(var2);
-         int var9 = MathHelper.floor_double(var4);
-         int var10 = MathHelper.floor_double(var6);
-         if(var1.getBlockId(var8, var9, var10) == 0 && Block.fire.canPlaceBlockAt(var1, var8, var9, var10)) {
-            var1.setBlockWithNotify(var8, var9, var10, Block.fire.blockID);
+      if(!var8 && !var1.isRemote && var1.difficultySetting >= 2 && var1.doChunksNearChunkExist(MathHelper.floor_double(var2), MathHelper.floor_double(var4), MathHelper.floor_double(var6), 10)) {
+         int var9 = MathHelper.floor_double(var2);
+         int var10 = MathHelper.floor_double(var4);
+         int var11 = MathHelper.floor_double(var6);
+         if(var1.getBlockId(var9, var10, var11) == 0 && Block.fire.canPlaceBlockAt(var1, var9, var10, var11)) {
+            BlockIgniteEvent var12 = new BlockIgniteEvent(this.cworld.getBlockAt(var9, var10, var11), IgniteCause.LIGHTNING, (Player)null);
+            var1.getServer().getPluginManager().callEvent(var12);
+            if(!var12.isCancelled()) {
+               var1.setBlockWithNotify(var9, var10, var11, Block.fire.blockID);
+            }
          }
 
-         for(var8 = 0; var8 < 4; ++var8) {
-            var9 = MathHelper.floor_double(var2) + this.rand.nextInt(3) - 1;
-            var10 = MathHelper.floor_double(var4) + this.rand.nextInt(3) - 1;
-            int var11 = MathHelper.floor_double(var6) + this.rand.nextInt(3) - 1;
-            if(var1.getBlockId(var9, var10, var11) == 0 && Block.fire.canPlaceBlockAt(var1, var9, var10, var11)) {
-               var1.setBlockWithNotify(var9, var10, var11, Block.fire.blockID);
+         for(var9 = 0; var9 < 4; ++var9) {
+            var10 = MathHelper.floor_double(var2) + this.rand.nextInt(3) - 1;
+            var11 = MathHelper.floor_double(var4) + this.rand.nextInt(3) - 1;
+            int var14 = MathHelper.floor_double(var6) + this.rand.nextInt(3) - 1;
+            if(var1.getBlockId(var10, var11, var14) == 0 && Block.fire.canPlaceBlockAt(var1, var10, var11, var14)) {
+               BlockIgniteEvent var13 = new BlockIgniteEvent(this.cworld.getBlockAt(var10, var11, var14), IgniteCause.LIGHTNING, (Player)null);
+               var1.getServer().getPluginManager().callEvent(var13);
+               if(!var13.isCancelled()) {
+                  var1.setBlockWithNotify(var10, var11, var14, Block.fire.blockID);
+               }
             }
          }
       }
@@ -57,23 +79,27 @@
             --this.boltLivingTime;
             this.lightningState = 1;
             this.boltVertex = this.rand.nextLong();
-            if(!this.worldObj.isRemote && this.worldObj.doChunksNearChunkExist(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ), 10)) {
+            if(!this.isEffect && !this.worldObj.isRemote && this.worldObj.doChunksNearChunkExist(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ), 10)) {
                int var1 = MathHelper.floor_double(this.posX);
                int var2 = MathHelper.floor_double(this.posY);
                int var3 = MathHelper.floor_double(this.posZ);
                if(this.worldObj.getBlockId(var1, var2, var3) == 0 && Block.fire.canPlaceBlockAt(this.worldObj, var1, var2, var3)) {
-                  this.worldObj.setBlockWithNotify(var1, var2, var3, Block.fire.blockID);
+                  BlockIgniteEvent var4 = new BlockIgniteEvent(this.cworld.getBlockAt(var1, var2, var3), IgniteCause.LIGHTNING, (Player)null);
+                  this.worldObj.getServer().getPluginManager().callEvent(var4);
+                  if(!var4.isCancelled()) {
+                     this.worldObj.setBlockWithNotify(var1, var2, var3, Block.fire.blockID);
+                  }
                }
             }
          }
       }
 
-      if(!this.worldObj.isRemote && this.lightningState >= 0) {
-         double var4 = 3.0D;
-         List var8 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, AxisAlignedBB.getAABBPool().addOrModifyAABBInPool(this.posX - var4, this.posY - var4, this.posZ - var4, this.posX + var4, this.posY + 6.0D + var4, this.posZ + var4));
+      if(!this.worldObj.isRemote && this.lightningState >= 0 && !this.isEffect) {
+         double var5 = 3.0D;
+         List var8 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, AxisAlignedBB.getAABBPool().addOrModifyAABBInPool(this.posX - var5, this.posY - var5, this.posZ - var5, this.posX + var5, this.posY + 6.0D + var5, this.posZ + var5));
 
-         for(int var6 = 0; var6 < var8.size(); ++var6) {
-            Entity var7 = (Entity)var8.get(var6);
+         for(int var9 = 0; var9 < var8.size(); ++var9) {
+            Entity var7 = (Entity)var8.get(var9);
             var7.onStruckByLightning(this);
          }
 
Binary files mcp-mcdev/net/minecraft/src/EntityLiving.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLiving.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityLiving.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLiving.java
--- mcp-mcdev/net/minecraft/src/EntityLiving.java	2012-11-29 21:15:01.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLiving.java	2012-11-29 21:41:34.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -14,6 +15,8 @@
 import net.minecraft.src.EntityArrow;
 import net.minecraft.src.EntityBodyHelper;
 import net.minecraft.src.EntityCreeper;
+import net.minecraft.src.EntityDamageSource;
+import net.minecraft.src.EntityDragon;
 import net.minecraft.src.EntityGhast;
 import net.minecraft.src.EntityItem;
 import net.minecraft.src.EntityJumpHelper;
@@ -45,6 +48,14 @@
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldServer;
+import org.bukkit.craftbukkit.TrigMath;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.entity.EntityDamageByBlockEvent;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public abstract class EntityLiving extends Entity {
 
@@ -93,14 +104,14 @@
    public float prevLegYaw;
    public float legYaw;
    public float legSwing;
-   protected EntityPlayer attackingPlayer = null;
+   public EntityPlayer attackingPlayer = null;
    protected int recentlyHit = 0;
-   private EntityLiving entityLivingToAttack = null;
+   public EntityLiving entityLivingToAttack = null;
    private int revengeTimer = 0;
    private EntityLiving lastAttackingEntity = null;
    public int arrowHitTimer = 0;
-   protected HashMap activePotionsMap = new HashMap();
-   private boolean potionsNeedUpdate = true;
+   public HashMap activePotionsMap = new HashMap();
+   public boolean potionsNeedUpdate = true;
    private int field_70748_f;
    private EntityLookHelper lookHelper;
    private EntityMoveHelper moveHelper;
@@ -128,7 +139,7 @@
    protected double newRotationYaw;
    protected double newRotationPitch;
    float field_70706_bo = 0.0F;
-   protected int lastDamage = 0;
+   public int lastDamage = 0;
    protected int entityAge = 0;
    protected float moveStrafing;
    protected float moveForward;
@@ -139,6 +150,8 @@
    private int jumpTicks = 0;
    private Entity currentTarget;
    protected int numTicksToChaseTarget = 0;
+   public int expToDrop = 0;
+   public int maxAirTicks = 300;
 
 
    public EntityLiving(World var1) {
@@ -342,8 +355,14 @@
          this.playLivingSound();
       }
 
-      if(this.isEntityAlive() && this.isEntityInsideOpaqueBlock()) {
-         this.attackEntityFrom(DamageSource.inWall, 1);
+      EntityDamageEvent var1;
+      if(this.isEntityAlive() && this.isEntityInsideOpaqueBlock() && !(this instanceof EntityDragon)) {
+         var1 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.SUFFOCATION, 1);
+         this.worldObj.getServer().getPluginManager().callEvent(var1);
+         if(!var1.isCancelled()) {
+            var1.getEntity().setLastDamageCause(var1);
+            this.attackEntityFrom(DamageSource.inWall, var1.getDamage());
+         }
       }
 
       if(this.isImmuneToFire() || this.worldObj.isRemote) {
@@ -355,19 +374,24 @@
          if(this.getAir() == -20) {
             this.setAir(0);
 
-            for(int var1 = 0; var1 < 8; ++var1) {
+            for(int var5 = 0; var5 < 8; ++var5) {
                float var2 = this.rand.nextFloat() - this.rand.nextFloat();
                float var3 = this.rand.nextFloat() - this.rand.nextFloat();
                float var4 = this.rand.nextFloat() - this.rand.nextFloat();
                this.worldObj.spawnParticle("bubble", this.posX + (double)var2, this.posY + (double)var3, this.posZ + (double)var4, this.motionX, this.motionY, this.motionZ);
             }
 
-            this.attackEntityFrom(DamageSource.drown, 2);
+            var1 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.DROWNING, 2);
+            this.worldObj.getServer().getPluginManager().callEvent(var1);
+            if(!var1.isCancelled() && var1.getDamage() != 0) {
+               var1.getEntity().setLastDamageCause(var1);
+               this.attackEntityFrom(DamageSource.drown, var1.getDamage());
+            }
          }
 
          this.extinguish();
-      } else {
-         this.setAir(300);
+      } else if(this.getAir() != 300) {
+         this.setAir(this.maxAirTicks);
       }
 
       this.prevCameraPitch = this.cameraPitch;
@@ -416,20 +440,23 @@
       this.worldObj.theProfiler.endSection();
    }
 
+   public int getExpReward() {
+      int var1 = this.getExperiencePoints(this.attackingPlayer);
+      return !this.worldObj.isRemote && (this.recentlyHit > 0 || this.isPlayer()) && !this.isChild()?var1:0;
+   }
+
    protected void onDeathUpdate() {
       ++this.deathTime;
-      if(this.deathTime == 20) {
-         int var1;
-         if(!this.worldObj.isRemote && (this.recentlyHit > 0 || this.isPlayer()) && !this.isChild()) {
-            var1 = this.getExperiencePoints(this.attackingPlayer);
+      if(this.deathTime >= 20 && !this.isDead) {
+         int var1 = this.expToDrop;
 
-            while(var1 > 0) {
-               int var2 = EntityXPOrb.getXPSplit(var1);
-               var1 -= var2;
-               this.worldObj.spawnEntityInWorld(new EntityXPOrb(this.worldObj, this.posX, this.posY, this.posZ, var2));
-            }
+         while(var1 > 0) {
+            int var2 = EntityXPOrb.getXPSplit(var1);
+            var1 -= var2;
+            this.worldObj.spawnEntityInWorld(new EntityXPOrb(this.worldObj, this.posX, this.posY, this.posZ, var2));
          }
 
+         this.expToDrop = 0;
          this.setDead();
 
          for(var1 = 0; var1 < 20; ++var1) {
@@ -509,7 +536,7 @@
       if(var7 > 0.0025000002F) {
          var10 = 1.0F;
          var9 = (float)Math.sqrt((double)var7) * 3.0F;
-         var8 = (float)Math.atan2(var5, var3) * 180.0F / 3.1415927F - 90.0F;
+         var8 = (float)TrigMath.atan2(var5, var3) * 180.0F / 3.1415927F - 90.0F;
       }
 
       if(this.swingProgress > 0.0F) {
@@ -587,14 +614,24 @@
    }
 
    public void heal(int var1) {
+      this.heal(var1, RegainReason.CUSTOM);
+   }
+
+   public void heal(int var1, RegainReason var2) {
       if(this.health > 0) {
-         this.health += var1;
+         EntityRegainHealthEvent var3 = new EntityRegainHealthEvent(this.getBukkitEntity(), var1, var2);
+         this.worldObj.getServer().getPluginManager().callEvent(var3);
+         if(!var3.isCancelled()) {
+            this.health += var3.getAmount();
+         }
+
          if(this.health > this.getMaxHealth()) {
             this.health = this.getMaxHealth();
          }
 
          this.hurtResistantTime = this.maxHurtResistantTime / 2;
       }
+
    }
 
    public abstract int getMaxHealth();
@@ -629,6 +666,15 @@
 
             this.legYaw = 1.5F;
             boolean var3 = true;
+            if(var1 instanceof EntityDamageSource) {
+               EntityDamageEvent var4 = CraftEventFactory.handleEntityDamageEvent(this, var1, var2);
+               if(var4.isCancelled()) {
+                  return false;
+               }
+
+               var2 = var4.getDamage();
+            }
+
             if((float)this.hurtResistantTime > (float)this.maxHurtResistantTime / 2.0F) {
                if(var2 <= this.lastDamage) {
                   return false;
@@ -646,17 +692,17 @@
             }
 
             this.attackedAtYaw = 0.0F;
-            Entity var4 = var1.getEntity();
-            if(var4 != null) {
-               if(var4 instanceof EntityLiving) {
-                  this.setRevengeTarget((EntityLiving)var4);
+            Entity var10 = var1.getEntity();
+            if(var10 != null) {
+               if(var10 instanceof EntityLiving) {
+                  this.setRevengeTarget((EntityLiving)var10);
                }
 
-               if(var4 instanceof EntityPlayer) {
+               if(var10 instanceof EntityPlayer) {
                   this.recentlyHit = 60;
-                  this.attackingPlayer = (EntityPlayer)var4;
-               } else if(var4 instanceof EntityWolf) {
-                  EntityWolf var5 = (EntityWolf)var4;
+                  this.attackingPlayer = (EntityPlayer)var10;
+               } else if(var10 instanceof EntityWolf) {
+                  EntityWolf var5 = (EntityWolf)var10;
                   if(var5.isTamed()) {
                      this.recentlyHit = 60;
                      this.attackingPlayer = null;
@@ -670,16 +716,16 @@
                   this.setBeenAttacked();
                }
 
-               if(var4 != null) {
-                  double var6 = var4.posX - this.posX;
+               if(var10 != null) {
+                  double var6 = var10.posX - this.posX;
 
                   double var8;
-                  for(var8 = var4.posZ - this.posZ; var6 * var6 + var8 * var8 < 1.0E-4D; var8 = (Math.random() - Math.random()) * 0.01D) {
+                  for(var8 = var10.posZ - this.posZ; var6 * var6 + var8 * var8 < 1.0E-4D; var8 = (Math.random() - Math.random()) * 0.01D) {
                      var6 = (Math.random() - Math.random()) * 0.01D;
                   }
 
                   this.attackedAtYaw = (float)(Math.atan2(var8, var6) * 180.0D / 3.1415927410125732D) - this.rotationYaw;
-                  this.knockBack(var4, var2, var6, var8);
+                  this.knockBack(var10, var2, var6, var8);
                } else {
                   this.attackedAtYaw = (float)((int)(Math.random() * 2.0D) * 180);
                }
@@ -752,6 +798,7 @@
          var2 = this.applyPotionDamageCalculations(var1, var2);
          this.health -= var2;
       }
+
    }
 
    protected float getSoundVolume() {
@@ -806,33 +853,44 @@
          if(!this.isChild() && this.worldObj.getGameRules().getGameRuleBooleanValue("doMobLoot")) {
             this.dropFewItems(this.recentlyHit > 0, var3);
             this.dropEquipment(this.recentlyHit > 0, var3);
-            if(this.recentlyHit > 0) {
-               int var4 = this.rand.nextInt(200) - var3;
-               if(var4 < 5) {
-                  this.dropRareDrop(var4 <= 0?1:0);
-               }
-            }
+         } else {
+            CraftEventFactory.callEntityDeathEvent(this);
          }
       }
 
       this.worldObj.setEntityState(this, (byte)3);
    }
 
-   protected void dropRareDrop(int var1) {}
+   protected ItemStack l(int var1) {
+      return null;
+   }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.getDropItemId();
-      if(var3 > 0) {
-         int var4 = this.rand.nextInt(3);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.getDropItemId();
+      int var5;
+      if(var4 > 0) {
+         var5 = this.rand.nextInt(3);
          if(var2 > 0) {
-            var4 += this.rand.nextInt(var2 + 1);
+            var5 += this.rand.nextInt(var2 + 1);
          }
 
-         for(int var5 = 0; var5 < var4; ++var5) {
-            this.dropItem(var3, 1);
+         if(var5 > 0) {
+            var3.add(new org.bukkit.inventory.ItemStack(var4, var5));
+         }
+      }
+
+      if(this.recentlyHit > 0) {
+         var5 = this.rand.nextInt(200) - var2;
+         if(var5 < 5) {
+            ItemStack var6 = this.l(var5 <= 0?1:0);
+            if(var6 != null) {
+               var3.add(new CraftItemStack(var6));
+            }
          }
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    protected int getDropItemId() {
@@ -843,17 +901,24 @@
       super.fall(var1);
       int var2 = MathHelper.ceiling_float_int(var1 - 3.0F);
       if(var2 > 0) {
-         if(var2 > 4) {
-            this.func_85030_a("damage.fallbig", 1.0F, 1.0F);
-         } else {
-            this.func_85030_a("damage.fallsmall", 1.0F, 1.0F);
+         EntityDamageEvent var3 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.FALL, var2);
+         this.worldObj.getServer().getPluginManager().callEvent(var3);
+         if(!var3.isCancelled() && var3.getDamage() != 0) {
+            var2 = var3.getDamage();
+            if(var2 > 4) {
+               this.func_85030_a("damage.fallbig", 1.0F, 1.0F);
+            } else {
+               this.func_85030_a("damage.fallsmall", 1.0F, 1.0F);
+            }
+
+            this.getBukkitEntity().setLastDamageCause(var3);
+            this.attackEntityFrom(DamageSource.fall, var2);
          }
 
-         this.attackEntityFrom(DamageSource.fall, var2);
-         int var3 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY - 0.20000000298023224D - (double)this.yOffset), MathHelper.floor_double(this.posZ));
-         if(var3 > 0) {
-            StepSound var4 = Block.blocksList[var3].stepSound;
-            this.func_85030_a(var4.getStepSound(), var4.getVolume() * 0.5F, var4.getPitch() * 0.75F);
+         int var4 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY - 0.20000000298023224D - (double)this.yOffset), MathHelper.floor_double(this.posZ));
+         if(var4 > 0) {
+            StepSound var5 = Block.blocksList[var4].stepSound;
+            this.func_85030_a(var5.getStepSound(), var5.getVolume() * 0.5F, var5.getPitch() * 0.75F);
          }
       }
 
@@ -861,6 +926,7 @@
 
    public void moveEntityWithHeading(float var1, float var2) {
       double var3;
+      float var7;
       if(this.isInWater() && (!(this instanceof EntityPlayer) || !((EntityPlayer)this).capabilities.isFlying)) {
          var3 = this.posY;
          this.moveFlying(var1, var2, this.isAIEnabled()?0.04F:0.02F);
@@ -894,7 +960,6 @@
          }
 
          float var12 = 0.16277136F / (var5 * var5 * var5);
-         float var7;
          if(this.onGround) {
             if(this.isAIEnabled()) {
                var7 = this.getAIMoveSpeed();
@@ -969,12 +1034,12 @@
       this.prevLegYaw = this.legYaw;
       var3 = this.posX - this.prevPosX;
       double var10 = this.posZ - this.prevPosZ;
-      float var14 = MathHelper.sqrt_double(var3 * var3 + var10 * var10) * 4.0F;
-      if(var14 > 1.0F) {
-         var14 = 1.0F;
+      var7 = MathHelper.sqrt_double(var3 * var3 + var10 * var10) * 4.0F;
+      if(var7 > 1.0F) {
+         var7 = 1.0F;
       }
 
-      this.legYaw += (var14 - this.legYaw) * 0.4F;
+      this.legYaw += (var7 - this.legYaw) * 0.4F;
       this.legSwing += this.legYaw;
    }
 
@@ -1299,8 +1364,8 @@
                this.entityAge = 0;
             }
          }
-
       }
+
    }
 
    protected void updateAITasks() {
@@ -1429,7 +1494,12 @@
    }
 
    protected void kill() {
-      this.attackEntityFrom(DamageSource.outOfWorld, 4);
+      EntityDamageByBlockEvent var1 = new EntityDamageByBlockEvent((org.bukkit.block.Block)null, this.getBukkitEntity(), DamageCause.VOID, 4);
+      this.worldObj.getServer().getPluginManager().callEvent(var1);
+      if(!var1.isCancelled() && var1.getDamage() != 0) {
+         var1.getEntity().setLastDamageCause(var1);
+         this.attackEntityFrom(DamageSource.outOfWorld, var1.getDamage());
+      }
    }
 
    public Vec3 getLookVec() {
@@ -1563,8 +1633,8 @@
             this.activePotionsMap.put(Integer.valueOf(var1.getPotionID()), var1);
             this.onNewPotionEffect(var1);
          }
-
       }
+
    }
 
    public boolean isPotionApplicable(PotionEffect var1) {
Binary files mcp-mcdev/net/minecraft/src/EntityLookHelper.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLookHelper.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityLookHelper.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLookHelper.java
--- mcp-mcdev/net/minecraft/src/EntityLookHelper.java	2012-11-29 21:14:59.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityLookHelper.java	2012-11-29 21:41:31.000000000 -0800
@@ -3,6 +3,7 @@
 import net.minecraft.src.Entity;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.MathHelper;
+import org.bukkit.craftbukkit.TrigMath;
 
 public class EntityLookHelper {
 
@@ -50,8 +51,8 @@
          double var3 = this.posY - (this.entity.posY + (double)this.entity.getEyeHeight());
          double var5 = this.posZ - this.entity.posZ;
          double var7 = (double)MathHelper.sqrt_double(var1 * var1 + var5 * var5);
-         float var9 = (float)(Math.atan2(var5, var1) * 180.0D / 3.1415927410125732D) - 90.0F;
-         float var10 = (float)(-(Math.atan2(var3, var7) * 180.0D / 3.1415927410125732D));
+         float var9 = (float)(TrigMath.atan2(var5, var1) * 180.0D / 3.1415927410125732D) - 90.0F;
+         float var10 = (float)(-(TrigMath.atan2(var3, var7) * 180.0D / 3.1415927410125732D));
          this.entity.rotationPitch = this.updateRotation(this.entity.rotationPitch, var10, this.deltaLookPitch);
          this.entity.rotationYawHead = this.updateRotation(this.entity.rotationYawHead, var9, this.deltaLookYaw);
       } else {
Binary files mcp-mcdev/net/minecraft/src/EntityMagmaCube.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMagmaCube.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityMagmaCube.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMagmaCube.java
--- mcp-mcdev/net/minecraft/src/EntityMagmaCube.java	2012-11-29 21:14:59.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMagmaCube.java	2012-11-29 21:41:31.000000000 -0800
@@ -1,8 +1,10 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.EntitySlime;
 import net.minecraft.src.Item;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityMagmaCube extends EntitySlime {
 
@@ -38,18 +40,20 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.getDropItemId();
-      if(var3 > 0 && this.getSlimeSize() > 1) {
-         int var4 = this.rand.nextInt(4) - 2;
+      ArrayList var3 = new ArrayList();
+      int var4 = this.getDropItemId();
+      if(var4 > 0 && this.getSlimeSize() > 1) {
+         int var5 = this.rand.nextInt(4) - 2;
          if(var2 > 0) {
-            var4 += this.rand.nextInt(var2 + 1);
+            var5 += this.rand.nextInt(var2 + 1);
          }
 
-         for(int var5 = 0; var5 < var4; ++var5) {
-            this.dropItem(var3, 1);
+         if(var5 > 0) {
+            var3.add(new org.bukkit.inventory.ItemStack(var4, var5));
          }
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public boolean isBurning() {
Binary files mcp-mcdev/net/minecraft/src/EntityMinecart.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMinecart.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityMinecart.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMinecart.java
--- mcp-mcdev/net/minecraft/src/EntityMinecart.java	2012-11-29 21:14:59.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMinecart.java	2012-11-29 21:41:31.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.List;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.Block;
@@ -19,6 +20,18 @@
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.vehicle.VehicleCreateEvent;
+import org.bukkit.event.vehicle.VehicleDamageEvent;
+import org.bukkit.event.vehicle.VehicleDestroyEvent;
+import org.bukkit.event.vehicle.VehicleEntityCollisionEvent;
+import org.bukkit.event.vehicle.VehicleMoveEvent;
+import org.bukkit.event.vehicle.VehicleUpdateEvent;
+import org.bukkit.inventory.InventoryHolder;
+import org.bukkit.util.Vector;
 
 public class EntityMinecart extends Entity implements IInventory {
 
@@ -37,11 +50,56 @@
    private double minecartZ;
    private double minecartYaw;
    private double minecartPitch;
+   public boolean slowWhenEmpty;
+   private double derailedX;
+   private double derailedY;
+   private double derailedZ;
+   private double flyingX;
+   private double flyingY;
+   private double flyingZ;
+   public double maxSpeed;
+   public List transaction;
+   private int maxStack;
 
 
+   public ItemStack[] getContents() {
+      return this.cargoItems;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      org.bukkit.entity.Entity var1 = this.getBukkitEntity();
+      return var1 instanceof InventoryHolder?(InventoryHolder)var1:null;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public EntityMinecart(World var1) {
       super(var1);
-      this.cargoItems = new ItemStack[36];
+      this.slowWhenEmpty = true;
+      this.derailedX = 0.5D;
+      this.derailedY = 0.5D;
+      this.derailedZ = 0.5D;
+      this.flyingX = 0.95D;
+      this.flyingY = 0.95D;
+      this.flyingZ = 0.95D;
+      this.maxSpeed = 0.4D;
+      this.transaction = new ArrayList();
+      this.maxStack = 64;
+      this.cargoItems = new ItemStack[27];
       this.fuel = 0;
       this.field_70499_f = false;
       this.field_82345_h = true;
@@ -84,6 +142,7 @@
       this.prevPosY = var4;
       this.prevPosZ = var6;
       this.minecartType = var8;
+      this.worldObj.getServer().getPluginManager().callEvent(new VehicleCreateEvent((Vehicle)this.getBukkitEntity()));
    }
 
    public double getMountedYOffset() {
@@ -91,10 +150,17 @@
    }
 
    public boolean attackEntityFrom(DamageSource var1, int var2) {
-      if(!this.worldObj.isRemote && !this.isDead) {
-         if(this.func_85032_ar()) {
-            return false;
+      if(this.func_85032_ar()) {
+         return false;
+      } else if(!this.worldObj.isRemote && !this.isDead) {
+         Vehicle var3 = (Vehicle)this.getBukkitEntity();
+         org.bukkit.entity.Entity var4 = var1.getEntity() == null?null:var1.getEntity().getBukkitEntity();
+         VehicleDamageEvent var5 = new VehicleDamageEvent(var3, var4, var2);
+         this.worldObj.getServer().getPluginManager().callEvent(var5);
+         if(var5.isCancelled()) {
+            return true;
          } else {
+            var2 = var5.getDamage();
             this.func_70494_i(-this.func_70493_k());
             this.func_70497_h(10);
             this.setBeenAttacked();
@@ -108,31 +174,38 @@
                   this.riddenByEntity.mountEntity(this);
                }
 
+               VehicleDestroyEvent var6 = new VehicleDestroyEvent(var3, var4);
+               this.worldObj.getServer().getPluginManager().callEvent(var6);
+               if(var6.isCancelled()) {
+                  this.setDamage(40);
+                  return true;
+               }
+
                this.setDead();
                this.dropItemWithOffset(Item.minecartEmpty.shiftedIndex, 1, 0.0F);
                if(this.minecartType == 1) {
-                  EntityMinecart var3 = this;
+                  EntityMinecart var7 = this;
 
-                  for(int var4 = 0; var4 < var3.getSizeInventory(); ++var4) {
-                     ItemStack var5 = var3.getStackInSlot(var4);
-                     if(var5 != null) {
-                        float var6 = this.rand.nextFloat() * 0.8F + 0.1F;
-                        float var7 = this.rand.nextFloat() * 0.8F + 0.1F;
-                        float var8 = this.rand.nextFloat() * 0.8F + 0.1F;
-
-                        while(var5.stackSize > 0) {
-                           int var9 = this.rand.nextInt(21) + 10;
-                           if(var9 > var5.stackSize) {
-                              var9 = var5.stackSize;
+                  for(int var8 = 0; var8 < var7.getSizeInventory(); ++var8) {
+                     ItemStack var9 = var7.getStackInSlot(var8);
+                     if(var9 != null) {
+                        float var10 = this.rand.nextFloat() * 0.8F + 0.1F;
+                        float var11 = this.rand.nextFloat() * 0.8F + 0.1F;
+                        float var12 = this.rand.nextFloat() * 0.8F + 0.1F;
+
+                        while(var9.stackSize > 0) {
+                           int var13 = this.rand.nextInt(21) + 10;
+                           if(var13 > var9.stackSize) {
+                              var13 = var9.stackSize;
                            }
 
-                           var5.stackSize -= var9;
-                           EntityItem var10 = new EntityItem(this.worldObj, this.posX + (double)var6, this.posY + (double)var7, this.posZ + (double)var8, new ItemStack(var5.itemID, var9, var5.getItemDamage()));
-                           float var11 = 0.05F;
-                           var10.motionX = (double)((float)this.rand.nextGaussian() * var11);
-                           var10.motionY = (double)((float)this.rand.nextGaussian() * var11 + 0.2F);
-                           var10.motionZ = (double)((float)this.rand.nextGaussian() * var11);
-                           this.worldObj.spawnEntityInWorld(var10);
+                           var9.stackSize -= var13;
+                           EntityItem var14 = new EntityItem(this.worldObj, this.posX + (double)var10, this.posY + (double)var11, this.posZ + (double)var12, new ItemStack(var9.itemID, var13, var9.getItemDamage(), var9.getEnchantmentTagList()));
+                           float var15 = 0.05F;
+                           var14.motionX = (double)((float)this.rand.nextGaussian() * var15);
+                           var14.motionY = (double)((float)this.rand.nextGaussian() * var15 + 0.2F);
+                           var14.motionZ = (double)((float)this.rand.nextGaussian() * var15);
+                           this.worldObj.spawnEntityInWorld(var14);
                         }
                      }
                   }
@@ -198,6 +271,11 @@
    }
 
    public void onUpdate() {
+      double var1 = this.posX;
+      double var3 = this.posY;
+      double var5 = this.posZ;
+      float var7 = this.rotationYaw;
+      float var8 = this.rotationPitch;
       if(this.field_82344_g != null) {
          this.field_82344_g.update();
       }
@@ -220,99 +298,98 @@
 
       if(this.worldObj.isRemote) {
          if(this.turnProgress > 0) {
-            double var1 = this.posX + (this.minecartX - this.posX) / (double)this.turnProgress;
-            double var3 = this.posY + (this.minecartY - this.posY) / (double)this.turnProgress;
-            double var5 = this.posZ + (this.minecartZ - this.posZ) / (double)this.turnProgress;
-            double var7 = MathHelper.wrapAngleTo180_double(this.minecartYaw - (double)this.rotationYaw);
-            this.rotationYaw = (float)((double)this.rotationYaw + var7 / (double)this.turnProgress);
+            double var9 = this.posX + (this.minecartX - this.posX) / (double)this.turnProgress;
+            double var11 = this.posY + (this.minecartY - this.posY) / (double)this.turnProgress;
+            double var13 = this.posZ + (this.minecartZ - this.posZ) / (double)this.turnProgress;
+            double var15 = MathHelper.wrapAngleTo180_double(this.minecartYaw - (double)this.rotationYaw);
+            this.rotationYaw = (float)((double)this.rotationYaw + var15 / (double)this.turnProgress);
             this.rotationPitch = (float)((double)this.rotationPitch + (this.minecartPitch - (double)this.rotationPitch) / (double)this.turnProgress);
             --this.turnProgress;
-            this.setPosition(var1, var3, var5);
+            this.setPosition(var9, var11, var13);
             this.setRotation(this.rotationYaw, this.rotationPitch);
          } else {
             this.setPosition(this.posX, this.posY, this.posZ);
             this.setRotation(this.rotationYaw, this.rotationPitch);
          }
-
       } else {
          this.prevPosX = this.posX;
          this.prevPosY = this.posY;
          this.prevPosZ = this.posZ;
          this.motionY -= 0.03999999910593033D;
-         int var9 = MathHelper.floor_double(this.posX);
-         int var10 = MathHelper.floor_double(this.posY);
-         int var11 = MathHelper.floor_double(this.posZ);
-         if(BlockRail.isRailBlockAt(this.worldObj, var9, var10 - 1, var11)) {
-            --var10;
+         int var17 = MathHelper.floor_double(this.posX);
+         int var18 = MathHelper.floor_double(this.posY);
+         int var19 = MathHelper.floor_double(this.posZ);
+         if(BlockRail.isRailBlockAt(this.worldObj, var17, var18 - 1, var19)) {
+            --var18;
          }
 
-         double var12 = 0.4D;
-         double var14 = 0.0078125D;
-         int var16 = this.worldObj.getBlockId(var9, var10, var11);
-         if(BlockRail.isRailBlock(var16)) {
+         double var20 = this.maxSpeed;
+         double var22 = 0.0078125D;
+         int var24 = this.worldObj.getBlockId(var17, var18, var19);
+         if(BlockRail.isRailBlock(var24)) {
             this.fallDistance = 0.0F;
-            Vec3 var17 = this.func_70489_a(this.posX, this.posY, this.posZ);
-            int var18 = this.worldObj.getBlockMetadata(var9, var10, var11);
-            this.posY = (double)var10;
-            boolean var19 = false;
-            boolean var20 = false;
-            if(var16 == Block.railPowered.blockID) {
-               var19 = (var18 & 8) != 0;
-               var20 = !var19;
+            Vec3 var25 = this.func_70489_a(this.posX, this.posY, this.posZ);
+            int var26 = this.worldObj.getBlockMetadata(var17, var18, var19);
+            this.posY = (double)var18;
+            boolean var27 = false;
+            boolean var28 = false;
+            if(var24 == Block.railPowered.blockID) {
+               var27 = (var26 & 8) != 0;
+               var28 = !var27;
             }
 
-            if(((BlockRail)Block.blocksList[var16]).isPowered()) {
-               var18 &= 7;
+            if(((BlockRail)Block.blocksList[var24]).isPowered()) {
+               var26 &= 7;
             }
 
-            if(var18 >= 2 && var18 <= 5) {
-               this.posY = (double)(var10 + 1);
+            if(var26 >= 2 && var26 <= 5) {
+               this.posY = (double)(var18 + 1);
             }
 
-            if(var18 == 2) {
-               this.motionX -= var14;
+            if(var26 == 2) {
+               this.motionX -= var22;
             }
 
-            if(var18 == 3) {
-               this.motionX += var14;
+            if(var26 == 3) {
+               this.motionX += var22;
             }
 
-            if(var18 == 4) {
-               this.motionZ += var14;
+            if(var26 == 4) {
+               this.motionZ += var22;
             }
 
-            if(var18 == 5) {
-               this.motionZ -= var14;
+            if(var26 == 5) {
+               this.motionZ -= var22;
             }
 
-            int[][] var21 = field_70500_g[var18];
-            double var22 = (double)(var21[1][0] - var21[0][0]);
-            double var24 = (double)(var21[1][2] - var21[0][2]);
-            double var26 = Math.sqrt(var22 * var22 + var24 * var24);
-            double var28 = this.motionX * var22 + this.motionZ * var24;
-            if(var28 < 0.0D) {
-               var22 = -var22;
-               var24 = -var24;
+            int[][] var29 = field_70500_g[var26];
+            double var30 = (double)(var29[1][0] - var29[0][0]);
+            double var32 = (double)(var29[1][2] - var29[0][2]);
+            double var34 = Math.sqrt(var30 * var30 + var32 * var32);
+            double var36 = this.motionX * var30 + this.motionZ * var32;
+            if(var36 < 0.0D) {
+               var30 = -var30;
+               var32 = -var32;
             }
 
-            double var30 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-            this.motionX = var30 * var22 / var26;
-            this.motionZ = var30 * var24 / var26;
-            double var34;
-            double var32;
+            double var38 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+            this.motionX = var38 * var30 / var34;
+            this.motionZ = var38 * var32 / var34;
+            double var42;
+            double var40;
             if(this.riddenByEntity != null) {
-               var32 = this.riddenByEntity.motionX * this.riddenByEntity.motionX + this.riddenByEntity.motionZ * this.riddenByEntity.motionZ;
-               var34 = this.motionX * this.motionX + this.motionZ * this.motionZ;
-               if(var32 > 1.0E-4D && var34 < 0.01D) {
+               var40 = this.riddenByEntity.motionX * this.riddenByEntity.motionX + this.riddenByEntity.motionZ * this.riddenByEntity.motionZ;
+               var42 = this.motionX * this.motionX + this.motionZ * this.motionZ;
+               if(var40 > 1.0E-4D && var42 < 0.01D) {
                   this.motionX += this.riddenByEntity.motionX * 0.1D;
                   this.motionZ += this.riddenByEntity.motionZ * 0.1D;
-                  var20 = false;
+                  var28 = false;
                }
             }
 
-            if(var20) {
-               var32 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-               if(var32 < 0.03D) {
+            if(var28) {
+               var40 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+               if(var40 < 0.03D) {
                   this.motionX *= 0.0D;
                   this.motionY *= 0.0D;
                   this.motionZ *= 0.0D;
@@ -323,77 +400,73 @@
                }
             }
 
-            var32 = 0.0D;
-            var34 = (double)var9 + 0.5D + (double)var21[0][0] * 0.5D;
-            double var36 = (double)var11 + 0.5D + (double)var21[0][2] * 0.5D;
-            double var38 = (double)var9 + 0.5D + (double)var21[1][0] * 0.5D;
-            double var40 = (double)var11 + 0.5D + (double)var21[1][2] * 0.5D;
-            var22 = var38 - var34;
-            var24 = var40 - var36;
-            double var42;
-            double var44;
-            if(var22 == 0.0D) {
-               this.posX = (double)var9 + 0.5D;
-               var32 = this.posZ - (double)var11;
-            } else if(var24 == 0.0D) {
-               this.posZ = (double)var11 + 0.5D;
-               var32 = this.posX - (double)var9;
+            var40 = 0.0D;
+            var42 = (double)var17 + 0.5D + (double)var29[0][0] * 0.5D;
+            double var44 = (double)var19 + 0.5D + (double)var29[0][2] * 0.5D;
+            double var46 = (double)var17 + 0.5D + (double)var29[1][0] * 0.5D;
+            double var48 = (double)var19 + 0.5D + (double)var29[1][2] * 0.5D;
+            var30 = var46 - var42;
+            var32 = var48 - var44;
+            double var50;
+            double var52;
+            if(var30 == 0.0D) {
+               this.posX = (double)var17 + 0.5D;
+               var40 = this.posZ - (double)var19;
+            } else if(var32 == 0.0D) {
+               this.posZ = (double)var19 + 0.5D;
+               var40 = this.posX - (double)var17;
             } else {
-               var42 = this.posX - var34;
-               var44 = this.posZ - var36;
-               var32 = (var42 * var22 + var44 * var24) * 2.0D;
+               var50 = this.posX - var42;
+               var52 = this.posZ - var44;
+               var40 = (var50 * var30 + var52 * var32) * 2.0D;
             }
 
-            this.posX = var34 + var22 * var32;
-            this.posZ = var36 + var24 * var32;
+            this.posX = var42 + var30 * var40;
+            this.posZ = var44 + var32 * var40;
             this.setPosition(this.posX, this.posY + (double)this.yOffset, this.posZ);
-            var42 = this.motionX;
-            var44 = this.motionZ;
+            var50 = this.motionX;
+            var52 = this.motionZ;
             if(this.riddenByEntity != null) {
-               var42 *= 0.75D;
-               var44 *= 0.75D;
+               var50 *= 0.75D;
+               var52 *= 0.75D;
             }
 
-            if(var42 < -var12) {
-               var42 = -var12;
+            if(var50 < -var20) {
+               var50 = -var20;
             }
 
-            if(var42 > var12) {
-               var42 = var12;
+            if(var50 > var20) {
+               var50 = var20;
             }
 
-            if(var44 < -var12) {
-               var44 = -var12;
+            if(var52 < -var20) {
+               var52 = -var20;
             }
 
-            if(var44 > var12) {
-               var44 = var12;
+            if(var52 > var20) {
+               var52 = var20;
             }
 
-            this.moveEntity(var42, 0.0D, var44);
-            if(var21[0][1] != 0 && MathHelper.floor_double(this.posX) - var9 == var21[0][0] && MathHelper.floor_double(this.posZ) - var11 == var21[0][2]) {
-               this.setPosition(this.posX, this.posY + (double)var21[0][1], this.posZ);
-            } else if(var21[1][1] != 0 && MathHelper.floor_double(this.posX) - var9 == var21[1][0] && MathHelper.floor_double(this.posZ) - var11 == var21[1][2]) {
-               this.setPosition(this.posX, this.posY + (double)var21[1][1], this.posZ);
+            this.moveEntity(var50, 0.0D, var52);
+            if(var29[0][1] != 0 && MathHelper.floor_double(this.posX) - var17 == var29[0][0] && MathHelper.floor_double(this.posZ) - var19 == var29[0][2]) {
+               this.setPosition(this.posX, this.posY + (double)var29[0][1], this.posZ);
+            } else if(var29[1][1] != 0 && MathHelper.floor_double(this.posX) - var17 == var29[1][0] && MathHelper.floor_double(this.posZ) - var19 == var29[1][2]) {
+               this.setPosition(this.posX, this.posY + (double)var29[1][1], this.posZ);
             }
 
-            if(this.riddenByEntity != null) {
-               this.motionX *= 0.996999979019165D;
-               this.motionY *= 0.0D;
-               this.motionZ *= 0.996999979019165D;
-            } else {
+            if(this.riddenByEntity == null && this.slowWhenEmpty) {
                if(this.minecartType == 2) {
-                  double var46 = this.pushX * this.pushX + this.pushZ * this.pushZ;
-                  if(var46 > 1.0E-4D) {
-                     var46 = (double)MathHelper.sqrt_double(var46);
-                     this.pushX /= var46;
-                     this.pushZ /= var46;
-                     double var48 = 0.04D;
+                  double var54 = this.pushX * this.pushX + this.pushZ * this.pushZ;
+                  if(var54 > 1.0E-4D) {
+                     var54 = (double)MathHelper.sqrt_double(var54);
+                     this.pushX /= var54;
+                     this.pushZ /= var54;
+                     double var56 = 0.04D;
                      this.motionX *= 0.800000011920929D;
                      this.motionY *= 0.0D;
                      this.motionZ *= 0.800000011920929D;
-                     this.motionX += this.pushX * var48;
-                     this.motionZ += this.pushZ * var48;
+                     this.motionX += this.pushX * var56;
+                     this.motionZ += this.pushZ * var56;
                   } else {
                      this.motionX *= 0.8999999761581421D;
                      this.motionY *= 0.0D;
@@ -404,35 +477,39 @@
                this.motionX *= 0.9599999785423279D;
                this.motionY *= 0.0D;
                this.motionZ *= 0.9599999785423279D;
+            } else {
+               this.motionX *= 0.996999979019165D;
+               this.motionY *= 0.0D;
+               this.motionZ *= 0.996999979019165D;
             }
 
-            Vec3 var50 = this.func_70489_a(this.posX, this.posY, this.posZ);
-            if(var50 != null && var17 != null) {
-               double var51 = (var17.yCoord - var50.yCoord) * 0.05D;
-               var30 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-               if(var30 > 0.0D) {
-                  this.motionX = this.motionX / var30 * (var30 + var51);
-                  this.motionZ = this.motionZ / var30 * (var30 + var51);
+            Vec3 var58 = this.func_70489_a(this.posX, this.posY, this.posZ);
+            if(var58 != null && var25 != null) {
+               double var59 = (var25.yCoord - var58.yCoord) * 0.05D;
+               var38 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+               if(var38 > 0.0D) {
+                  this.motionX = this.motionX / var38 * (var38 + var59);
+                  this.motionZ = this.motionZ / var38 * (var38 + var59);
                }
 
-               this.setPosition(this.posX, var50.yCoord, this.posZ);
+               this.setPosition(this.posX, var58.yCoord, this.posZ);
             }
 
-            int var53 = MathHelper.floor_double(this.posX);
-            int var54 = MathHelper.floor_double(this.posZ);
-            if(var53 != var9 || var54 != var11) {
-               var30 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-               this.motionX = var30 * (double)(var53 - var9);
-               this.motionZ = var30 * (double)(var54 - var11);
+            int var61 = MathHelper.floor_double(this.posX);
+            int var62 = MathHelper.floor_double(this.posZ);
+            if(var61 != var17 || var62 != var19) {
+               var38 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+               this.motionX = var38 * (double)(var61 - var17);
+               this.motionZ = var38 * (double)(var62 - var19);
             }
 
-            double var55;
+            double var63;
             if(this.minecartType == 2) {
-               var55 = this.pushX * this.pushX + this.pushZ * this.pushZ;
-               if(var55 > 1.0E-4D && this.motionX * this.motionX + this.motionZ * this.motionZ > 0.0010D) {
-                  var55 = (double)MathHelper.sqrt_double(var55);
-                  this.pushX /= var55;
-                  this.pushZ /= var55;
+               var63 = this.pushX * this.pushX + this.pushZ * this.pushZ;
+               if(var63 > 1.0E-4D && this.motionX * this.motionX + this.motionZ * this.motionZ > 0.0010D) {
+                  var63 = (double)MathHelper.sqrt_double(var63);
+                  this.pushX /= var63;
+                  this.pushZ /= var63;
                   if(this.pushX * this.motionX + this.pushZ * this.motionZ < 0.0D) {
                      this.pushX = 0.0D;
                      this.pushZ = 0.0D;
@@ -443,81 +520,90 @@
                }
             }
 
-            if(var19) {
-               var55 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-               if(var55 > 0.01D) {
-                  double var57 = 0.06D;
-                  this.motionX += this.motionX / var55 * var57;
-                  this.motionZ += this.motionZ / var55 * var57;
-               } else if(var18 == 1) {
-                  if(this.worldObj.isBlockNormalCube(var9 - 1, var10, var11)) {
+            if(var27) {
+               var63 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+               if(var63 > 0.01D) {
+                  double var65 = 0.06D;
+                  this.motionX += this.motionX / var63 * var65;
+                  this.motionZ += this.motionZ / var63 * var65;
+               } else if(var26 == 1) {
+                  if(this.worldObj.isBlockNormalCube(var17 - 1, var18, var19)) {
                      this.motionX = 0.02D;
-                  } else if(this.worldObj.isBlockNormalCube(var9 + 1, var10, var11)) {
+                  } else if(this.worldObj.isBlockNormalCube(var17 + 1, var18, var19)) {
                      this.motionX = -0.02D;
                   }
-               } else if(var18 == 0) {
-                  if(this.worldObj.isBlockNormalCube(var9, var10, var11 - 1)) {
+               } else if(var26 == 0) {
+                  if(this.worldObj.isBlockNormalCube(var17, var18, var19 - 1)) {
                      this.motionZ = 0.02D;
-                  } else if(this.worldObj.isBlockNormalCube(var9, var10, var11 + 1)) {
+                  } else if(this.worldObj.isBlockNormalCube(var17, var18, var19 + 1)) {
                      this.motionZ = -0.02D;
                   }
                }
             }
          } else {
-            if(this.motionX < -var12) {
-               this.motionX = -var12;
+            if(this.motionX < -var20) {
+               this.motionX = -var20;
             }
 
-            if(this.motionX > var12) {
-               this.motionX = var12;
+            if(this.motionX > var20) {
+               this.motionX = var20;
             }
 
-            if(this.motionZ < -var12) {
-               this.motionZ = -var12;
+            if(this.motionZ < -var20) {
+               this.motionZ = -var20;
             }
 
-            if(this.motionZ > var12) {
-               this.motionZ = var12;
+            if(this.motionZ > var20) {
+               this.motionZ = var20;
             }
 
             if(this.onGround) {
-               this.motionX *= 0.5D;
-               this.motionY *= 0.5D;
-               this.motionZ *= 0.5D;
+               this.motionX *= this.derailedX;
+               this.motionY *= this.derailedY;
+               this.motionZ *= this.derailedZ;
             }
 
             this.moveEntity(this.motionX, this.motionY, this.motionZ);
             if(!this.onGround) {
-               this.motionX *= 0.949999988079071D;
-               this.motionY *= 0.949999988079071D;
-               this.motionZ *= 0.949999988079071D;
+               this.motionX *= this.flyingX;
+               this.motionY *= this.flyingY;
+               this.motionZ *= this.flyingZ;
             }
          }
 
          this.doBlockCollisions();
          this.rotationPitch = 0.0F;
-         double var59 = this.prevPosX - this.posX;
-         double var61 = this.prevPosZ - this.posZ;
-         if(var59 * var59 + var61 * var61 > 0.0010D) {
-            this.rotationYaw = (float)(Math.atan2(var61, var59) * 180.0D / 3.141592653589793D);
+         double var67 = this.prevPosX - this.posX;
+         double var69 = this.prevPosZ - this.posZ;
+         if(var67 * var67 + var69 * var69 > 0.0010D) {
+            this.rotationYaw = (float)(Math.atan2(var69, var67) * 180.0D / 3.141592653589793D);
             if(this.field_70499_f) {
                this.rotationYaw += 180.0F;
             }
          }
 
-         double var63 = (double)MathHelper.wrapAngleTo180_float(this.rotationYaw - this.prevRotationYaw);
-         if(var63 < -170.0D || var63 >= 170.0D) {
+         double var71 = (double)MathHelper.wrapAngleTo180_float(this.rotationYaw - this.prevRotationYaw);
+         if(var71 < -170.0D || var71 >= 170.0D) {
             this.rotationYaw += 180.0F;
             this.field_70499_f = !this.field_70499_f;
          }
 
          this.setRotation(this.rotationYaw, this.rotationPitch);
-         List var65 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand(0.20000000298023224D, 0.0D, 0.20000000298023224D));
-         if(var65 != null && !var65.isEmpty()) {
-            for(int var66 = 0; var66 < var65.size(); ++var66) {
-               Entity var67 = (Entity)var65.get(var66);
-               if(var67 != this.riddenByEntity && var67.canBePushed() && var67 instanceof EntityMinecart) {
-                  var67.applyEntityCollision(this);
+         CraftWorld var73 = this.worldObj.getWorld();
+         Location var74 = new Location(var73, var1, var3, var5, var7, var8);
+         Location var75 = new Location(var73, this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
+         Vehicle var76 = (Vehicle)this.getBukkitEntity();
+         this.worldObj.getServer().getPluginManager().callEvent(new VehicleUpdateEvent(var76));
+         if(!var74.equals(var75)) {
+            this.worldObj.getServer().getPluginManager().callEvent(new VehicleMoveEvent(var76, var74, var75));
+         }
+
+         List var77 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.boundingBox.expand(0.20000000298023224D, 0.0D, 0.20000000298023224D));
+         if(var77 != null && !var77.isEmpty()) {
+            for(int var78 = 0; var78 < var77.size(); ++var78) {
+               Entity var79 = (Entity)var77.get(var78);
+               if(var79 != this.riddenByEntity && var79.canBePushed() && var79 instanceof EntityMinecart) {
+                  var79.applyEntityCollision(this);
                }
             }
          }
@@ -540,6 +626,7 @@
 
          this.setMinecartPowered(this.fuel > 0);
       }
+
    }
 
    public Vec3 func_70489_a(double var1, double var3, double var5) {
@@ -647,74 +734,80 @@
    }
 
    public void applyEntityCollision(Entity var1) {
-      if(!this.worldObj.isRemote) {
-         if(var1 != this.riddenByEntity) {
-            if(var1 instanceof EntityLiving && !(var1 instanceof EntityPlayer) && !(var1 instanceof EntityIronGolem) && this.minecartType == 0 && this.motionX * this.motionX + this.motionZ * this.motionZ > 0.01D && this.riddenByEntity == null && var1.ridingEntity == null) {
-               var1.mountEntity(this);
-            }
-
-            double var2 = var1.posX - this.posX;
-            double var4 = var1.posZ - this.posZ;
-            double var6 = var2 * var2 + var4 * var4;
-            if(var6 >= 9.999999747378752E-5D) {
-               var6 = (double)MathHelper.sqrt_double(var6);
-               var2 /= var6;
-               var4 /= var6;
-               double var8 = 1.0D / var6;
-               if(var8 > 1.0D) {
-                  var8 = 1.0D;
-               }
-
-               var2 *= var8;
-               var4 *= var8;
-               var2 *= 0.10000000149011612D;
-               var4 *= 0.10000000149011612D;
-               var2 *= (double)(1.0F - this.entityCollisionReduction);
-               var4 *= (double)(1.0F - this.entityCollisionReduction);
-               var2 *= 0.5D;
-               var4 *= 0.5D;
-               if(var1 instanceof EntityMinecart) {
-                  double var10 = var1.posX - this.posX;
-                  double var12 = var1.posZ - this.posZ;
-                  Vec3 var14 = this.worldObj.getWorldVec3Pool().getVecFromPool(var10, 0.0D, var12).normalize();
-                  Vec3 var15 = this.worldObj.getWorldVec3Pool().getVecFromPool((double)MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F), 0.0D, (double)MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F)).normalize();
-                  double var16 = Math.abs(var14.dotProduct(var15));
-                  if(var16 < 0.800000011920929D) {
-                     return;
-                  }
+      if(!this.worldObj.isRemote && var1 != this.riddenByEntity) {
+         Vehicle var2 = (Vehicle)this.getBukkitEntity();
+         org.bukkit.entity.Entity var3 = var1 == null?null:var1.getBukkitEntity();
+         VehicleEntityCollisionEvent var4 = new VehicleEntityCollisionEvent(var2, var3);
+         this.worldObj.getServer().getPluginManager().callEvent(var4);
+         if(var4.isCancelled()) {
+            return;
+         }
 
-                  double var18 = var1.motionX + this.motionX;
-                  double var20 = var1.motionZ + this.motionZ;
-                  if(((EntityMinecart)var1).minecartType == 2 && this.minecartType != 2) {
-                     this.motionX *= 0.20000000298023224D;
-                     this.motionZ *= 0.20000000298023224D;
-                     this.addVelocity(var1.motionX - var2, 0.0D, var1.motionZ - var4);
-                     var1.motionX *= 0.949999988079071D;
-                     var1.motionZ *= 0.949999988079071D;
-                  } else if(((EntityMinecart)var1).minecartType != 2 && this.minecartType == 2) {
-                     var1.motionX *= 0.20000000298023224D;
-                     var1.motionZ *= 0.20000000298023224D;
-                     var1.addVelocity(this.motionX + var2, 0.0D, this.motionZ + var4);
-                     this.motionX *= 0.949999988079071D;
-                     this.motionZ *= 0.949999988079071D;
-                  } else {
-                     var18 /= 2.0D;
-                     var20 /= 2.0D;
-                     this.motionX *= 0.20000000298023224D;
-                     this.motionZ *= 0.20000000298023224D;
-                     this.addVelocity(var18 - var2, 0.0D, var20 - var4);
-                     var1.motionX *= 0.20000000298023224D;
-                     var1.motionZ *= 0.20000000298023224D;
-                     var1.addVelocity(var18 + var2, 0.0D, var20 + var4);
-                  }
+         if(var1 instanceof EntityLiving && !(var1 instanceof EntityPlayer) && !(var1 instanceof EntityIronGolem) && this.minecartType == 0 && this.motionX * this.motionX + this.motionZ * this.motionZ > 0.01D && this.riddenByEntity == null && var1.ridingEntity == null) {
+            var1.mountEntity(this);
+         }
+
+         double var5 = var1.posX - this.posX;
+         double var7 = var1.posZ - this.posZ;
+         double var9 = var5 * var5 + var7 * var7;
+         if(var9 >= 9.999999747378752E-5D && !var4.isCollisionCancelled()) {
+            var9 = (double)MathHelper.sqrt_double(var9);
+            var5 /= var9;
+            var7 /= var9;
+            double var11 = 1.0D / var9;
+            if(var11 > 1.0D) {
+               var11 = 1.0D;
+            }
+
+            var5 *= var11;
+            var7 *= var11;
+            var5 *= 0.10000000149011612D;
+            var7 *= 0.10000000149011612D;
+            var5 *= (double)(1.0F - this.entityCollisionReduction);
+            var7 *= (double)(1.0F - this.entityCollisionReduction);
+            var5 *= 0.5D;
+            var7 *= 0.5D;
+            if(var1 instanceof EntityMinecart) {
+               double var13 = var1.posX - this.posX;
+               double var15 = var1.posZ - this.posZ;
+               Vec3 var17 = this.worldObj.getWorldVec3Pool().getVecFromPool(var13, 0.0D, var15).normalize();
+               Vec3 var18 = this.worldObj.getWorldVec3Pool().getVecFromPool((double)MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F), 0.0D, (double)MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F)).normalize();
+               double var19 = Math.abs(var17.dotProduct(var18));
+               if(var19 < 0.800000011920929D) {
+                  return;
+               }
+
+               double var21 = var1.motionX + this.motionX;
+               double var23 = var1.motionZ + this.motionZ;
+               if(((EntityMinecart)var1).minecartType == 2 && this.minecartType != 2) {
+                  this.motionX *= 0.20000000298023224D;
+                  this.motionZ *= 0.20000000298023224D;
+                  this.addVelocity(var1.motionX - var5, 0.0D, var1.motionZ - var7);
+                  var1.motionX *= 0.949999988079071D;
+                  var1.motionZ *= 0.949999988079071D;
+               } else if(((EntityMinecart)var1).minecartType != 2 && this.minecartType == 2) {
+                  var1.motionX *= 0.20000000298023224D;
+                  var1.motionZ *= 0.20000000298023224D;
+                  var1.addVelocity(this.motionX + var5, 0.0D, this.motionZ + var7);
+                  this.motionX *= 0.949999988079071D;
+                  this.motionZ *= 0.949999988079071D;
                } else {
-                  this.addVelocity(-var2, 0.0D, -var4);
-                  var1.addVelocity(var2 / 4.0D, 0.0D, var4 / 4.0D);
+                  var21 /= 2.0D;
+                  var23 /= 2.0D;
+                  this.motionX *= 0.20000000298023224D;
+                  this.motionZ *= 0.20000000298023224D;
+                  this.addVelocity(var21 - var5, 0.0D, var23 - var7);
+                  var1.motionX *= 0.20000000298023224D;
+                  var1.motionZ *= 0.20000000298023224D;
+                  var1.addVelocity(var21 + var5, 0.0D, var23 + var7);
                }
+            } else {
+               this.addVelocity(-var5, 0.0D, -var7);
+               var1.addVelocity(var5 / 4.0D, 0.0D, var7 / 4.0D);
             }
-
          }
       }
+
    }
 
    public int getSizeInventory() {
@@ -768,7 +861,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public void onInventoryChanged() {}
@@ -848,4 +941,24 @@
       return this.dataWatcher.getWatchableObjectInt(18);
    }
 
+   public Vector getFlyingVelocityMod() {
+      return new Vector(this.flyingX, this.flyingY, this.flyingZ);
+   }
+
+   public void setFlyingVelocityMod(Vector var1) {
+      this.flyingX = var1.getX();
+      this.flyingY = var1.getY();
+      this.flyingZ = var1.getZ();
+   }
+
+   public Vector getDerailedVelocityMod() {
+      return new Vector(this.derailedX, this.derailedY, this.derailedZ);
+   }
+
+   public void setDerailedVelocityMod(Vector var1) {
+      this.derailedX = var1.getX();
+      this.derailedY = var1.getY();
+      this.derailedZ = var1.getZ();
+   }
+
 }
Binary files mcp-mcdev/net/minecraft/src/EntityMob.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMob.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityMob.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMob.java
--- mcp-mcdev/net/minecraft/src/EntityMob.java	2012-11-29 21:14:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMob.java	2012-11-29 21:41:29.000000000 -0800
@@ -3,14 +3,23 @@
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.EnchantmentHelper;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityBlaze;
 import net.minecraft.src.EntityCreature;
+import net.minecraft.src.EntityEnderman;
+import net.minecraft.src.EntityGiantZombie;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntitySilverfish;
+import net.minecraft.src.EntitySpider;
 import net.minecraft.src.EnumSkyBlock;
 import net.minecraft.src.IMob;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.Potion;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public abstract class EntityMob extends EntityCreature implements IMob {
 
@@ -45,19 +54,30 @@
    public boolean attackEntityFrom(DamageSource var1, int var2) {
       if(this.func_85032_ar()) {
          return false;
-      } else if(super.attackEntityFrom(var1, var2)) {
+      } else if(!super.attackEntityFrom(var1, var2)) {
+         return false;
+      } else {
          Entity var3 = var1.getEntity();
          if(this.riddenByEntity != var3 && this.ridingEntity != var3) {
             if(var3 != this) {
-               this.entityToAttack = var3;
+               if(var3 != this.entityToAttack && (this instanceof EntityBlaze || this instanceof EntityEnderman || this instanceof EntitySpider || this instanceof EntityGiantZombie || this instanceof EntitySilverfish)) {
+                  EntityTargetEvent var4 = CraftEventFactory.callEntityTargetEvent(this, var3, TargetReason.TARGET_ATTACKED_ENTITY);
+                  if(!var4.isCancelled()) {
+                     if(var4.getTarget() == null) {
+                        this.entityToAttack = null;
+                     } else {
+                        this.entityToAttack = ((CraftEntity)var4.getTarget()).getHandle();
+                     }
+                  }
+               } else {
+                  this.entityToAttack = var3;
+               }
             }
 
             return true;
          } else {
             return true;
          }
-      } else {
-         return false;
       }
    }
 
Binary files mcp-mcdev/net/minecraft/src/EntityMooshroom.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMooshroom.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityMooshroom.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMooshroom.java
--- mcp-mcdev/net/minecraft/src/EntityMooshroom.java	2012-11-29 21:14:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMooshroom.java	2012-11-29 21:41:29.000000000 -0800
@@ -8,6 +8,8 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerShearEntityEvent;
 
 public class EntityMooshroom extends EntityCow {
 
@@ -32,21 +34,27 @@
       }
 
       if(var2 != null && var2.itemID == Item.shears.shiftedIndex && this.getGrowingAge() >= 0) {
-         this.setDead();
-         this.worldObj.spawnParticle("largeexplode", this.posX, this.posY + (double)(this.height / 2.0F), this.posZ, 0.0D, 0.0D, 0.0D);
-         if(!this.worldObj.isRemote) {
-            EntityCow var3 = new EntityCow(this.worldObj);
-            var3.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
-            var3.setEntityHealth(this.getHealth());
-            var3.renderYawOffset = this.renderYawOffset;
-            this.worldObj.spawnEntityInWorld(var3);
+         PlayerShearEntityEvent var3 = new PlayerShearEntityEvent((Player)var1.getBukkitEntity(), this.getBukkitEntity());
+         this.worldObj.getServer().getPluginManager().callEvent(var3);
+         if(var3.isCancelled()) {
+            return false;
+         } else {
+            this.setDead();
+            this.worldObj.spawnParticle("largeexplode", this.posX, this.posY + (double)(this.height / 2.0F), this.posZ, 0.0D, 0.0D, 0.0D);
+            if(!this.worldObj.isRemote) {
+               EntityCow var4 = new EntityCow(this.worldObj);
+               var4.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
+               var4.setEntityHealth(this.getHealth());
+               var4.renderYawOffset = this.renderYawOffset;
+               this.worldObj.spawnEntityInWorld(var4);
 
-            for(int var4 = 0; var4 < 5; ++var4) {
-               this.worldObj.spawnEntityInWorld(new EntityItem(this.worldObj, this.posX, this.posY + (double)this.height, this.posZ, new ItemStack(Block.mushroomRed)));
+               for(int var5 = 0; var5 < 5; ++var5) {
+                  this.worldObj.spawnEntityInWorld(new EntityItem(this.worldObj, this.posX, this.posY + (double)this.height, this.posZ, new ItemStack(Block.mushroomRed)));
+               }
             }
-         }
 
-         return true;
+            return true;
+         }
       } else {
          return super.interact(var1);
       }
@@ -56,12 +64,10 @@
       return new EntityMooshroom(this.worldObj);
    }
 
-   // $FF: synthetic method
    public EntityCow spawnBabyAnimal(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntityMoveHelper.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMoveHelper.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityMoveHelper.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMoveHelper.java
--- mcp-mcdev/net/minecraft/src/EntityMoveHelper.java	2012-11-29 21:14:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityMoveHelper.java	2012-11-29 21:41:29.000000000 -0800
@@ -2,6 +2,7 @@
 
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.MathHelper;
+import org.bukkit.craftbukkit.TrigMath;
 
 public class EntityMoveHelper {
 
@@ -46,15 +47,15 @@
          double var6 = this.posY - (double)var1;
          double var8 = var2 * var2 + var6 * var6 + var4 * var4;
          if(var8 >= 2.500000277905201E-7D) {
-            float var10 = (float)(Math.atan2(var4, var2) * 180.0D / 3.1415927410125732D) - 90.0F;
+            float var10 = (float)(TrigMath.atan2(var4, var2) * 180.0D / 3.1415927410125732D) - 90.0F;
             this.entity.rotationYaw = this.func_75639_a(this.entity.rotationYaw, var10, 30.0F);
             this.entity.setAIMoveSpeed(this.speed * this.entity.getSpeedModifier());
             if(var6 > 0.0D && var2 * var2 + var4 * var4 < 1.0D) {
                this.entity.getJumpHelper().setJumping();
             }
-
          }
       }
+
    }
 
    private float func_75639_a(float var1, float var2, float var3) {
Binary files mcp-mcdev/net/minecraft/src/EntityOcelot.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityOcelot.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityOcelot.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityOcelot.java
--- mcp-mcdev/net/minecraft/src/EntityOcelot.java	2012-11-29 21:14:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityOcelot.java	2012-11-29 21:41:29.000000000 -0800
@@ -24,6 +24,7 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityOcelot extends EntityTameable {
 
@@ -131,7 +132,9 @@
       }
    }
 
-   protected void dropFewItems(boolean var1, int var2) {}
+   protected void dropFewItems(boolean var1, int var2) {
+      CraftEventFactory.callEntityDeathEvent(this);
+   }
 
    public boolean interact(EntityPlayer var1) {
       ItemStack var2 = var1.inventory.getCurrentItem();
@@ -149,7 +152,7 @@
          }
 
          if(!this.worldObj.isRemote) {
-            if(this.rand.nextInt(3) == 0) {
+            if(this.rand.nextInt(3) == 0 && !CraftEventFactory.callEntityTameEvent(this, var1).isCancelled()) {
                this.setTamed(true);
                this.setTameSkin(1 + this.worldObj.rand.nextInt(3));
                this.setOwner(var1.username);
@@ -242,7 +245,6 @@
 
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntityPainting.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPainting.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityPainting.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPainting.java
--- mcp-mcdev/net/minecraft/src/EntityPainting.java	2012-11-29 21:14:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPainting.java	2012-11-29 21:41:29.000000000 -0800
@@ -15,6 +15,7 @@
 
    public EntityPainting(World var1) {
       super(var1);
+      this.art = EnumArt.values()[this.rand.nextInt(EnumArt.values().length)];
    }
 
    public EntityPainting(World var1, int var2, int var3, int var4, int var5) {
Binary files mcp-mcdev/net/minecraft/src/EntityPig.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPig.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityPig.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPig.java
--- mcp-mcdev/net/minecraft/src/EntityPig.java	2012-11-29 21:14:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPig.java	2012-11-29 21:41:29.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.AchievementList;
 import net.minecraft.src.EntityAIControlledByPlayer;
 import net.minecraft.src.EntityAIFollowParent;
@@ -19,6 +20,8 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class EntityPig extends EntityAnimal {
 
@@ -107,20 +110,21 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(3) + 1 + this.rand.nextInt(1 + var2);
-
-      for(int var4 = 0; var4 < var3; ++var4) {
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3) + 1 + this.rand.nextInt(1 + var2);
+      if(var4 > 0) {
          if(this.isBurning()) {
-            this.dropItem(Item.porkCooked.shiftedIndex, 1);
+            var3.add(new org.bukkit.inventory.ItemStack(Item.porkCooked.shiftedIndex, var4));
          } else {
-            this.dropItem(Item.porkRaw.shiftedIndex, 1);
+            var3.add(new org.bukkit.inventory.ItemStack(Item.porkRaw.shiftedIndex, var4));
          }
       }
 
       if(this.getSaddled()) {
-         this.dropItem(Item.saddle.shiftedIndex, 1);
+         var3.add(new org.bukkit.inventory.ItemStack(Item.saddle.shiftedIndex, 1));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public boolean getSaddled() {
@@ -139,10 +143,15 @@
    public void onStruckByLightning(EntityLightningBolt var1) {
       if(!this.worldObj.isRemote) {
          EntityPigZombie var2 = new EntityPigZombie(this.worldObj);
+         if(CraftEventFactory.callPigZapEvent(this, var1, var2).isCancelled()) {
+            return;
+         }
+
          var2.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
-         this.worldObj.spawnEntityInWorld(var2);
+         this.worldObj.addEntity(var2, SpawnReason.LIGHTNING);
          this.setDead();
       }
+
    }
 
    protected void fall(float var1) {
@@ -165,7 +174,6 @@
       return this.aiControlledByPlayer;
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntityPigZombie.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPigZombie.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityPigZombie.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPigZombie.java
--- mcp-mcdev/net/minecraft/src/EntityPigZombie.java	2012-11-29 21:14:57.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPigZombie.java	2012-11-29 21:41:29.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.List;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.Entity;
@@ -9,10 +10,15 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EntityPigZombie extends EntityZombie {
 
-   private int angerLevel = 0;
+   public int angerLevel = 0;
    private int randomSoundDelay = 0;
 
 
@@ -78,9 +84,19 @@
    }
 
    private void becomeAngryAt(Entity var1) {
-      this.entityToAttack = var1;
-      this.angerLevel = 400 + this.rand.nextInt(400);
-      this.randomSoundDelay = this.rand.nextInt(40);
+      org.bukkit.entity.Entity var2 = var1 == null?null:var1.getBukkitEntity();
+      EntityTargetEvent var3 = new EntityTargetEvent(this.getBukkitEntity(), var2, TargetReason.PIG_ZOMBIE_TARGET);
+      this.worldObj.getServer().getPluginManager().callEvent(var3);
+      if(!var3.isCancelled()) {
+         if(var3.getTarget() == null) {
+            this.entityToAttack = null;
+         } else {
+            var1 = ((CraftEntity)var3.getTarget()).getHandle();
+            this.entityToAttack = var1;
+            this.angerLevel = 400 + this.rand.nextInt(400);
+            this.randomSoundDelay = this.rand.nextInt(40);
+         }
+      }
    }
 
    protected String getLivingSound() {
@@ -96,27 +112,36 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(2 + var2);
-
-      int var4;
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.rottenFlesh.shiftedIndex, 1);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(2 + var2);
+      if(var4 > 0) {
+         var3.add(new CraftItemStack(Item.rottenFlesh.shiftedIndex, var4));
       }
 
-      var3 = this.rand.nextInt(2 + var2);
+      var4 = this.rand.nextInt(2 + var2);
+      if(var4 > 0) {
+         var3.add(new CraftItemStack(Item.goldNugget.shiftedIndex, var4));
+      }
 
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.goldNugget.shiftedIndex, 1);
+      if(this.recentlyHit > 0) {
+         int var5 = this.rand.nextInt(200) - var2;
+         if(var5 < 5) {
+            ItemStack var6 = this.l(var5 <= 0?1:0);
+            if(var6 != null) {
+               var3.add(new CraftItemStack(var6));
+            }
+         }
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public boolean interact(EntityPlayer var1) {
       return false;
    }
 
-   protected void dropRareDrop(int var1) {
-      this.dropItem(Item.ingotGold.shiftedIndex, 1);
+   protected ItemStack l(int var1) {
+      return new ItemStack(Item.ingotGold.shiftedIndex, 1, 0);
    }
 
    protected int getDropItemId() {
Binary files mcp-mcdev/net/minecraft/src/EntityPlayer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPlayer.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityPlayer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPlayer.java
--- mcp-mcdev/net/minecraft/src/EntityPlayer.java	2012-11-29 21:14:57.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPlayer.java	2012-11-29 21:41:29.000000000 -0800
@@ -52,6 +52,16 @@
 import net.minecraft.src.TileEntityFurnace;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.TrigMath;
+import org.bukkit.craftbukkit.entity.CraftItem;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+import org.bukkit.event.player.PlayerBedEnterEvent;
+import org.bukkit.event.player.PlayerBedLeaveEvent;
+import org.bukkit.event.player.PlayerDropItemEvent;
 
 public abstract class EntityPlayer extends EntityLiving implements ICommandSender {
 
@@ -72,15 +82,18 @@
    public double field_71094_bP;
    public double field_71095_bQ;
    public double field_71085_bR;
-   protected boolean sleeping;
+   public boolean sleeping;
+   public boolean fauxSleeping;
+   public String spawnWorld = "";
    public ChunkCoordinates playerLocation;
-   private int sleepTimer;
+   public int sleepTimer;
    public float field_71079_bU;
    public float field_71089_bV;
    private ChunkCoordinates spawnChunk;
    private boolean spawnForced;
    private ChunkCoordinates startMinecartRidingCoordinate;
    public PlayerCapabilities capabilities = new PlayerCapabilities();
+   public int oldLevel = -1;
    public int experienceLevel;
    public int experienceTotal;
    public float experience;
@@ -92,6 +105,10 @@
    public EntityFishHook fishEntity = null;
 
 
+   public HumanEntity getBukkitEntity() {
+      return (HumanEntity)super.getBukkitEntity();
+   }
+
    public EntityPlayer(World var1) {
       super(var1);
       this.inventoryContainer = new ContainerPlayer(this.inventory, !var1.isRemote, this);
@@ -291,7 +308,7 @@
       return this.getHealth() <= 0 || this.isPlayerSleeping();
    }
 
-   protected void closeScreen() {
+   public void closeScreen() {
       this.openContainer = this.inventoryContainer;
    }
 
@@ -323,7 +340,7 @@
       }
 
       if(this.worldObj.difficultySetting == 0 && this.getHealth() < this.getMaxHealth() && this.ticksExisted % 20 * 12 == 0) {
-         this.heal(1);
+         this.heal(1, RegainReason.REGEN);
       }
 
       this.inventory.decrementAnimations();
@@ -337,7 +354,7 @@
       }
 
       float var1 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
-      float var2 = (float)Math.atan(-this.motionY * 0.20000000298023224D) * 15.0F;
+      float var2 = (float)TrigMath.atan(-this.motionY * 0.20000000298023224D) * 15.0F;
       if(var1 > 0.1F) {
          var1 = 0.1F;
       }
@@ -452,9 +469,18 @@
             var3.motionZ += Math.sin((double)var5) * (double)var4;
          }
 
-         this.joinEntityItemWithWorld(var3);
-         this.addStat(StatList.dropStat, 1);
-         return var3;
+         Player var9 = (Player)this.getBukkitEntity();
+         CraftItem var7 = new CraftItem(this.worldObj.getServer(), var3);
+         PlayerDropItemEvent var8 = new PlayerDropItemEvent(var9, var7);
+         this.worldObj.getServer().getPluginManager().callEvent(var8);
+         if(var8.isCancelled()) {
+            var9.getInventory().addItem(new org.bukkit.inventory.ItemStack[]{var7.getItemStack()});
+            return null;
+         } else {
+            this.joinEntityItemWithWorld(var3);
+            this.addStat(StatList.dropStat, 1);
+            return var3;
+         }
       }
    }
 
@@ -507,6 +533,11 @@
          this.wakeUpPlayer(true, true, false);
       }
 
+      this.spawnWorld = var1.getString("SpawnWorld");
+      if("".equals(this.spawnWorld)) {
+         this.spawnWorld = ((org.bukkit.World)this.worldObj.getServer().getWorlds().get(0)).getName();
+      }
+
       if(var1.hasKey("SpawnX") && var1.hasKey("SpawnY") && var1.hasKey("SpawnZ")) {
          this.spawnChunk = new ChunkCoordinates(var1.getInteger("SpawnX"), var1.getInteger("SpawnY"), var1.getInteger("SpawnZ"));
          this.spawnForced = var1.getBoolean("SpawnForced");
@@ -535,6 +566,7 @@
          var1.setInteger("SpawnY", this.spawnChunk.posY);
          var1.setInteger("SpawnZ", this.spawnChunk.posZ);
          var1.setBoolean("SpawnForced", this.spawnForced);
+         var1.setString("SpawnWorld", this.spawnWorld);
       }
 
       this.foodStats.writeNBT(var1);
@@ -574,7 +606,7 @@
 
             if(var1.func_76350_n()) {
                if(this.worldObj.difficultySetting == 0) {
-                  var2 = 0;
+                  return false;
                }
 
                if(this.worldObj.difficultySetting == 1) {
@@ -586,21 +618,17 @@
                }
             }
 
-            if(var2 == 0) {
-               return false;
-            } else {
-               Entity var3 = var1.getEntity();
-               if(var3 instanceof EntityArrow && ((EntityArrow)var3).shootingEntity != null) {
-                  var3 = ((EntityArrow)var3).shootingEntity;
-               }
-
-               if(var3 instanceof EntityLiving) {
-                  this.alertWolves((EntityLiving)var3, false);
-               }
+            Entity var3 = var1.getEntity();
+            if(var3 instanceof EntityArrow && ((EntityArrow)var3).shootingEntity != null) {
+               var3 = ((EntityArrow)var3).shootingEntity;
+            }
 
-               this.addStat(StatList.damageTakenStat, var2);
-               return super.attackEntityFrom(var1, var2);
+            if(var3 instanceof EntityLiving) {
+               this.alertWolves((EntityLiving)var3, false);
             }
+
+            this.addStat(StatList.damageTakenStat, var2);
+            return super.attackEntityFrom(var1, var2);
          }
       }
    }
@@ -650,9 +678,9 @@
                   var5.setTarget(var1);
                }
             }
-
          }
       }
+
    }
 
    protected void damageArmor(int var1) {
@@ -689,6 +717,7 @@
          this.addExhaustion(var1.getHungerDamage());
          this.health -= var2;
       }
+
    }
 
    public void displayGUIFurnace(TileEntityFurnace var1) {}
@@ -716,7 +745,7 @@
             }
 
             if(var2.interactWith((EntityLiving)var1)) {
-               if(var2.stackSize <= 0 && !this.capabilities.isCreativeMode) {
+               if(var2.stackSize == 0 && !this.capabilities.isCreativeMode) {
                   this.destroyCurrentEquippedItem();
                }
 
@@ -741,92 +770,102 @@
    }
 
    public void attackTargetEntityWithCurrentItem(Entity var1) {
-      if(var1.canAttackWithItem()) {
-         if(!var1.func_85031_j(this)) {
-            int var2 = this.inventory.getDamageVsEntity(var1);
-            if(this.isPotionActive(Potion.damageBoost)) {
-               var2 += 3 << this.getActivePotionEffect(Potion.damageBoost).getAmplifier();
-            }
+      if(var1.canAttackWithItem() && !var1.func_85031_j(this)) {
+         int var2 = this.inventory.getDamageVsEntity(var1);
+         if(this.isPotionActive(Potion.damageBoost)) {
+            var2 += 3 << this.getActivePotionEffect(Potion.damageBoost).getAmplifier();
+         }
 
-            if(this.isPotionActive(Potion.weakness)) {
-               var2 -= 2 << this.getActivePotionEffect(Potion.weakness).getAmplifier();
-            }
+         if(this.isPotionActive(Potion.weakness)) {
+            var2 -= 2 << this.getActivePotionEffect(Potion.weakness).getAmplifier();
+         }
 
-            int var3 = 0;
-            int var4 = 0;
-            if(var1 instanceof EntityLiving) {
-               var4 = EnchantmentHelper.getEnchantmentModifierLiving(this, (EntityLiving)var1);
-               var3 += EnchantmentHelper.getKnockbackModifier(this, (EntityLiving)var1);
+         int var3 = 0;
+         int var4 = 0;
+         if(var1 instanceof EntityLiving) {
+            var4 = EnchantmentHelper.getEnchantmentModifierLiving(this, (EntityLiving)var1);
+            var3 += EnchantmentHelper.getKnockbackModifier(this, (EntityLiving)var1);
+         }
+
+         if(this.isSprinting()) {
+            ++var3;
+         }
+
+         if(var2 > 0 || var4 > 0) {
+            boolean var5 = this.fallDistance > 0.0F && !this.onGround && !this.isOnLadder() && !this.isInWater() && !this.isPotionActive(Potion.blindness) && this.ridingEntity == null && var1 instanceof EntityLiving;
+            if(var5) {
+               var2 += this.rand.nextInt(var2 / 2 + 2);
             }
 
-            if(this.isSprinting()) {
-               ++var3;
+            var2 += var4;
+            boolean var6 = false;
+            int var7 = EnchantmentHelper.func_90036_a(this);
+            if(var1 instanceof EntityLiving && var7 > 0 && !var1.isBurning()) {
+               var6 = true;
+               var1.setFire(1);
             }
 
-            if(var2 > 0 || var4 > 0) {
-               boolean var5 = this.fallDistance > 0.0F && !this.onGround && !this.isOnLadder() && !this.isInWater() && !this.isPotionActive(Potion.blindness) && this.ridingEntity == null && var1 instanceof EntityLiving;
-               if(var5) {
-                  var2 += this.rand.nextInt(var2 / 2 + 2);
+            boolean var8 = var1.attackEntityFrom(DamageSource.causePlayerDamage(this), var2);
+            if(!var8) {
+               if(var6) {
+                  var1.extinguish();
                }
 
-               var2 += var4;
-               boolean var6 = false;
-               int var7 = EnchantmentHelper.func_90036_a(this);
-               if(var1 instanceof EntityLiving && var7 > 0 && !var1.isBurning()) {
-                  var6 = true;
-                  var1.setFire(1);
+               return;
+            }
+
+            if(var8) {
+               if(var3 > 0) {
+                  var1.addVelocity((double)(-MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F) * (float)var3 * 0.5F), 0.1D, (double)(MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F) * (float)var3 * 0.5F));
+                  this.motionX *= 0.6D;
+                  this.motionZ *= 0.6D;
+                  this.setSprinting(false);
                }
 
-               boolean var8 = var1.attackEntityFrom(DamageSource.causePlayerDamage(this), var2);
-               if(var8) {
-                  if(var3 > 0) {
-                     var1.addVelocity((double)(-MathHelper.sin(this.rotationYaw * 3.1415927F / 180.0F) * (float)var3 * 0.5F), 0.1D, (double)(MathHelper.cos(this.rotationYaw * 3.1415927F / 180.0F) * (float)var3 * 0.5F));
-                     this.motionX *= 0.6D;
-                     this.motionZ *= 0.6D;
-                     this.setSprinting(false);
-                  }
+               if(var5) {
+                  this.onCriticalHit(var1);
+               }
 
-                  if(var5) {
-                     this.onCriticalHit(var1);
-                  }
+               if(var4 > 0) {
+                  this.onEnchantmentCritical(var1);
+               }
 
-                  if(var4 > 0) {
-                     this.onEnchantmentCritical(var1);
-                  }
+               if(var2 >= 18) {
+                  this.triggerAchievement(AchievementList.overkill);
+               }
 
-                  if(var2 >= 18) {
-                     this.triggerAchievement(AchievementList.overkill);
-                  }
+               this.setLastAttackingEntity(var1);
+            }
 
-                  this.setLastAttackingEntity(var1);
+            ItemStack var9 = this.getCurrentEquippedItem();
+            if(var9 != null && var1 instanceof EntityLiving) {
+               var9.hitEntity((EntityLiving)var1, this);
+               if(var9.stackSize == 0) {
+                  this.destroyCurrentEquippedItem();
                }
+            }
 
-               ItemStack var9 = this.getCurrentEquippedItem();
-               if(var9 != null && var1 instanceof EntityLiving) {
-                  var9.hitEntity((EntityLiving)var1, this);
-                  if(var9.stackSize <= 0) {
-                     this.destroyCurrentEquippedItem();
-                  }
+            if(var1 instanceof EntityLiving) {
+               if(var1.isEntityAlive()) {
+                  this.alertWolves((EntityLiving)var1, true);
                }
 
-               if(var1 instanceof EntityLiving) {
-                  if(var1.isEntityAlive()) {
-                     this.alertWolves((EntityLiving)var1, true);
-                  }
-
-                  this.addStat(StatList.damageDealtStat, var2);
-                  if(var7 > 0 && var8) {
-                     var1.setFire(var7 * 4);
-                  } else if(var6) {
-                     var1.extinguish();
+               this.addStat(StatList.damageDealtStat, var2);
+               if(var7 > 0 && var8) {
+                  EntityCombustByEntityEvent var10 = new EntityCombustByEntityEvent(this.getBukkitEntity(), var1.getBukkitEntity(), var7 * 4);
+                  Bukkit.getPluginManager().callEvent(var10);
+                  if(!var10.isCancelled()) {
+                     var1.setFire(var10.getDuration());
                   }
+               } else if(var6) {
+                  var1.extinguish();
                }
-
-               this.addExhaustion(0.3F);
             }
 
+            this.addExhaustion(0.3F);
          }
       }
+
    }
 
    public void onCriticalHit(Entity var1) {}
@@ -876,29 +915,39 @@
          }
       }
 
+      if(this.getBukkitEntity() instanceof Player) {
+         Player var9 = (Player)this.getBukkitEntity();
+         org.bukkit.block.Block var10 = this.worldObj.getWorld().getBlockAt(var1, var2, var3);
+         PlayerBedEnterEvent var11 = new PlayerBedEnterEvent(var9, var10);
+         this.worldObj.getServer().getPluginManager().callEvent(var11);
+         if(var11.isCancelled()) {
+            return EnumStatus.OTHER_PROBLEM;
+         }
+      }
+
       this.setSize(0.2F, 0.2F);
       this.yOffset = 0.2F;
       if(this.worldObj.blockExists(var1, var2, var3)) {
-         int var9 = this.worldObj.getBlockMetadata(var1, var2, var3);
-         int var10 = BlockBed.getDirection(var9);
-         float var11 = 0.5F;
+         int var13 = this.worldObj.getBlockMetadata(var1, var2, var3);
+         int var15 = BlockBed.getDirection(var13);
+         float var14 = 0.5F;
          float var12 = 0.5F;
-         switch(var10) {
+         switch(var15) {
          case 0:
             var12 = 0.9F;
             break;
          case 1:
-            var11 = 0.1F;
+            var14 = 0.1F;
             break;
          case 2:
             var12 = 0.1F;
             break;
          case 3:
-            var11 = 0.9F;
+            var14 = 0.9F;
          }
 
-         this.func_71013_b(var10);
-         this.setPosition((double)((float)var1 + var11), (double)((float)var2 + 0.9375F), (double)((float)var3 + var12));
+         this.func_71013_b(var15);
+         this.setPosition((double)((float)var1 + var14), (double)((float)var2 + 0.9375F), (double)((float)var3 + var12));
       } else {
          this.setPosition((double)((float)var1 + 0.5F), (double)((float)var2 + 0.9375F), (double)((float)var3 + 0.5F));
       }
@@ -953,6 +1002,19 @@
          this.worldObj.updateAllPlayersSleepingFlag();
       }
 
+      if(this.getBukkitEntity() instanceof Player) {
+         Player var6 = (Player)this.getBukkitEntity();
+         org.bukkit.block.Block var7;
+         if(var4 != null) {
+            var7 = this.worldObj.getWorld().getBlockAt(var4.posX, var4.posY, var4.posZ);
+         } else {
+            var7 = this.worldObj.getWorld().getBlockAt(var6.getLocation());
+         }
+
+         PlayerBedLeaveEvent var8 = new PlayerBedLeaveEvent(var6, var7);
+         this.worldObj.getServer().getPluginManager().callEvent(var8);
+      }
+
       if(var1) {
          this.sleepTimer = 0;
       } else {
@@ -1019,6 +1081,7 @@
       if(var1 != null) {
          this.spawnChunk = new ChunkCoordinates(var1);
          this.spawnForced = var2;
+         this.spawnWorld = this.worldObj.worldInfo.getWorldName();
       } else {
          this.spawnChunk = null;
          this.spawnForced = false;
@@ -1096,8 +1159,8 @@
                this.addStat(StatList.distanceFlownStat, var7);
             }
          }
-
       }
+
    }
 
    private void addMountedMovementStat(double var1, double var3, double var5) {
@@ -1129,6 +1192,7 @@
 
          super.fall(var1);
       }
+
    }
 
    public void onKillEntity(EntityLiving var1) {
@@ -1188,12 +1252,10 @@
    }
 
    public void addExhaustion(float var1) {
-      if(!this.capabilities.disableDamage) {
-         if(!this.worldObj.isRemote) {
-            this.foodStats.addExhaustion(var1);
-         }
-
+      if(!this.capabilities.disableDamage && !this.worldObj.isRemote) {
+         this.foodStats.addExhaustion(var1);
       }
+
    }
 
    public FoodStats getFoodStats() {
@@ -1215,8 +1277,8 @@
          if(!this.worldObj.isRemote) {
             this.setEating(true);
          }
-
       }
+
    }
 
    public boolean canCurrentToolHarvestBlock(int var1, int var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/EntityPlayerMP.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPlayerMP.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityPlayerMP.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPlayerMP.java
--- mcp-mcdev/net/minecraft/src/EntityPlayerMP.java	2012-11-29 21:14:56.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPlayerMP.java	2012-11-29 21:41:27.000000000 -0800
@@ -4,6 +4,7 @@
 import java.io.DataOutputStream;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.EnumSet;
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
@@ -30,6 +31,7 @@
 import net.minecraft.src.EnumAction;
 import net.minecraft.src.EnumGameType;
 import net.minecraft.src.EnumStatus;
+import net.minecraft.src.FoodStats;
 import net.minecraft.src.ICrafting;
 import net.minecraft.src.IInventory;
 import net.minecraft.src.IMerchant;
@@ -75,6 +77,14 @@
 import net.minecraft.src.TileEntityFurnace;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldServer;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.entity.PlayerDeathEvent;
+import org.bukkit.event.inventory.InventoryType;
 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting {
 
@@ -89,8 +99,8 @@
    private int lastHealth = -99999999;
    private int lastFoodLevel = -99999999;
    private boolean wasHungry = true;
-   private int lastExperience = -99999999;
-   private int ticksOfInvuln = 60;
+   public int lastExperience = -99999999;
+   public int ticksOfInvuln = 60;
    private int renderDistance = 0;
    private int chatVisibility = 0;
    private boolean chatColours = true;
@@ -98,6 +108,15 @@
    public boolean isChangingQuantityOnly;
    public int ping;
    public boolean playerConqueredTheEnd = false;
+   public String displayName;
+   public String listName;
+   public Location compassTarget;
+   public int newExp = 0;
+   public int newLevel = 0;
+   public int newTotalExp = 0;
+   public boolean keepLevel = false;
+   public long timeOffset = 0L;
+   public boolean relativeTime = true;
 
 
    public EntityPlayerMP(MinecraftServer var1, World var2, String var3, ItemInWorldManager var4) {
@@ -121,6 +140,8 @@
       this.stepHeight = 0.0F;
       this.username = var3;
       this.yOffset = 0.0F;
+      this.displayName = this.username;
+      this.listName = this.username;
    }
 
    public void readEntityFromNBT(NBTTagCompound var1) {
@@ -129,11 +150,39 @@
          this.theItemInWorldManager.setGameType(EnumGameType.getByID(var1.getInteger("playerGameType")));
       }
 
+      this.getBukkitEntity().readExtraData(var1);
    }
 
    public void writeEntityToNBT(NBTTagCompound var1) {
       super.writeEntityToNBT(var1);
       var1.setInteger("playerGameType", this.theItemInWorldManager.getGameType().getID());
+      this.getBukkitEntity().setExtraData(var1);
+   }
+
+   public void spawnIn(World var1) {
+      super.setWorld((World)var1);
+      if(var1 == null) {
+         this.isDead = false;
+         ChunkCoordinates var2 = null;
+         if(this.spawnWorld != null && !this.spawnWorld.equals("")) {
+            CraftWorld var3 = (CraftWorld)Bukkit.getServer().getWorld(this.spawnWorld);
+            if(var3 != null && this.getBedLocation() != null) {
+               var1 = var3.getHandle();
+               var2 = EntityPlayer.verifyRespawnCoordinates(var3.getHandle(), this.getBedLocation(), false);
+            }
+         }
+
+         if(var1 == null || var2 == null) {
+            var1 = ((CraftWorld)Bukkit.getServer().getWorlds().get(0)).getHandle();
+            var2 = ((World)var1).getSpawnPoint();
+         }
+
+         this.worldObj = (World)var1;
+         this.setPosition((double)var2.posX + 0.5D, (double)var2.posY, (double)var2.posZ + 0.5D);
+      }
+
+      this.dimension = ((WorldServer)this.worldObj).dimension;
+      this.theItemInWorldManager.setWorld((WorldServer)var1);
    }
 
    public void addExperienceLevel(int var1) {
@@ -231,25 +280,67 @@
          this.playerNetServerHandler.sendPacket(new Packet43Experience(this.experience, this.experienceTotal, this.experienceLevel));
       }
 
+      if(this.oldLevel == -1) {
+         this.oldLevel = this.experienceLevel;
+      }
+
+      if(this.oldLevel != this.experienceLevel) {
+         CraftEventFactory.callPlayerLevelChangeEvent(this.worldObj.getServer().getPlayer(this), this.oldLevel, this.experienceLevel);
+         this.oldLevel = this.experienceLevel;
+      }
+
    }
 
    public void onDeath(DamageSource var1) {
-      this.mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat(var1.getDeathMessage(this)));
-      if(!this.worldObj.getGameRules().getGameRuleBooleanValue("keepInventory")) {
-         this.inventory.dropAllItems();
-      }
+      if(!this.isDead) {
+         ArrayList var2 = new ArrayList();
+         boolean var3 = this.worldObj.getGameRules().getGameRuleBooleanValue("keepInventory");
+         if(!var3) {
+            int var4;
+            for(var4 = 0; var4 < this.inventory.mainInventory.length; ++var4) {
+               if(this.inventory.mainInventory[var4] != null) {
+                  var2.add(new CraftItemStack(this.inventory.mainInventory[var4]));
+               }
+            }
+
+            for(var4 = 0; var4 < this.inventory.armorInventory.length; ++var4) {
+               if(this.inventory.armorInventory[var4] != null) {
+                  var2.add(new CraftItemStack(this.inventory.armorInventory[var4]));
+               }
+            }
+         }
+
+         PlayerDeathEvent var7 = CraftEventFactory.callPlayerDeathEvent(this, var2, var1.getDeathMessage(this));
+         String var5 = var7.getDeathMessage();
+         if(var5 != null && var5.length() > 0) {
+            this.mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat(var7.getDeathMessage()));
+         }
 
+         if(!var3) {
+            int var6;
+            for(var6 = 0; var6 < this.inventory.mainInventory.length; ++var6) {
+               this.inventory.mainInventory[var6] = null;
+            }
+
+            for(var6 = 0; var6 < this.inventory.armorInventory.length; ++var6) {
+               this.inventory.armorInventory[var6] = null;
+            }
+         }
+
+         this.closeScreen();
+         this.potionsNeedUpdate = true;
+      }
    }
 
    public boolean attackEntityFrom(DamageSource var1, int var2) {
       if(this.func_85032_ar()) {
          return false;
       } else {
-         boolean var3 = this.mcServer.isDedicatedServer() && this.mcServer.isPVPEnabled() && "fall".equals(var1.damageType);
+         boolean var3 = this.mcServer.isDedicatedServer() && this.worldObj.pvpMode && "fall".equals(var1.damageType);
          if(!var3 && this.ticksOfInvuln > 0) {
             return false;
          } else {
-            if(!this.mcServer.isPVPEnabled() && var1 instanceof EntityDamageSource) {
+            if(!this.worldObj.pvpMode && var1 instanceof EntityDamageSource) {
                Entity var4 = var1.getEntity();
                if(var4 instanceof EntityPlayer) {
                   return false;
@@ -279,18 +370,7 @@
          this.playerConqueredTheEnd = true;
          this.playerNetServerHandler.sendPacket(new Packet70GameEvent(4, 0));
       } else {
-         if(this.dimension == 1 && var1 == 0) {
-            this.triggerAchievement(AchievementList.theEnd);
-            ChunkCoordinates var2 = this.mcServer.worldServerForDimension(var1).getEntrancePortalLocation();
-            if(var2 != null) {
-               this.playerNetServerHandler.setPlayerLocation((double)var2.posX, (double)var2.posY, (double)var2.posZ, 0.0F, 0.0F);
-            }
-
-            var1 = 1;
-         } else {
-            this.triggerAchievement(AchievementList.portal);
-         }
-
+         this.triggerAchievement(AchievementList.theEnd);
          this.mcServer.getConfigurationManager().sendPlayerToOtherDimension(this, var1);
          this.lastExperience = -1;
          this.lastHealth = -1;
@@ -327,19 +407,25 @@
    }
 
    public void wakeUpPlayer(boolean var1, boolean var2, boolean var3) {
-      if(this.isPlayerSleeping()) {
-         this.getServerForPlayer().getEntityTracker().sendPacketToTrackedPlayersAndTrackedEntity(this, new Packet18Animation(this, 3));
-      }
+      if(!this.fauxSleeping || this.sleeping) {
+         if(this.isPlayerSleeping()) {
+            this.getServerForPlayer().getEntityTracker().sendPacketToTrackedPlayersAndTrackedEntity(this, new Packet18Animation(this, 3));
+         }
 
-      super.wakeUpPlayer(var1, var2, var3);
-      if(this.playerNetServerHandler != null) {
-         this.playerNetServerHandler.setPlayerLocation(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
-      }
+         super.wakeUpPlayer(var1, var2, var3);
+         if(this.playerNetServerHandler != null) {
+            this.playerNetServerHandler.setPlayerLocation(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
+         }
 
+      }
    }
 
    public void mountEntity(Entity var1) {
-      super.mountEntity(var1);
+      this.setPassengerOf(var1);
+   }
+
+   public void setPassengerOf(Entity var1) {
+      super.setPassengerOf(var1);
       this.playerNetServerHandler.sendPacket(new Packet39AttachEntity(this, this.ridingEntity));
       this.playerNetServerHandler.setPlayerLocation(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
    }
@@ -350,32 +436,42 @@
       super.updateFallState(var1, var3);
    }
 
-   private void getNextWindowId() {
+   public int nextContainerCounter() {
       this.currentWindowId = this.currentWindowId % 100 + 1;
+      return this.currentWindowId;
    }
 
    public void displayGUIWorkbench(int var1, int var2, int var3) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 1, "Crafting", 9));
-      this.openContainer = new ContainerWorkbench(this.inventory, this.worldObj, var1, var2, var3);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var4 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerWorkbench(this.inventory, this.worldObj, var1, var2, var3));
+      if(var4 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 1, "Crafting", 9));
+         this.openContainer = var4;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIEnchantment(int var1, int var2, int var3) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 4, "Enchanting", 9));
-      this.openContainer = new ContainerEnchantment(this.inventory, this.worldObj, var1, var2, var3);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var4 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerEnchantment(this.inventory, this.worldObj, var1, var2, var3));
+      if(var4 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 4, "Enchanting", 9));
+         this.openContainer = var4;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIAnvil(int var1, int var2, int var3) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 8, "Repairing", 9));
-      this.openContainer = new ContainerRepair(this.inventory, this.worldObj, var1, var2, var3, this);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var4 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerRepair(this.inventory, this.worldObj, var1, var2, var3, this));
+      if(var4 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 8, "Repairing", 9));
+         this.openContainer = var4;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIChest(IInventory var1) {
@@ -383,73 +479,90 @@
          this.closeScreen();
       }
 
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 0, var1.getInvName(), var1.getSizeInventory()));
-      this.openContainer = new ContainerChest(this.inventory, var1);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var2 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerChest(this.inventory, var1));
+      if(var2 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 0, var1.getInvName(), var1.getSizeInventory()));
+         this.openContainer = var2;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIFurnace(TileEntityFurnace var1) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 2, var1.getInvName(), var1.getSizeInventory()));
-      this.openContainer = new ContainerFurnace(this.inventory, var1);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var2 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerFurnace(this.inventory, var1));
+      if(var2 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 2, var1.getInvName(), var1.getSizeInventory()));
+         this.openContainer = var2;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIDispenser(TileEntityDispenser var1) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 3, var1.getInvName(), var1.getSizeInventory()));
-      this.openContainer = new ContainerDispenser(this.inventory, var1);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var2 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerDispenser(this.inventory, var1));
+      if(var2 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 3, var1.getInvName(), var1.getSizeInventory()));
+         this.openContainer = var2;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIBrewingStand(TileEntityBrewingStand var1) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 5, var1.getInvName(), var1.getSizeInventory()));
-      this.openContainer = new ContainerBrewingStand(this.inventory, var1);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var2 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerBrewingStand(this.inventory, var1));
+      if(var2 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 5, var1.getInvName(), var1.getSizeInventory()));
+         this.openContainer = var2;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIBeacon(TileEntityBeacon var1) {
-      this.getNextWindowId();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 7, var1.getInvName(), var1.getSizeInventory()));
-      this.openContainer = new ContainerBeacon(this.inventory, var1);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
+      Container var2 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerBeacon(this.inventory, var1));
+      if(var2 != null) {
+         this.nextContainerCounter();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 7, var1.getInvName(), var1.getSizeInventory()));
+         this.openContainer = var2;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+      }
    }
 
    public void displayGUIMerchant(IMerchant var1) {
-      this.getNextWindowId();
-      this.openContainer = new ContainerMerchant(this.inventory, var1, this.worldObj);
-      this.openContainer.windowId = this.currentWindowId;
-      this.openContainer.onCraftGuiOpened(this);
-      InventoryMerchant var2 = ((ContainerMerchant)this.openContainer).getMerchantInventory();
-      this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 6, var2.getInvName(), var2.getSizeInventory()));
-      MerchantRecipeList var3 = var1.getRecipes(this);
-      if(var3 != null) {
-         try {
-            ByteArrayOutputStream var4 = new ByteArrayOutputStream();
-            DataOutputStream var5 = new DataOutputStream(var4);
-            var5.writeInt(this.currentWindowId);
-            var3.writeRecipiesToStream(var5);
-            this.playerNetServerHandler.sendPacket(new Packet250CustomPayload("MC|TrList", var4.toByteArray()));
-         } catch (IOException var6) {
-            var6.printStackTrace();
+      Container var2 = CraftEventFactory.callInventoryOpenEvent(this, new ContainerMerchant(this.inventory, var1, this.worldObj));
+      if(var2 != null) {
+         this.nextContainerCounter();
+         this.openContainer = var2;
+         this.openContainer.windowId = this.currentWindowId;
+         this.openContainer.onCraftGuiOpened(this);
+         InventoryMerchant var3 = ((ContainerMerchant)this.openContainer).getMerchantInventory();
+         this.playerNetServerHandler.sendPacket(new Packet100OpenWindow(this.currentWindowId, 6, var3.getInvName(), var3.getSizeInventory()));
+         MerchantRecipeList var4 = var1.getRecipes(this);
+         if(var4 != null) {
+            try {
+               ByteArrayOutputStream var5 = new ByteArrayOutputStream();
+               DataOutputStream var6 = new DataOutputStream(var5);
+               var6.writeInt(this.currentWindowId);
+               var4.writeRecipiesToStream(var6);
+               this.playerNetServerHandler.sendPacket(new Packet250CustomPayload("MC|TrList", var5.toByteArray()));
+            } catch (IOException var7) {
+               var7.printStackTrace();
+            }
          }
-      }
 
+      }
    }
 
    public void sendSlotContents(Container var1, int var2, ItemStack var3) {
-      if(!(var1.getSlot(var2) instanceof SlotCrafting)) {
-         if(!this.isChangingQuantityOnly) {
-            this.playerNetServerHandler.sendPacket(new Packet103SetSlot(var1.windowId, var2, var3));
-         }
+      if(!(var1.getSlot(var2) instanceof SlotCrafting) && !this.isChangingQuantityOnly) {
+         this.playerNetServerHandler.sendPacket(new Packet103SetSlot(var1.windowId, var2, var3));
       }
+
    }
 
    public void sendContainerToPlayer(Container var1) {
@@ -459,6 +572,10 @@
    public void updateCraftingInventory(Container var1, List var2) {
       this.playerNetServerHandler.sendPacket(new Packet104WindowItems(var1.windowId, var2));
       this.playerNetServerHandler.sendPacket(new Packet103SetSlot(-1, -1, this.inventory.getItemStack()));
+      if(EnumSet.of(InventoryType.CRAFTING, InventoryType.WORKBENCH).contains(var1.getBukkitView().getType())) {
+         this.playerNetServerHandler.sendPacket(new Packet103SetSlot(var1.windowId, 0, var1.getSlot(0).getStack()));
+      }
+
    }
 
    public void sendProgressBarUpdate(Container var1, int var2, int var3) {
@@ -474,6 +591,7 @@
       if(!this.isChangingQuantityOnly) {
          this.playerNetServerHandler.sendPacket(new Packet103SetSlot(-1, -1, this.inventory.getItemStack()));
       }
+
    }
 
    public void closeCraftingGui() {
@@ -482,17 +600,15 @@
    }
 
    public void addStat(StatBase var1, int var2) {
-      if(var1 != null) {
-         if(!var1.isIndependent) {
-            while(var2 > 100) {
-               this.playerNetServerHandler.sendPacket(new Packet200Statistic(var1.statId, 100));
-               var2 -= 100;
-            }
-
-            this.playerNetServerHandler.sendPacket(new Packet200Statistic(var1.statId, var2));
+      if(var1 != null && !var1.isIndependent) {
+         while(var2 > 100) {
+            this.playerNetServerHandler.sendPacket(new Packet200Statistic(var1.statId, 100));
+            var2 -= 100;
          }
 
+         this.playerNetServerHandler.sendPacket(new Packet200Statistic(var1.statId, var2));
       }
+
    }
 
    public void mountEntityAndWakeUp() {
@@ -512,6 +628,7 @@
 
    public void setPlayerHealthUpdated() {
       this.lastHealth = -99999999;
+      this.lastExperience = -1;
    }
 
    public void addChatMessage(String var1) {
@@ -572,6 +689,7 @@
       if(this.playerNetServerHandler != null) {
          this.playerNetServerHandler.sendPacket(new Packet202PlayerAbilities(this.capabilities));
       }
+
    }
 
    public WorldServer getServerForPlayer() {
@@ -633,4 +751,45 @@
    public ChunkCoordinates getCommandSenderPosition() {
       return new ChunkCoordinates(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY + 0.5D), MathHelper.floor_double(this.posZ));
    }
+
+   public long getPlayerTime() {
+      return this.relativeTime?this.worldObj.getWorldTime() + this.timeOffset:this.worldObj.getWorldTime() - this.worldObj.getWorldTime() % 24000L + this.timeOffset;
+   }
+
+   public String toString() {
+      return super.toString() + "(" + this.username + " at " + this.posX + "," + this.posY + "," + this.posZ + ")";
+   }
+
+   public void reset() {
+      float var1 = 0.0F;
+      boolean var2 = this.worldObj.getGameRules().getGameRuleBooleanValue("keepInventory");
+      if(this.keepLevel || var2) {
+         var1 = this.experience;
+         this.newTotalExp = this.experienceTotal;
+         this.newLevel = this.experienceLevel;
+      }
+
+      this.health = 20;
+      this.fire = 0;
+      this.fallDistance = 0.0F;
+      this.foodStats = new FoodStats();
+      this.experienceLevel = this.newLevel;
+      this.experienceTotal = this.newTotalExp;
+      this.experience = 0.0F;
+      this.deathTime = 0;
+      this.activePotionsMap.clear();
+      this.openContainer = this.inventoryContainer;
+      this.lastExperience = -1;
+      if(!this.keepLevel && !var2) {
+         this.addExperience(this.newExp);
+      } else {
+         this.experience = var1;
+      }
+
+      this.keepLevel = false;
+   }
+
+   public CraftPlayer getBukkitEntity() {
+      return (CraftPlayer)super.getBukkitEntity();
+   }
 }
Binary files mcp-mcdev/net/minecraft/src/EntityPotion.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPotion.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityPotion.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPotion.java
--- mcp-mcdev/net/minecraft/src/EntityPotion.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityPotion.java	2012-11-29 21:41:27.000000000 -0800
@@ -1,9 +1,11 @@
 package net.minecraft.src;
 
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.EntityLiving;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EntityThrowable;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
@@ -12,6 +14,10 @@
 import net.minecraft.src.Potion;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.entity.PotionSplashEvent;
 
 public class EntityPotion extends EntityThrowable {
 
@@ -72,27 +78,44 @@
             List var4 = this.worldObj.getEntitiesWithinAABB(EntityLiving.class, var3);
             if(var4 != null && !var4.isEmpty()) {
                Iterator var5 = var4.iterator();
+               HashMap var6 = new HashMap();
 
                while(var5.hasNext()) {
-                  EntityLiving var6 = (EntityLiving)var5.next();
-                  double var7 = this.getDistanceSqToEntity(var6);
-                  if(var7 < 16.0D) {
-                     double var9 = 1.0D - Math.sqrt(var7) / 4.0D;
-                     if(var6 == var1.entityHit) {
-                        var9 = 1.0D;
+                  EntityLiving var7 = (EntityLiving)var5.next();
+                  double var8 = this.getDistanceSqToEntity(var7);
+                  if(var8 < 16.0D) {
+                     double var10 = 1.0D - Math.sqrt(var8) / 4.0D;
+                     if(var7 == var1.entityHit) {
+                        var10 = 1.0D;
                      }
 
-                     Iterator var11 = var2.iterator();
+                     var6.put((LivingEntity)var7.getBukkitEntity(), Double.valueOf(var10));
+                  }
+               }
 
-                     while(var11.hasNext()) {
-                        PotionEffect var12 = (PotionEffect)var11.next();
-                        int var13 = var12.getPotionID();
-                        if(Potion.potionTypes[var13].isInstant()) {
-                           Potion.potionTypes[var13].affectEntity(this.func_85052_h(), var6, var12.getAmplifier(), var9);
-                        } else {
-                           int var14 = (int)(var9 * (double)var12.getDuration() + 0.5D);
-                           if(var14 > 20) {
-                              var6.addPotionEffect(new PotionEffect(var13, var14, var12.getAmplifier()));
+               PotionSplashEvent var21 = CraftEventFactory.callPotionSplashEvent(this, var6);
+               if(!var21.isCancelled()) {
+                  Iterator var12 = var21.getAffectedEntities().iterator();
+
+                  while(var12.hasNext()) {
+                     LivingEntity var13 = (LivingEntity)var12.next();
+                     if(var13 instanceof CraftLivingEntity) {
+                        EntityLiving var14 = ((CraftLivingEntity)var13).getHandle();
+                        double var15 = var21.getIntensity(var13);
+                        Iterator var17 = var2.iterator();
+
+                        while(var17.hasNext()) {
+                           PotionEffect var18 = (PotionEffect)var17.next();
+                           int var19 = var18.getPotionID();
+                           if(this.worldObj.pvpMode || !(var14 instanceof EntityPlayerMP) || var14 == this.func_85052_h() || var19 != 2 && var19 != 4 && var19 != 7 && var19 != 15 && var19 != 17 && var19 != 18 && var19 != 19) {
+                              if(Potion.potionTypes[var19].isInstant()) {
+                                 Potion.potionTypes[var19].applyInstantEffect(this.func_85052_h(), var14, var18.getAmplifier(), var15, this);
+                              } else {
+                                 int var20 = (int)(var15 * (double)var18.getDuration() + 0.5D);
+                                 if(var20 > 20) {
+                                    var14.addPotionEffect(new PotionEffect(var19, var20, var18.getAmplifier()));
+                                 }
+                              }
                            }
                         }
                      }
Binary files mcp-mcdev/net/minecraft/src/EntitySheep.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySheep.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySheep.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySheep.java
--- mcp-mcdev/net/minecraft/src/EntitySheep.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySheep.java	2012-11-29 21:41:26.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Random;
 import net.minecraft.src.Block;
 import net.minecraft.src.ContainerSheep;
@@ -17,11 +18,17 @@
 import net.minecraft.src.EntityAnimal;
 import net.minecraft.src.EntityItem;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.InventoryCraftResult;
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Player;
+import org.bukkit.entity.Sheep;
+import org.bukkit.event.entity.SheepRegrowWoolEvent;
+import org.bukkit.event.player.PlayerShearEntityEvent;
 
 public class EntitySheep extends EntityAnimal {
 
@@ -48,6 +55,7 @@
       this.tasks.addTask(8, new EntityAILookIdle(this));
       this.field_90016_e.setInventorySlotContents(0, new ItemStack(Item.dyePowder, 1, 0));
       this.field_90016_e.setInventorySlotContents(1, new ItemStack(Item.dyePowder, 1, 0));
+      this.field_90016_e.resultInventory = new InventoryCraftResult();
    }
 
    protected boolean isAIEnabled() {
@@ -77,10 +85,12 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
+      ArrayList var3 = new ArrayList();
       if(!this.getSheared()) {
-         this.entityDropItem(new ItemStack(Block.cloth.blockID, 1, this.getFleeceColor()), 0.0F);
+         var3.add(new org.bukkit.inventory.ItemStack(org.bukkit.Material.WOOL, 1, (short)0, Byte.valueOf((byte)this.getFleeceColor())));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    protected int getDropItemId() {
@@ -91,14 +101,20 @@
       ItemStack var2 = var1.inventory.getCurrentItem();
       if(var2 != null && var2.itemID == Item.shears.shiftedIndex && !this.getSheared() && !this.isChild()) {
          if(!this.worldObj.isRemote) {
+            PlayerShearEntityEvent var3 = new PlayerShearEntityEvent((Player)var1.getBukkitEntity(), this.getBukkitEntity());
+            this.worldObj.getServer().getPluginManager().callEvent(var3);
+            if(var3.isCancelled()) {
+               return false;
+            }
+
             this.setSheared(true);
-            int var3 = 1 + this.rand.nextInt(3);
+            int var4 = 1 + this.rand.nextInt(3);
 
-            for(int var4 = 0; var4 < var3; ++var4) {
-               EntityItem var5 = this.entityDropItem(new ItemStack(Block.cloth.blockID, 1, this.getFleeceColor()), 1.0F);
-               var5.motionY += (double)(this.rand.nextFloat() * 0.05F);
-               var5.motionX += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
-               var5.motionZ += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
+            for(int var5 = 0; var5 < var4; ++var5) {
+               EntityItem var6 = this.entityDropItem(new ItemStack(Block.cloth.blockID, 1, this.getFleeceColor()), 1.0F);
+               var6.motionY += (double)(this.rand.nextFloat() * 0.05F);
+               var6.motionX += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
+               var6.motionZ += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
             }
          }
 
@@ -174,14 +190,19 @@
    }
 
    public void eatGrassBonus() {
-      this.setSheared(false);
+      SheepRegrowWoolEvent var1 = new SheepRegrowWoolEvent((Sheep)this.getBukkitEntity());
+      this.worldObj.getServer().getPluginManager().callEvent(var1);
+      if(!var1.isCancelled()) {
+         this.setSheared(false);
+      }
+
       if(this.isChild()) {
-         int var1 = this.getGrowingAge() + 1200;
-         if(var1 > 0) {
-            var1 = 0;
+         int var2 = this.getGrowingAge() + 1200;
+         if(var2 > 0) {
+            var2 = 0;
          }
 
-         this.setGrowingAge(var1);
+         this.setGrowingAge(var2);
       }
 
    }
@@ -210,7 +231,6 @@
       return 15 - ((EntitySheep)var1).getFleeceColor();
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.func_90015_b(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntitySilverfish.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySilverfish.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySilverfish.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySilverfish.java
--- mcp-mcdev/net/minecraft/src/EntitySilverfish.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySilverfish.java	2012-11-29 21:41:26.000000000 -0800
@@ -11,6 +11,7 @@
 import net.minecraft.src.Facing;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntitySilverfish extends EntityMob {
 
@@ -101,7 +102,7 @@
                   for(int var6 = 0; !var4 && var6 <= 10 && var6 >= -10; var6 = var6 <= 0?1 - var6:0 - var6) {
                      for(int var7 = 0; !var4 && var7 <= 10 && var7 >= -10; var7 = var7 <= 0?1 - var7:0 - var7) {
                         int var8 = this.worldObj.getBlockId(var1 + var6, var2 + var5, var3 + var7);
-                        if(var8 == Block.silverfish.blockID) {
+                        if(var8 == Block.silverfish.blockID && !CraftEventFactory.callEntityChangeBlockEvent(this, var1 + var6, var2 + var5, var3 + var7, 0).isCancelled()) {
                            this.worldObj.playAuxSFX(2001, var1 + var6, var2 + var5, var3 + var7, Block.silverfish.blockID + (this.worldObj.getBlockMetadata(var1 + var6, var2 + var5, var3 + var7) << 12));
                            this.worldObj.setBlockWithNotify(var1 + var6, var2 + var5, var3 + var7, 0);
                            Block.silverfish.onBlockDestroyedByPlayer(this.worldObj, var1 + var6, var2 + var5, var3 + var7, 0);
@@ -123,6 +124,10 @@
             int var9 = this.rand.nextInt(6);
             var5 = this.worldObj.getBlockId(var1 + Facing.offsetsXForSide[var9], var2 + Facing.offsetsYForSide[var9], var3 + Facing.offsetsZForSide[var9]);
             if(BlockSilverfish.getPosingIdByMetadata(var5)) {
+               if(CraftEventFactory.callEntityChangeBlockEvent(this, var1 + Facing.offsetsXForSide[var9], var2 + Facing.offsetsYForSide[var9], var3 + Facing.offsetsZForSide[var9], Block.silverfish.blockID).isCancelled()) {
+                  return;
+               }
+
                this.worldObj.setBlockAndMetadataWithNotify(var1 + Facing.offsetsXForSide[var9], var2 + Facing.offsetsYForSide[var9], var3 + Facing.offsetsZForSide[var9], Block.silverfish.blockID, BlockSilverfish.getMetadataForBlockType(var5));
                this.spawnExplosionParticle();
                this.setDead();
@@ -132,8 +137,8 @@
          } else if(this.entityToAttack != null && !this.hasPath()) {
             this.entityToAttack = null;
          }
-
       }
+
    }
 
    public float getBlockPathWeight(int var1, int var2, int var3) {
Binary files mcp-mcdev/net/minecraft/src/EntitySkeleton.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySkeleton.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySkeleton.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySkeleton.java
--- mcp-mcdev/net/minecraft/src/EntitySkeleton.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySkeleton.java	2012-11-29 21:41:26.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Calendar;
 import net.minecraft.src.AchievementList;
 import net.minecraft.src.Block;
@@ -31,6 +32,9 @@
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldProviderHell;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.entity.EntityCombustEvent;
 
 public class EntitySkeleton extends EntityMob implements IRangedAttackMob {
 
@@ -134,7 +138,11 @@
             }
 
             if(var2) {
-               this.setFire(8);
+               EntityCombustEvent var4 = new EntityCombustEvent(this.getBukkitEntity(), 8);
+               this.worldObj.getServer().getPluginManager().callEvent(var4);
+               if(!var4.isCancelled()) {
+                  this.setFire(var4.getDuration());
+               }
             }
          }
       }
@@ -160,39 +168,44 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3;
+      ArrayList var3 = new ArrayList();
       int var4;
       if(this.getSkeletonType() == 1) {
-         var3 = this.rand.nextInt(3 + var2) - 1;
-
-         for(var4 = 0; var4 < var3; ++var4) {
-            this.dropItem(Item.coal.shiftedIndex, 1);
+         var4 = this.rand.nextInt(3 + var2) - 1;
+         if(var4 > 0) {
+            var3.add(new org.bukkit.inventory.ItemStack(org.bukkit.Material.COAL, var4));
          }
       } else {
-         var3 = this.rand.nextInt(3 + var2);
-
-         for(var4 = 0; var4 < var3; ++var4) {
-            this.dropItem(Item.arrow.shiftedIndex, 1);
+         var4 = this.rand.nextInt(3 + var2);
+         if(var4 > 0) {
+            var3.add(new org.bukkit.inventory.ItemStack(org.bukkit.Material.ARROW, var4));
          }
       }
 
-      var3 = this.rand.nextInt(3 + var2);
+      var4 = this.rand.nextInt(3 + var2);
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(org.bukkit.Material.BONE, var4));
+      }
 
-      for(var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.bone.shiftedIndex, 1);
+      if(this.recentlyHit > 0) {
+         int var5 = this.rand.nextInt(200) - var2;
+         if(var5 < 5) {
+            ItemStack var6 = this.l(var5 <= 0?1:0);
+            if(var6 != null) {
+               var3.add(new CraftItemStack(var6));
+            }
+         }
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
-   protected void dropRareDrop(int var1) {
-      if(this.getSkeletonType() == 1) {
-         this.entityDropItem(new ItemStack(Item.skull.shiftedIndex, 1, 1), 0.0F);
-      }
-
+   protected ItemStack l(int var1) {
+      return this.getSkeletonType() == 1?new ItemStack(Item.skull.shiftedIndex, 1, 1):null;
    }
 
    protected void func_82164_bB() {
-      super.func_82164_bB();
+      super.getHeldItem();
       this.setCurrentItemOrArmor(0, new ItemStack(Item.bow));
    }
 
Binary files mcp-mcdev/net/minecraft/src/EntitySlime.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySlime.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySlime.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySlime.java
--- mcp-mcdev/net/minecraft/src/EntitySlime.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySlime.java	2012-11-29 21:41:26.000000000 -0800
@@ -11,6 +11,9 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldType;
+import org.bukkit.entity.Slime;
+import org.bukkit.event.entity.SlimeSplitEvent;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class EntitySlime extends EntityLiving implements IMob {
 
@@ -34,7 +37,7 @@
       this.dataWatcher.addObject(16, new Byte((byte)1));
    }
 
-   protected void setSlimeSize(int var1) {
+   public void setSlimeSize(int var1) {
       this.dataWatcher.updateObject(16, new Byte((byte)var1));
       this.setSize(0.6F * (float)var1, 0.6F * (float)var1);
       this.setPosition(this.posX, this.posY, this.posZ);
@@ -152,14 +155,22 @@
       int var1 = this.getSlimeSize();
       if(!this.worldObj.isRemote && var1 > 1 && this.getHealth() <= 0) {
          int var2 = 2 + this.rand.nextInt(3);
-
-         for(int var3 = 0; var3 < var2; ++var3) {
-            float var4 = ((float)(var3 % 2) - 0.5F) * (float)var1 / 4.0F;
-            float var5 = ((float)(var3 / 2) - 0.5F) * (float)var1 / 4.0F;
-            EntitySlime var6 = this.createInstance();
-            var6.setSlimeSize(var1 / 2);
-            var6.setLocationAndAngles(this.posX + (double)var4, this.posY + 0.5D, this.posZ + (double)var5, this.rand.nextFloat() * 360.0F, 0.0F);
-            this.worldObj.spawnEntityInWorld(var6);
+         SlimeSplitEvent var3 = new SlimeSplitEvent((Slime)this.getBukkitEntity(), var2);
+         this.worldObj.getServer().getPluginManager().callEvent(var3);
+         if(var3.isCancelled() || var3.getCount() <= 0) {
+            super.setDead();
+            return;
+         }
+
+         var2 = var3.getCount();
+
+         for(int var4 = 0; var4 < var2; ++var4) {
+            float var5 = ((float)(var4 % 2) - 0.5F) * (float)var1 / 4.0F;
+            float var6 = ((float)(var4 / 2) - 0.5F) * (float)var1 / 4.0F;
+            EntitySlime var7 = this.createInstance();
+            var7.setSlimeSize(var1 / 2);
+            var7.setLocationAndAngles(this.posX + (double)var5, this.posY + 0.5D, this.posZ + (double)var6, this.rand.nextFloat() * 360.0F, 0.0F);
+            this.worldObj.addEntity(var7, SpawnReason.SLIME_SPLIT);
          }
       }
 
Binary files mcp-mcdev/net/minecraft/src/EntitySmallFireball.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySmallFireball.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySmallFireball.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySmallFireball.java
--- mcp-mcdev/net/minecraft/src/EntitySmallFireball.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySmallFireball.java	2012-11-29 21:41:26.000000000 -0800
@@ -6,6 +6,11 @@
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.entity.Player;
+import org.bukkit.entity.Projectile;
+import org.bukkit.event.block.BlockIgniteEvent;
+import org.bukkit.event.block.BlockIgniteEvent.IgniteCause;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
 
 public class EntitySmallFireball extends EntityFireball {
 
@@ -28,10 +33,14 @@
       if(!this.worldObj.isRemote) {
          if(var1.entityHit != null) {
             if(!var1.entityHit.isImmuneToFire() && var1.entityHit.attackEntityFrom(DamageSource.causeFireballDamage(this, this.shootingEntity), 5)) {
-               var1.entityHit.setFire(5);
+               EntityCombustByEntityEvent var2 = new EntityCombustByEntityEvent((Projectile)this.getBukkitEntity(), var1.entityHit.getBukkitEntity(), 5);
+               var1.entityHit.worldObj.getServer().getPluginManager().callEvent(var2);
+               if(!var2.isCancelled()) {
+                  var1.entityHit.setFire(var2.getDuration());
+               }
             }
          } else {
-            int var2 = var1.blockX;
+            int var7 = var1.blockX;
             int var3 = var1.blockY;
             int var4 = var1.blockZ;
             switch(var1.sideHit) {
@@ -48,14 +57,19 @@
                ++var4;
                break;
             case 4:
-               --var2;
+               --var7;
                break;
             case 5:
-               ++var2;
+               ++var7;
             }
 
-            if(this.worldObj.isAirBlock(var2, var3, var4)) {
-               this.worldObj.setBlockWithNotify(var2, var3, var4, Block.fire.blockID);
+            if(this.worldObj.isAirBlock(var7, var3, var4)) {
+               org.bukkit.block.Block var5 = this.worldObj.getWorld().getBlockAt(var7, var3, var4);
+               BlockIgniteEvent var6 = new BlockIgniteEvent(var5, IgniteCause.FIREBALL, (Player)null);
+               this.worldObj.getServer().getPluginManager().callEvent(var6);
+               if(!var6.isCancelled()) {
+                  this.worldObj.setBlockWithNotify(var7, var3, var4, Block.fire.blockID);
+               }
             }
          }
 
Binary files mcp-mcdev/net/minecraft/src/EntitySnowman.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySnowman.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySnowman.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySnowman.java
--- mcp-mcdev/net/minecraft/src/EntitySnowman.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySnowman.java	2012-11-29 21:41:25.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.Block;
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.EntityAIArrowAttack;
@@ -16,6 +17,11 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.EntityBlockFormEvent;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
 
 public class EntitySnowman extends EntityGolem implements IRangedAttackMob {
 
@@ -42,21 +48,37 @@
    public void onLivingUpdate() {
       super.onLivingUpdate();
       if(this.isWet()) {
-         this.attackEntityFrom(DamageSource.drown, 1);
+         EntityDamageEvent var1 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.DROWNING, 1);
+         this.worldObj.getServer().getPluginManager().callEvent(var1);
+         if(!var1.isCancelled()) {
+            var1.getEntity().setLastDamageCause(var1);
+            this.attackEntityFrom(DamageSource.drown, var1.getDamage());
+         }
       }
 
-      int var1 = MathHelper.floor_double(this.posX);
+      int var7 = MathHelper.floor_double(this.posX);
       int var2 = MathHelper.floor_double(this.posZ);
-      if(this.worldObj.getBiomeGenForCoords(var1, var2).getFloatTemperature() > 1.0F) {
-         this.attackEntityFrom(DamageSource.onFire, 1);
+      if(this.worldObj.getBiomeGenForCoords(var7, var2).getFloatTemperature() > 1.0F) {
+         EntityDamageEvent var3 = new EntityDamageEvent(this.getBukkitEntity(), DamageCause.MELTING, 1);
+         this.worldObj.getServer().getPluginManager().callEvent(var3);
+         if(!var3.isCancelled()) {
+            var3.getEntity().setLastDamageCause(var3);
+            this.attackEntityFrom(DamageSource.onFire, var3.getDamage());
+         }
       }
 
-      for(var1 = 0; var1 < 4; ++var1) {
-         var2 = MathHelper.floor_double(this.posX + (double)((float)(var1 % 2 * 2 - 1) * 0.25F));
-         int var3 = MathHelper.floor_double(this.posY);
-         int var4 = MathHelper.floor_double(this.posZ + (double)((float)(var1 / 2 % 2 * 2 - 1) * 0.25F));
-         if(this.worldObj.getBlockId(var2, var3, var4) == 0 && this.worldObj.getBiomeGenForCoords(var2, var4).getFloatTemperature() < 0.8F && Block.snow.canPlaceBlockAt(this.worldObj, var2, var3, var4)) {
-            this.worldObj.setBlockWithNotify(var2, var3, var4, Block.snow.blockID);
+      for(var7 = 0; var7 < 4; ++var7) {
+         var2 = MathHelper.floor_double(this.posX + (double)((float)(var7 % 2 * 2 - 1) * 0.25F));
+         int var8 = MathHelper.floor_double(this.posY);
+         int var4 = MathHelper.floor_double(this.posZ + (double)((float)(var7 / 2 % 2 * 2 - 1) * 0.25F));
+         if(this.worldObj.getBlockId(var2, var8, var4) == 0 && this.worldObj.getBiomeGenForCoords(var2, var4).getFloatTemperature() < 0.8F && Block.snow.canPlaceBlockAt(this.worldObj, var2, var8, var4)) {
+            BlockState var5 = this.worldObj.getWorld().getBlockAt(var2, var8, var4).getState();
+            var5.setTypeId(Block.snow.blockID);
+            EntityBlockFormEvent var6 = new EntityBlockFormEvent(this.getBukkitEntity(), var5.getBlock(), var5);
+            this.worldObj.getServer().getPluginManager().callEvent(var6);
+            if(!var6.isCancelled()) {
+               var5.update(true);
+            }
          }
       }
 
@@ -67,12 +89,13 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(16);
-
-      for(int var4 = 0; var4 < var3; ++var4) {
-         this.dropItem(Item.snowball.shiftedIndex, 1);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(16);
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(Item.snowball.shiftedIndex, var4));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public void attackEntityWithRangedAttack(EntityLiving var1) {
Binary files mcp-mcdev/net/minecraft/src/EntitySpider.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySpider.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySpider.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySpider.java
--- mcp-mcdev/net/minecraft/src/EntitySpider.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySpider.java	2012-11-29 21:41:25.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.Entity;
 import net.minecraft.src.EntityMob;
 import net.minecraft.src.EntitySkeleton;
@@ -9,6 +10,10 @@
 import net.minecraft.src.Potion;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EntitySpider extends EntityMob {
 
@@ -69,22 +74,30 @@
    protected void attackEntity(Entity var1, float var2) {
       float var3 = this.getBrightness(1.0F);
       if(var3 > 0.5F && this.rand.nextInt(100) == 0) {
-         this.entityToAttack = null;
-      } else {
-         if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(10) == 0) {
-            if(this.onGround) {
-               double var4 = var1.posX - this.posX;
-               double var6 = var1.posZ - this.posZ;
-               float var8 = MathHelper.sqrt_double(var4 * var4 + var6 * var6);
-               this.motionX = var4 / (double)var8 * 0.5D * 0.800000011920929D + this.motionX * 0.20000000298023224D;
-               this.motionZ = var6 / (double)var8 * 0.5D * 0.800000011920929D + this.motionZ * 0.20000000298023224D;
-               this.motionY = 0.4000000059604645D;
+         EntityTargetEvent var4 = new EntityTargetEvent(this.getBukkitEntity(), (org.bukkit.entity.Entity)null, TargetReason.FORGOT_TARGET);
+         this.worldObj.getServer().getPluginManager().callEvent(var4);
+         if(!var4.isCancelled()) {
+            if(var4.getTarget() == null) {
+               this.entityToAttack = null;
+            } else {
+               this.entityToAttack = ((CraftEntity)var4.getTarget()).getHandle();
             }
-         } else {
-            super.attackEntity(var1, var2);
-         }
 
+            return;
+         }
+      } else if(var2 > 2.0F && var2 < 6.0F && this.rand.nextInt(10) == 0) {
+         if(this.onGround) {
+            double var5 = var1.posX - this.posX;
+            double var7 = var1.posZ - this.posZ;
+            float var9 = MathHelper.sqrt_double(var5 * var5 + var7 * var7);
+            this.motionX = var5 / (double)var9 * 0.5D * 0.800000011920929D + this.motionX * 0.20000000298023224D;
+            this.motionZ = var7 / (double)var9 * 0.5D * 0.800000011920929D + this.motionZ * 0.20000000298023224D;
+            this.motionY = 0.4000000059604645D;
+         }
+      } else {
+         super.attackEntity(var1, var2);
       }
+
    }
 
    protected int getDropItemId() {
@@ -92,11 +105,21 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      super.dropFewItems(var1, var2);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3);
+      if(var2 > 0) {
+         var4 += this.rand.nextInt(var2 + 1);
+      }
+
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(Item.silk.shiftedIndex, var4));
+      }
+
       if(var1 && (this.rand.nextInt(3) == 0 || this.rand.nextInt(1 + var2) > 0)) {
-         this.dropItem(Item.spiderEye.shiftedIndex, 1);
+         var3.add(new org.bukkit.inventory.ItemStack(Item.spiderEye.shiftedIndex, 1));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public boolean isOnLadder() {
Binary files mcp-mcdev/net/minecraft/src/EntitySquid.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySquid.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntitySquid.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySquid.java
--- mcp-mcdev/net/minecraft/src/EntitySquid.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntitySquid.java	2012-11-29 21:41:25.000000000 -0800
@@ -1,11 +1,12 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import net.minecraft.src.EntityWaterMob;
-import net.minecraft.src.Item;
-import net.minecraft.src.ItemStack;
 import net.minecraft.src.Material;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.TrigMath;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntitySquid extends EntityWaterMob {
 
@@ -57,12 +58,13 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(3 + var2) + 1;
-
-      for(int var4 = 0; var4 < var3; ++var4) {
-         this.entityDropItem(new ItemStack(Item.dyePowder, 1, 0), 0.0F);
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3 + var2) + 1;
+      if(var4 > 0) {
+         var3.add(new org.bukkit.inventory.ItemStack(org.bukkit.Material.INK_SACK, var4));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public boolean isInWater() {
@@ -107,10 +109,10 @@
          }
 
          var1 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
-         this.renderYawOffset += (-((float)Math.atan2(this.motionX, this.motionZ)) * 180.0F / 3.1415927F - this.renderYawOffset) * 0.1F;
+         this.renderYawOffset += (-((float)TrigMath.atan2(this.motionX, this.motionZ)) * 180.0F / 3.1415927F - this.renderYawOffset) * 0.1F;
          this.rotationYaw = this.renderYawOffset;
          this.field_70859_f += 3.1415927F * this.field_70871_bB * 1.5F;
-         this.field_70861_d += (-((float)Math.atan2((double)var1, this.motionY)) * 180.0F / 3.1415927F - this.field_70861_d) * 0.1F;
+         this.field_70861_d += (-((float)TrigMath.atan2((double)var1, this.motionY)) * 180.0F / 3.1415927F - this.field_70861_d) * 0.1F;
       } else {
          this.tentacleAngle = MathHelper.abs(MathHelper.sin(this.field_70867_h)) * 3.1415927F * 0.25F;
          if(!this.worldObj.isRemote) {
Binary files mcp-mcdev/net/minecraft/src/EntityTNTPrimed.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTNTPrimed.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityTNTPrimed.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTNTPrimed.java
--- mcp-mcdev/net/minecraft/src/EntityTNTPrimed.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTNTPrimed.java	2012-11-29 21:41:25.000000000 -0800
@@ -3,14 +3,22 @@
 import net.minecraft.src.Entity;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.entity.Explosive;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
 
 public class EntityTNTPrimed extends Entity {
 
    public int fuse;
+   public float yield;
+   public boolean isIncendiary;
 
 
    public EntityTNTPrimed(World var1) {
       super(var1);
+      this.yield = 4.0F;
+      this.isIncendiary = false;
       this.fuse = 0;
       this.preventEntitySpawning = true;
       this.setSize(0.98F, 0.98F);
@@ -56,10 +64,11 @@
       }
 
       if(this.fuse-- <= 0) {
-         this.setDead();
          if(!this.worldObj.isRemote) {
             this.explode();
          }
+
+         this.setDead();
       } else {
          this.worldObj.spawnParticle("smoke", this.posX, this.posY + 0.5D, this.posZ, 0.0D, 0.0D, 0.0D);
       }
@@ -67,8 +76,13 @@
    }
 
    private void explode() {
-      float var1 = 4.0F;
-      this.worldObj.createExplosion((Entity)null, this.posX, this.posY, this.posZ, var1, true);
+      CraftServer var1 = this.worldObj.getServer();
+      ExplosionPrimeEvent var2 = new ExplosionPrimeEvent((Explosive)CraftEntity.getEntity(var1, this));
+      var1.getPluginManager().callEvent(var2);
+      if(!var2.isCancelled()) {
+         this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, var2.getRadius(), var2.getFire(), true);
+      }
+
    }
 
    protected void writeEntityToNBT(NBTTagCompound var1) {
Binary files mcp-mcdev/net/minecraft/src/EntityThrowable.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityThrowable.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityThrowable.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityThrowable.java
--- mcp-mcdev/net/minecraft/src/EntityThrowable.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityThrowable.java	2012-11-29 21:41:25.000000000 -0800
@@ -13,6 +13,9 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.entity.Projectile;
+import org.bukkit.event.entity.ProjectileHitEvent;
 
 public abstract class EntityThrowable extends Entity implements IProjectile {
 
@@ -22,8 +25,8 @@
    private int inTile = 0;
    protected boolean inGround = false;
    public int throwableShake = 0;
-   private EntityLiving thrower;
-   private String field_85053_h = null;
+   public EntityLiving thrower;
+   public String field_85053_h = null;
    private int ticksInGround;
    private int ticksInAir = 0;
 
@@ -140,7 +143,7 @@
                AxisAlignedBB var12 = var10.boundingBox.expand((double)var11, (double)var11, (double)var11);
                MovingObjectPosition var13 = var12.calculateIntercept(var18, var2);
                if(var13 != null) {
-                  double var14 = var18.distanceTo(var13.hitVec);
+                  double var14 = var18.squareDistanceTo(var13.hitVec);
                   if(var14 < var6 || var6 == 0.0D) {
                      var4 = var10;
                      var6 = var14;
@@ -159,16 +162,20 @@
             this.setInPortal();
          } else {
             this.onImpact(var3);
+            if(this.isDead) {
+               ProjectileHitEvent var19 = new ProjectileHitEvent((Projectile)this.getBukkitEntity());
+               Bukkit.getPluginManager().callEvent(var19);
+            }
          }
       }
 
       this.posX += this.motionX;
       this.posY += this.motionY;
       this.posZ += this.motionZ;
-      float var19 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
+      float var21 = MathHelper.sqrt_double(this.motionX * this.motionX + this.motionZ * this.motionZ);
       this.rotationYaw = (float)(Math.atan2(this.motionX, this.motionZ) * 180.0D / 3.1415927410125732D);
 
-      for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var19) * 180.0D / 3.1415927410125732D); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
+      for(this.rotationPitch = (float)(Math.atan2(this.motionY, (double)var21) * 180.0D / 3.1415927410125732D); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F) {
          ;
       }
 
@@ -190,8 +197,8 @@
       float var16 = this.getGravityVelocity();
       if(this.isInWater()) {
          for(int var17 = 0; var17 < 4; ++var17) {
-            float var21 = 0.25F;
-            this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var21, this.posY - this.motionY * (double)var21, this.posZ - this.motionZ * (double)var21, this.motionX, this.motionY, this.motionZ);
+            float var22 = 0.25F;
+            this.worldObj.spawnParticle("bubble", this.posX - this.motionX * (double)var22, this.posY - this.motionY * (double)var22, this.posZ - this.motionZ * (double)var22, this.motionX, this.motionY, this.motionZ);
          }
 
          var20 = 0.8F;
Binary files mcp-mcdev/net/minecraft/src/EntityTracker.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTracker.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityTracker.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTracker.java
--- mcp-mcdev/net/minecraft/src/EntityTracker.java	2012-11-29 21:14:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTracker.java	2012-11-29 21:41:25.000000000 -0800
@@ -40,7 +40,7 @@
 
    private final WorldServer theWorld;
    private Set trackedEntitySet = new HashSet();
-   private IntHashMap trackedEntityHashTable = new IntHashMap();
+   public IntHashMap trackedEntityHashTable = new IntHashMap();
    private int maxTrackingDistanceThreshold;
 
 
@@ -49,7 +49,7 @@
       this.maxTrackingDistanceThreshold = var1.getMinecraftServer().getConfigurationManager().getEntityViewDistance();
    }
 
-   public void trackEntity(Entity var1) {
+   public synchronized void trackEntity(Entity var1) {
       if(var1 instanceof EntityPlayerMP) {
          this.trackEntity(var1, 512, 2);
          EntityPlayerMP var2 = (EntityPlayerMP)var1;
@@ -117,22 +117,21 @@
       this.trackEntity(var1, var2, var3, false);
    }
 
-   public void trackEntity(Entity var1, int var2, int var3, boolean var4) {
+   public synchronized void trackEntity(Entity var1, int var2, int var3, boolean var4) {
       if(var2 > this.maxTrackingDistanceThreshold) {
          var2 = this.maxTrackingDistanceThreshold;
       }
 
-      if(this.trackedEntityHashTable.containsItem(var1.entityId)) {
-         throw new IllegalStateException("Entity is already tracked!");
-      } else {
+      if(!this.trackedEntityHashTable.containsItem(var1.entityId)) {
          EntityTrackerEntry var5 = new EntityTrackerEntry(var1, var2, var3, var4);
          this.trackedEntitySet.add(var5);
          this.trackedEntityHashTable.addKey(var1.entityId, var5);
          var5.updatePlayerEntities(this.theWorld.playerEntities);
       }
+
    }
 
-   public void untrackEntity(Entity var1) {
+   public synchronized void untrackEntity(Entity var1) {
       if(var1 instanceof EntityPlayerMP) {
          EntityPlayerMP var2 = (EntityPlayerMP)var1;
          Iterator var3 = this.trackedEntitySet.iterator();
@@ -151,7 +150,7 @@
 
    }
 
-   public void updateTrackedEntities() {
+   public synchronized void updateTrackedEntities() {
       ArrayList var1 = new ArrayList();
       Iterator var2 = this.trackedEntitySet.iterator();
 
@@ -163,21 +162,21 @@
          }
       }
 
-      for(int var6 = 0; var6 < var1.size(); ++var6) {
-         EntityPlayerMP var7 = (EntityPlayerMP)var1.get(var6);
-         Iterator var4 = this.trackedEntitySet.iterator();
-
-         while(var4.hasNext()) {
-            EntityTrackerEntry var5 = (EntityTrackerEntry)var4.next();
-            if(var5.trackedEntity != var7) {
-               var5.updatePlayerEntity(var7);
+      for(int var7 = 0; var7 < var1.size(); ++var7) {
+         EntityPlayerMP var4 = (EntityPlayerMP)var1.get(var7);
+         Iterator var5 = this.trackedEntitySet.iterator();
+
+         while(var5.hasNext()) {
+            EntityTrackerEntry var6 = (EntityTrackerEntry)var5.next();
+            if(var6.trackedEntity != var4) {
+               var6.updatePlayerEntity(var4);
             }
          }
       }
 
    }
 
-   public void sendPacketToTrackedPlayers(Entity var1, Packet var2) {
+   public synchronized void sendPacketToTrackedPlayers(Entity var1, Packet var2) {
       EntityTrackerEntry var3 = (EntityTrackerEntry)this.trackedEntityHashTable.lookup(var1.entityId);
       if(var3 != null) {
          var3.sendPacketToTrackedPlayers(var2);
@@ -185,7 +184,7 @@
 
    }
 
-   public void sendPacketToTrackedPlayersAndTrackedEntity(Entity var1, Packet var2) {
+   public synchronized void sendPacketToTrackedPlayersAndTrackedEntity(Entity var1, Packet var2) {
       EntityTrackerEntry var3 = (EntityTrackerEntry)this.trackedEntityHashTable.lookup(var1.entityId);
       if(var3 != null) {
          var3.sendPacketToTrackedPlayersAndTrackedEntity(var2);
@@ -193,7 +192,7 @@
 
    }
 
-   public void removeTrackedPlayerSymmetric(EntityPlayerMP var1) {
+   public synchronized void removeTrackedPlayerSymmetric(EntityPlayerMP var1) {
       Iterator var2 = this.trackedEntitySet.iterator();
 
       while(var2.hasNext()) {
Binary files mcp-mcdev/net/minecraft/src/EntityTrackerEntry.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTrackerEntry.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityTrackerEntry.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTrackerEntry.java
--- mcp-mcdev/net/minecraft/src/EntityTrackerEntry.java	2012-11-29 21:14:54.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityTrackerEntry.java	2012-11-29 21:41:25.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
@@ -55,6 +56,10 @@
 import net.minecraft.src.Packet41EntityEffect;
 import net.minecraft.src.Packet5PlayerInventory;
 import net.minecraft.src.PotionEffect;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerVelocityEvent;
+import org.bukkit.util.Vector;
 
 public class EntityTrackerEntry {
 
@@ -122,27 +127,27 @@
 
       if(this.trackedEntity instanceof EntityItemFrame && this.updateCounter % 10 == 0) {
          EntityItemFrame var24 = (EntityItemFrame)this.trackedEntity;
-         ItemStack var25 = var24.getDisplayedItem();
-         if(var25 != null && var25.getItem() instanceof ItemMap) {
-            MapData var27 = Item.map.getMapData(var25, this.trackedEntity.worldObj);
-            Iterator var30 = var1.iterator();
-
-            while(var30.hasNext()) {
-               EntityPlayer var31 = (EntityPlayer)var30.next();
-               EntityPlayerMP var32 = (EntityPlayerMP)var31;
-               var27.updateVisiblePlayers(var32, var25);
-               if(var32.playerNetServerHandler.getNumChunkDataPackets() <= 5) {
-                  Packet var33 = Item.map.getUpdatePacket(var25, this.trackedEntity.worldObj, var32);
-                  if(var33 != null) {
-                     var32.playerNetServerHandler.sendPacket(var33);
+         ItemStack var26 = var24.getDisplayedItem();
+         if(var26 != null && var26.getItem() instanceof ItemMap) {
+            MapData var29 = Item.map.getMapData(var26, this.trackedEntity.worldObj);
+            Iterator var34 = var1.iterator();
+
+            while(var34.hasNext()) {
+               EntityPlayer var35 = (EntityPlayer)var34.next();
+               EntityPlayerMP var36 = (EntityPlayerMP)var35;
+               var29.updateVisiblePlayers(var36, var26);
+               if(var36.playerNetServerHandler.getNumChunkDataPackets() <= 5) {
+                  Packet var37 = Item.map.getUpdatePacket(var26, this.trackedEntity.worldObj, var36);
+                  if(var37 != null) {
+                     var36.playerNetServerHandler.sendPacket(var37);
                   }
                }
             }
          }
 
-         DataWatcher var29 = this.trackedEntity.getDataWatcher();
-         if(var29.hasObjectChanged()) {
-            this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet40EntityMetadata(this.trackedEntity.entityId, var29, false));
+         DataWatcher var32 = this.trackedEntity.getDataWatcher();
+         if(var32.hasObjectChanged()) {
+            this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet40EntityMetadata(this.trackedEntity.entityId, var32, false));
          }
       } else if(this.updateCounter++ % this.updateFrequency == 0 || this.trackedEntity.isAirBorne) {
          int var2;
@@ -160,6 +165,17 @@
             Object var10 = null;
             boolean var11 = Math.abs(var7) >= 4 || Math.abs(var8) >= 4 || Math.abs(var9) >= 4 || this.updateCounter % 60 == 0;
             boolean var12 = Math.abs(var5 - this.encodedRotationYaw) >= 4 || Math.abs(var6 - this.encodedRotationPitch) >= 4;
+            if(var11) {
+               this.encodedPosX = var2;
+               this.encodedPosY = var3;
+               this.encodedPosZ = var4;
+            }
+
+            if(var12) {
+               this.encodedRotationYaw = var5;
+               this.encodedRotationPitch = var6;
+            }
+
             if(var7 >= -128 && var7 < 128 && var8 >= -128 && var8 < 128 && var9 >= -128 && var9 < 128 && this.ticksSinceLastForcedTeleport <= 400 && !this.ridingEntity) {
                if(var11 && var12) {
                   var10 = new Packet33RelEntityMoveLook(this.trackedEntity.entityId, (byte)var7, (byte)var8, (byte)var9, (byte)var5, (byte)var6);
@@ -170,6 +186,10 @@
                }
             } else {
                this.ticksSinceLastForcedTeleport = 0;
+               if(this.trackedEntity instanceof EntityPlayerMP) {
+                  this.updatePlayerEntities(new ArrayList(this.trackedPlayers));
+               }
+
                var10 = new Packet34EntityTeleport(this.trackedEntity.entityId, var2, var3, var4, (byte)var5, (byte)var6);
             }
 
@@ -196,23 +216,12 @@
                this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet40EntityMetadata(this.trackedEntity.entityId, var23, false));
             }
 
-            if(var11) {
-               this.encodedPosX = var2;
-               this.encodedPosY = var3;
-               this.encodedPosZ = var4;
-            }
-
-            if(var12) {
-               this.encodedRotationYaw = var5;
-               this.encodedRotationPitch = var6;
-            }
-
             this.ridingEntity = false;
          } else {
             var2 = MathHelper.floor_float(this.trackedEntity.rotationYaw * 256.0F / 360.0F);
             var3 = MathHelper.floor_float(this.trackedEntity.rotationPitch * 256.0F / 360.0F);
-            boolean var26 = Math.abs(var2 - this.encodedRotationYaw) >= 4 || Math.abs(var3 - this.encodedRotationPitch) >= 4;
-            if(var26) {
+            boolean var28 = Math.abs(var2 - this.encodedRotationYaw) >= 4 || Math.abs(var3 - this.encodedRotationPitch) >= 4;
+            if(var28) {
                this.sendPacketToTrackedPlayers(new Packet32EntityLook(this.trackedEntity.entityId, (byte)var2, (byte)var3));
                this.encodedRotationYaw = var2;
                this.encodedRotationPitch = var3;
@@ -221,9 +230,9 @@
             this.encodedPosX = this.trackedEntity.myEntitySize.multiplyBy32AndRound(this.trackedEntity.posX);
             this.encodedPosY = MathHelper.floor_double(this.trackedEntity.posY * 32.0D);
             this.encodedPosZ = this.trackedEntity.myEntitySize.multiplyBy32AndRound(this.trackedEntity.posZ);
-            DataWatcher var28 = this.trackedEntity.getDataWatcher();
-            if(var28.hasObjectChanged()) {
-               this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet40EntityMetadata(this.trackedEntity.entityId, var28, false));
+            DataWatcher var31 = this.trackedEntity.getDataWatcher();
+            if(var31.hasObjectChanged()) {
+               this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet40EntityMetadata(this.trackedEntity.entityId, var31, false));
             }
 
             this.ridingEntity = true;
@@ -239,7 +248,23 @@
       }
 
       if(this.trackedEntity.velocityChanged) {
-         this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet28EntityVelocity(this.trackedEntity));
+         boolean var25 = false;
+         if(this.trackedEntity instanceof EntityPlayerMP) {
+            Player var27 = (Player)this.trackedEntity.getBukkitEntity();
+            Vector var30 = var27.getVelocity();
+            PlayerVelocityEvent var33 = new PlayerVelocityEvent(var27, var30);
+            this.trackedEntity.worldObj.getServer().getPluginManager().callEvent(var33);
+            if(var33.isCancelled()) {
+               var25 = true;
+            } else if(!var30.equals(var33.getVelocity())) {
+               var27.setVelocity(var30);
+            }
+         }
+
+         if(!var25) {
+            this.sendPacketToTrackedPlayersAndTrackedEntity(new Packet28EntityVelocity(this.trackedEntity));
+         }
+
          this.trackedEntity.velocityChanged = false;
       }
 
@@ -287,9 +312,17 @@
          double var4 = var1.posZ - (double)(this.encodedPosZ / 32);
          if(var2 >= (double)(-this.trackingDistanceThreshold) && var2 <= (double)this.trackingDistanceThreshold && var4 >= (double)(-this.trackingDistanceThreshold) && var4 <= (double)this.trackingDistanceThreshold) {
             if(!this.trackedPlayers.contains(var1) && this.isPlayerWatchingThisChunk(var1)) {
+               if(this.trackedEntity instanceof EntityPlayerMP) {
+                  CraftPlayer var6 = ((EntityPlayerMP)this.trackedEntity).getBukkitEntity();
+                  if(!var1.getBukkitEntity().canSee(var6)) {
+                     return;
+                  }
+               }
+
+               var1.destroyedItemsNetCache.remove(Integer.valueOf(this.trackedEntity.entityId));
                this.trackedPlayers.add(var1);
-               Packet var6 = this.getSpawnPacket();
-               var1.playerNetServerHandler.sendPacket(var6);
+               Packet var10 = this.getSpawnPacket();
+               var1.playerNetServerHandler.sendPacket(var10);
                if(this.trackedEntity instanceof EntityItemFrame) {
                   var1.playerNetServerHandler.sendPacket(new Packet40EntityMetadata(this.trackedEntity.entityId, this.trackedEntity.getDataWatcher(), true));
                }
@@ -297,7 +330,7 @@
                this.lastTrackedEntityMotionX = this.trackedEntity.motionX;
                this.lastTrackedEntityMotionY = this.trackedEntity.motionY;
                this.lastTrackedEntityMotionZ = this.trackedEntity.motionZ;
-               if(this.sendVelocityUpdates && !(var6 instanceof Packet24MobSpawn)) {
+               if(this.sendVelocityUpdates && !(var10 instanceof Packet24MobSpawn)) {
                   var1.playerNetServerHandler.sendPacket(new Packet28EntityVelocity(this.trackedEntity.entityId, this.trackedEntity.motionX, this.trackedEntity.motionY, this.trackedEntity.motionZ));
                }
 
@@ -315,18 +348,20 @@
                }
 
                if(this.trackedEntity instanceof EntityPlayer) {
-                  EntityPlayer var11 = (EntityPlayer)this.trackedEntity;
-                  if(var11.isPlayerSleeping()) {
+                  EntityPlayer var12 = (EntityPlayer)this.trackedEntity;
+                  if(var12.isPlayerSleeping()) {
                      var1.playerNetServerHandler.sendPacket(new Packet17Sleep(this.trackedEntity, 0, MathHelper.floor_double(this.trackedEntity.posX), MathHelper.floor_double(this.trackedEntity.posY), MathHelper.floor_double(this.trackedEntity.posZ)));
                   }
                }
 
+               this.lastHeadMotion = MathHelper.floor_float(this.trackedEntity.setRotationYawHead() * 256.0F / 360.0F);
+               this.sendPacketToTrackedPlayers(new Packet35EntityHeadRotation(this.trackedEntity.entityId, (byte)this.lastHeadMotion));
                if(this.trackedEntity instanceof EntityLiving) {
-                  EntityLiving var10 = (EntityLiving)this.trackedEntity;
-                  Iterator var12 = var10.getActivePotionEffects().iterator();
+                  EntityLiving var11 = (EntityLiving)this.trackedEntity;
+                  Iterator var13 = var11.getActivePotionEffects().iterator();
 
-                  while(var12.hasNext()) {
-                     PotionEffect var9 = (PotionEffect)var12.next();
+                  while(var13.hasNext()) {
+                     PotionEffect var9 = (PotionEffect)var13.next();
                      var1.playerNetServerHandler.sendPacket(new Packet41EntityEffect(this.trackedEntity.entityId, var9));
                   }
                }
@@ -335,8 +370,8 @@
             this.trackedPlayers.remove(var1);
             var1.destroyedItemsNetCache.add(Integer.valueOf(this.trackedEntity.entityId));
          }
-
       }
+
    }
 
    private boolean isPlayerWatchingThisChunk(EntityPlayerMP var1) {
@@ -352,21 +387,20 @@
 
    private Packet getSpawnPacket() {
       if(this.trackedEntity.isDead) {
-         System.out.println("Fetching addPacket for removed entity");
-      }
-
-      if(this.trackedEntity instanceof EntityItem) {
-         EntityItem var9 = (EntityItem)this.trackedEntity;
-         Packet21PickupSpawn var10 = new Packet21PickupSpawn(var9);
-         var9.posX = (double)var10.xPosition / 32.0D;
-         var9.posY = (double)var10.yPosition / 32.0D;
-         var9.posZ = (double)var10.zPosition / 32.0D;
-         return var10;
+         return null;
+      } else if(this.trackedEntity instanceof EntityItem) {
+         EntityItem var10 = (EntityItem)this.trackedEntity;
+         Packet21PickupSpawn var7 = new Packet21PickupSpawn(var10);
+         var10.posX = (double)var7.xPosition / 32.0D;
+         var10.posY = (double)var7.yPosition / 32.0D;
+         var10.posZ = (double)var7.zPosition / 32.0D;
+         return var7;
       } else if(this.trackedEntity instanceof EntityPlayerMP) {
          return new Packet20NamedEntitySpawn((EntityPlayer)this.trackedEntity);
       } else {
+         EntityMinecart var1;
          if(this.trackedEntity instanceof EntityMinecart) {
-            EntityMinecart var1 = (EntityMinecart)this.trackedEntity;
+            var1 = (EntityMinecart)this.trackedEntity;
             if(var1.minecartType == 0) {
                return new Packet23VehicleSpawn(this.trackedEntity, 10);
             }
@@ -384,11 +418,11 @@
             return new Packet23VehicleSpawn(this.trackedEntity, 1);
          } else if(!(this.trackedEntity instanceof IAnimals) && !(this.trackedEntity instanceof EntityDragon)) {
             if(this.trackedEntity instanceof EntityFishHook) {
-               EntityPlayer var8 = ((EntityFishHook)this.trackedEntity).angler;
-               return new Packet23VehicleSpawn(this.trackedEntity, 90, var8 != null?var8.entityId:this.trackedEntity.entityId);
+               EntityPlayer var9 = ((EntityFishHook)this.trackedEntity).angler;
+               return new Packet23VehicleSpawn(this.trackedEntity, 90, var9 != null?var9.entityId:this.trackedEntity.entityId);
             } else if(this.trackedEntity instanceof EntityArrow) {
-               Entity var7 = ((EntityArrow)this.trackedEntity).shootingEntity;
-               return new Packet23VehicleSpawn(this.trackedEntity, 60, var7 != null?var7.entityId:this.trackedEntity.entityId);
+               Entity var8 = ((EntityArrow)this.trackedEntity).shootingEntity;
+               return new Packet23VehicleSpawn(this.trackedEntity, 60, var8 != null?var8.entityId:this.trackedEntity.entityId);
             } else if(this.trackedEntity instanceof EntitySnowball) {
                return new Packet23VehicleSpawn(this.trackedEntity, 61);
             } else if(this.trackedEntity instanceof EntityPotion) {
@@ -400,10 +434,10 @@
             } else if(this.trackedEntity instanceof EntityEnderEye) {
                return new Packet23VehicleSpawn(this.trackedEntity, 72);
             } else {
-               Packet23VehicleSpawn var2;
+               Packet23VehicleSpawn var4;
                if(this.trackedEntity instanceof EntityFireball) {
                   EntityFireball var6 = (EntityFireball)this.trackedEntity;
-                  var2 = null;
+                  var1 = null;
                   byte var3 = 63;
                   if(this.trackedEntity instanceof EntitySmallFireball) {
                      var3 = 64;
@@ -412,15 +446,15 @@
                   }
 
                   if(var6.shootingEntity != null) {
-                     var2 = new Packet23VehicleSpawn(this.trackedEntity, var3, ((EntityFireball)this.trackedEntity).shootingEntity.entityId);
+                     var4 = new Packet23VehicleSpawn(this.trackedEntity, var3, ((EntityFireball)this.trackedEntity).shootingEntity.entityId);
                   } else {
-                     var2 = new Packet23VehicleSpawn(this.trackedEntity, var3, 0);
+                     var4 = new Packet23VehicleSpawn(this.trackedEntity, var3, 0);
                   }
 
-                  var2.speedX = (int)(var6.accelerationX * 8000.0D);
-                  var2.speedY = (int)(var6.accelerationY * 8000.0D);
-                  var2.speedZ = (int)(var6.accelerationZ * 8000.0D);
-                  return var2;
+                  var4.speedX = (int)(var6.accelerationX * 8000.0D);
+                  var4.speedY = (int)(var6.accelerationY * 8000.0D);
+                  var4.speedZ = (int)(var6.accelerationZ * 8000.0D);
+                  return var4;
                } else if(this.trackedEntity instanceof EntityEgg) {
                   return new Packet23VehicleSpawn(this.trackedEntity, 62);
                } else if(this.trackedEntity instanceof EntityTNTPrimed) {
@@ -433,12 +467,12 @@
                } else if(this.trackedEntity instanceof EntityPainting) {
                   return new Packet25EntityPainting((EntityPainting)this.trackedEntity);
                } else if(this.trackedEntity instanceof EntityItemFrame) {
-                  EntityItemFrame var4 = (EntityItemFrame)this.trackedEntity;
-                  var2 = new Packet23VehicleSpawn(this.trackedEntity, 71, var4.hangingDirection);
-                  var2.xPosition = MathHelper.floor_float((float)(var4.xPosition * 32));
-                  var2.yPosition = MathHelper.floor_float((float)(var4.yPosition * 32));
-                  var2.zPosition = MathHelper.floor_float((float)(var4.zPosition * 32));
-                  return var2;
+                  EntityItemFrame var2 = (EntityItemFrame)this.trackedEntity;
+                  var4 = new Packet23VehicleSpawn(this.trackedEntity, 71, var2.hangingDirection);
+                  var4.xPosition = MathHelper.floor_float((float)(var2.xPosition * 32));
+                  var4.yPosition = MathHelper.floor_float((float)(var2.yPosition * 32));
+                  var4.zPosition = MathHelper.floor_float((float)(var2.zPosition * 32));
+                  return var4;
                } else if(this.trackedEntity instanceof EntityXPOrb) {
                   return new Packet26EntityExpOrb((EntityXPOrb)this.trackedEntity);
                } else {
Binary files mcp-mcdev/net/minecraft/src/EntityWitch.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWitch.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityWitch.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWitch.java
--- mcp-mcdev/net/minecraft/src/EntityWitch.java	2012-11-29 21:14:54.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWitch.java	2012-11-29 21:41:24.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.src.DamageSource;
@@ -21,6 +22,7 @@
 import net.minecraft.src.Potion;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityWitch extends EntityMob implements IRangedAttackMob {
 
@@ -143,20 +145,20 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      int var3 = this.rand.nextInt(3) + 1;
+      ArrayList var3 = new ArrayList();
+      int var4 = this.rand.nextInt(3) + 1;
 
-      for(int var4 = 0; var4 < var3; ++var4) {
-         int var5 = this.rand.nextInt(3);
-         int var6 = witchDrops[this.rand.nextInt(witchDrops.length)];
+      for(int var5 = 0; var5 < var4; ++var5) {
+         int var6 = this.rand.nextInt(3);
+         int var7 = witchDrops[this.rand.nextInt(witchDrops.length)];
          if(var2 > 0) {
-            var5 += this.rand.nextInt(var2 + 1);
+            var6 += this.rand.nextInt(var2 + 1);
          }
 
-         for(int var7 = 0; var7 < var5; ++var7) {
-            this.dropItem(var6, 1);
-         }
+         var3.add(new org.bukkit.inventory.ItemStack(var7, var6));
       }
 
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    public void attackEntityWithRangedAttack(EntityLiving var1) {
@@ -178,6 +180,7 @@
          var2.setThrowableHeading(var3, var5 + (double)(var9 * 0.2F), var7, 0.75F, 8.0F);
          this.worldObj.spawnEntityInWorld(var2);
       }
+
    }
 
 }
Binary files mcp-mcdev/net/minecraft/src/EntityWither.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWither.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityWither.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWither.java
--- mcp-mcdev/net/minecraft/src/EntityWither.java	2012-11-29 21:14:53.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWither.java	2012-11-29 21:41:24.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.List;
 import net.minecraft.src.Block;
 import net.minecraft.src.DamageSource;
@@ -25,6 +26,9 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public class EntityWither extends EntityMob implements IRangedAttackMob {
 
@@ -125,46 +129,49 @@
 
       super.onLivingUpdate();
 
-      int var28;
-      for(var28 = 0; var28 < 2; ++var28) {
-         this.field_82218_g[var28] = this.field_82221_e[var28];
-         this.field_82217_f[var28] = this.field_82220_d[var28];
+      int var22;
+      for(var22 = 0; var22 < 2; ++var22) {
+         this.field_82218_g[var22] = this.field_82221_e[var22];
+         this.field_82217_f[var22] = this.field_82220_d[var22];
       }
 
       int var10;
-      for(var28 = 0; var28 < 2; ++var28) {
-         var10 = this.getWatchedTargetId(var28 + 1);
+      double var12;
+      double var14;
+      double var16;
+      for(var22 = 0; var22 < 2; ++var22) {
+         var10 = this.getWatchedTargetId(var22 + 1);
          Entity var11 = null;
          if(var10 > 0) {
             var11 = this.worldObj.getEntityByID(var10);
          }
 
          if(var11 != null) {
-            var4 = this.func_82214_u(var28 + 1);
-            var6 = this.func_82208_v(var28 + 1);
-            var8 = this.func_82213_w(var28 + 1);
-            double var12 = var11.posX - var4;
-            double var14 = var11.posY + (double)var11.getEyeHeight() - var6;
-            double var16 = var11.posZ - var8;
+            var4 = this.func_82214_u(var22 + 1);
+            var6 = this.func_82208_v(var22 + 1);
+            var8 = this.func_82213_w(var22 + 1);
+            var12 = var11.posX - var4;
+            var14 = var11.posY + (double)var11.getEyeHeight() - var6;
+            var16 = var11.posZ - var8;
             double var18 = (double)MathHelper.sqrt_double(var12 * var12 + var16 * var16);
             float var20 = (float)(Math.atan2(var16, var12) * 180.0D / 3.1415927410125732D) - 90.0F;
             float var21 = (float)(-(Math.atan2(var14, var18) * 180.0D / 3.1415927410125732D));
-            this.field_82220_d[var28] = this.func_82204_b(this.field_82220_d[var28], var21, 40.0F);
-            this.field_82221_e[var28] = this.func_82204_b(this.field_82221_e[var28], var20, 10.0F);
+            this.field_82220_d[var22] = this.func_82204_b(this.field_82220_d[var22], var21, 40.0F);
+            this.field_82221_e[var22] = this.func_82204_b(this.field_82221_e[var22], var20, 10.0F);
          } else {
-            this.field_82221_e[var28] = this.func_82204_b(this.field_82221_e[var28], this.renderYawOffset, 10.0F);
+            this.field_82221_e[var22] = this.func_82204_b(this.field_82221_e[var22], this.renderYawOffset, 10.0F);
          }
       }
 
-      boolean var29 = this.isArmored();
+      boolean var23 = this.isArmored();
 
       for(var10 = 0; var10 < 3; ++var10) {
-         double var22 = this.func_82214_u(var10);
-         double var24 = this.func_82208_v(var10);
-         double var26 = this.func_82213_w(var10);
-         this.worldObj.spawnParticle("smoke", var22 + this.rand.nextGaussian() * 0.30000001192092896D, var24 + this.rand.nextGaussian() * 0.30000001192092896D, var26 + this.rand.nextGaussian() * 0.30000001192092896D, 0.0D, 0.0D, 0.0D);
-         if(var29 && this.worldObj.rand.nextInt(4) == 0) {
-            this.worldObj.spawnParticle("mobSpell", var22 + this.rand.nextGaussian() * 0.30000001192092896D, var24 + this.rand.nextGaussian() * 0.30000001192092896D, var26 + this.rand.nextGaussian() * 0.30000001192092896D, 0.699999988079071D, 0.699999988079071D, 0.5D);
+         var12 = this.func_82214_u(var10);
+         var14 = this.func_82208_v(var10);
+         var16 = this.func_82213_w(var10);
+         this.worldObj.spawnParticle("smoke", var12 + this.rand.nextGaussian() * 0.30000001192092896D, var14 + this.rand.nextGaussian() * 0.30000001192092896D, var16 + this.rand.nextGaussian() * 0.30000001192092896D, 0.0D, 0.0D, 0.0D);
+         if(var23 && this.worldObj.rand.nextInt(4) == 0) {
+            this.worldObj.spawnParticle("mobSpell", var12 + this.rand.nextGaussian() * 0.30000001192092896D, var14 + this.rand.nextGaussian() * 0.30000001192092896D, var16 + this.rand.nextGaussian() * 0.30000001192092896D, 0.699999988079071D, 0.699999988079071D, 0.5D);
          }
       }
 
@@ -181,64 +188,70 @@
       if(this.func_82212_n() > 0) {
          var1 = this.func_82212_n() - 1;
          if(var1 <= 0) {
-            this.worldObj.newExplosion(this, this.posX, this.posY + (double)this.getEyeHeight(), this.posZ, 7.0F, false, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            ExplosionPrimeEvent var2 = new ExplosionPrimeEvent(this.getBukkitEntity(), 7.0F, false);
+            this.worldObj.getServer().getPluginManager().callEvent(var2);
+            if(!var2.isCancelled()) {
+               this.worldObj.newExplosion(this, this.posX, this.posY + (double)this.getEyeHeight(), this.posZ, var2.getRadius(), var2.getFire(), this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+            }
+
             this.worldObj.func_82739_e(1013, (int)this.posX, (int)this.posY, (int)this.posZ, 0);
          }
 
          this.func_82215_s(var1);
          if(this.ticksExisted % 10 == 0) {
-            this.heal(10);
+            this.heal(10, RegainReason.WITHER_SPAWN);
          }
-
       } else {
          super.updateAITasks();
 
+         int var3;
          int var19;
          for(var1 = 1; var1 < 3; ++var1) {
             if(this.ticksExisted >= this.field_82223_h[var1 - 1]) {
                this.field_82223_h[var1 - 1] = this.ticksExisted + 10 + this.rand.nextInt(10);
+               int var4;
                if(this.worldObj.difficultySetting >= 2) {
-                  int var10001 = var1 - 1;
-                  int var10003 = this.field_82224_i[var1 - 1];
-                  this.field_82224_i[var10001] = this.field_82224_i[var1 - 1] + 1;
-                  if(var10003 > 15) {
-                     float var2 = 10.0F;
-                     float var3 = 5.0F;
-                     double var4 = MathHelper.getRandomDoubleInRange(this.rand, this.posX - (double)var2, this.posX + (double)var2);
-                     double var6 = MathHelper.getRandomDoubleInRange(this.rand, this.posY - (double)var3, this.posY + (double)var3);
-                     double var8 = MathHelper.getRandomDoubleInRange(this.rand, this.posZ - (double)var2, this.posZ + (double)var2);
-                     this.func_82209_a(var1 + 1, var4, var6, var8, true);
+                  var3 = var1 - 1;
+                  var4 = this.field_82224_i[var1 - 1];
+                  this.field_82224_i[var3] = this.field_82224_i[var1 - 1] + 1;
+                  if(var4 > 15) {
+                     float var5 = 10.0F;
+                     float var6 = 5.0F;
+                     double var7 = MathHelper.getRandomDoubleInRange(this.rand, this.posX - (double)var5, this.posX + (double)var5);
+                     double var9 = MathHelper.getRandomDoubleInRange(this.rand, this.posY - (double)var6, this.posY + (double)var6);
+                     double var11 = MathHelper.getRandomDoubleInRange(this.rand, this.posZ - (double)var5, this.posZ + (double)var5);
+                     this.func_82209_a(var1 + 1, var7, var9, var11, true);
                      this.field_82224_i[var1 - 1] = 0;
                   }
                }
 
                var19 = this.getWatchedTargetId(var1);
                if(var19 > 0) {
-                  Entity var21 = this.worldObj.getEntityByID(var19);
-                  if(var21 != null && var21.isEntityAlive() && this.getDistanceSqToEntity(var21) <= 900.0D && this.canEntityBeSeen(var21)) {
-                     this.func_82216_a(var1 + 1, (EntityLiving)var21);
+                  Entity var20 = this.worldObj.getEntityByID(var19);
+                  if(var20 != null && var20.isEntityAlive() && this.getDistanceSqToEntity(var20) <= 900.0D && this.canEntityBeSeen(var20)) {
+                     this.func_82216_a(var1 + 1, (EntityLiving)var20);
                      this.field_82223_h[var1 - 1] = this.ticksExisted + 40 + this.rand.nextInt(20);
                      this.field_82224_i[var1 - 1] = 0;
                   } else {
                      this.func_82211_c(var1, 0);
                   }
                } else {
-                  List var20 = this.worldObj.selectEntitiesWithinAABB(EntityLiving.class, this.boundingBox.expand(20.0D, 8.0D, 20.0D), attackEntitySelector);
+                  List var21 = this.worldObj.selectEntitiesWithinAABB(EntityLiving.class, this.boundingBox.expand(20.0D, 8.0D, 20.0D), attackEntitySelector);
 
-                  for(int var10 = 0; var10 < 10 && !var20.isEmpty(); ++var10) {
-                     EntityLiving var11 = (EntityLiving)var20.get(this.rand.nextInt(var20.size()));
-                     if(var11 != this && var11.isEntityAlive() && this.canEntityBeSeen(var11)) {
-                        if(var11 instanceof EntityPlayer) {
-                           if(!((EntityPlayer)var11).capabilities.disableDamage) {
-                              this.func_82211_c(var1, var11.entityId);
+                  for(var4 = 0; var4 < 10 && !var21.isEmpty(); ++var4) {
+                     EntityLiving var22 = (EntityLiving)var21.get(this.rand.nextInt(var21.size()));
+                     if(var22 != this && var22.isEntityAlive() && this.canEntityBeSeen(var22)) {
+                        if(var22 instanceof EntityPlayer) {
+                           if(!((EntityPlayer)var22).capabilities.disableDamage) {
+                              this.func_82211_c(var1, var22.entityId);
                            }
                         } else {
-                           this.func_82211_c(var1, var11.entityId);
+                           this.func_82211_c(var1, var22.entityId);
                         }
                         break;
                      }
 
-                     var20.remove(var11);
+                     var21.remove(var22);
                   }
                }
             }
@@ -255,28 +268,30 @@
             if(this.field_82222_j == 0 && this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing")) {
                var1 = MathHelper.floor_double(this.posY);
                var19 = MathHelper.floor_double(this.posX);
-               int var22 = MathHelper.floor_double(this.posZ);
-               boolean var24 = false;
+               var3 = MathHelper.floor_double(this.posZ);
+               boolean var23 = false;
 
-               for(int var23 = -1; var23 <= 1; ++var23) {
-                  for(int var12 = -1; var12 <= 1; ++var12) {
+               for(int var24 = -1; var24 <= 1; ++var24) {
+                  for(int var25 = -1; var25 <= 1; ++var25) {
                      for(int var13 = 0; var13 <= 3; ++var13) {
-                        int var14 = var19 + var23;
+                        int var14 = var19 + var24;
                         int var15 = var1 + var13;
-                        int var16 = var22 + var12;
+                        int var16 = var3 + var25;
                         int var17 = this.worldObj.getBlockId(var14, var15, var16);
                         if(var17 > 0 && var17 != Block.bedrock.blockID && var17 != Block.endPortal.blockID && var17 != Block.endPortalFrame.blockID) {
                            int var18 = this.worldObj.getBlockMetadata(var14, var15, var16);
-                           this.worldObj.playAuxSFX(2001, var14, var15, var16, var17 + (var18 << 12));
-                           Block.blocksList[var17].dropBlockAsItem(this.worldObj, var14, var15, var16, var18, 0);
-                           this.worldObj.setBlockWithNotify(var14, var15, var16, 0);
-                           var24 = true;
+                           if(!CraftEventFactory.callEntityChangeBlockEvent(this, var14, var15, var16, 0).isCancelled()) {
+                              this.worldObj.playAuxSFX(2001, var14, var15, var16, var17 + (var18 << 12));
+                              Block.blocksList[var17].dropBlockAsItem(this.worldObj, var14, var15, var16, var18, 0);
+                              this.worldObj.setBlockWithNotify(var14, var15, var16, 0);
+                              var23 = true;
+                           }
                         }
                      }
                   }
                }
 
-               if(var24) {
+               if(var23) {
                   this.worldObj.playAuxSFXAtEntity((EntityPlayer)null, 1012, (int)this.posX, (int)this.posY, (int)this.posZ, 0);
                }
             }
@@ -285,8 +300,8 @@
          if(this.ticksExisted % 20 == 0) {
             this.heal(1);
          }
-
       }
+
    }
 
    public void func_82206_m() {
@@ -398,7 +413,9 @@
    }
 
    protected void dropFewItems(boolean var1, int var2) {
-      this.dropItem(Item.netherStar.shiftedIndex, 1);
+      ArrayList var3 = new ArrayList();
+      var3.add(new org.bukkit.inventory.ItemStack(Item.netherStar.shiftedIndex, 1));
+      CraftEventFactory.callEntityDeathEvent(this, var3);
    }
 
    protected void despawnEntity() {
Binary files mcp-mcdev/net/minecraft/src/EntityWitherSkull.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWitherSkull.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityWitherSkull.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWitherSkull.java
--- mcp-mcdev/net/minecraft/src/EntityWitherSkull.java	2012-11-29 21:14:53.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWitherSkull.java	2012-11-29 21:41:23.000000000 -0800
@@ -9,6 +9,8 @@
 import net.minecraft.src.Potion;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public class EntityWitherSkull extends EntityFireball {
 
@@ -44,7 +46,7 @@
          if(var1.entityHit != null) {
             if(this.shootingEntity != null) {
                if(var1.entityHit.attackEntityFrom(DamageSource.causeMobDamage(this.shootingEntity), 8) && !var1.entityHit.isEntityAlive()) {
-                  this.shootingEntity.heal(5);
+                  this.shootingEntity.heal(5, RegainReason.WITHER);
                }
             } else {
                var1.entityHit.attackEntityFrom(DamageSource.magic, 5);
@@ -66,7 +68,12 @@
             }
          }
 
-         this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, 1.0F, false, this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+         ExplosionPrimeEvent var3 = new ExplosionPrimeEvent(this.getBukkitEntity(), 1.0F, false);
+         this.worldObj.getServer().getPluginManager().callEvent(var3);
+         if(!var3.isCancelled()) {
+            this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, var3.getRadius(), var3.getFire(), this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"));
+         }
+
          this.setDead();
       }
 
Binary files mcp-mcdev/net/minecraft/src/EntityWolf.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWolf.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityWolf.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWolf.java
--- mcp-mcdev/net/minecraft/src/EntityWolf.java	2012-11-29 21:14:53.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityWolf.java	2012-11-29 21:41:23.000000000 -0800
@@ -30,6 +30,7 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.PathEntity;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityWolf extends EntityTameable {
 
@@ -263,7 +264,7 @@
          }
 
          if(!this.worldObj.isRemote) {
-            if(this.rand.nextInt(3) == 0) {
+            if(this.rand.nextInt(3) == 0 && !CraftEventFactory.callEntityTameEvent(this, var1).isCancelled()) {
                this.setTamed(true);
                this.setPathToEntity((PathEntity)null);
                this.setAttackTarget((EntityLiving)null);
@@ -352,7 +353,6 @@
       return this.dataWatcher.getWatchableObjectByte(19) == 1;
    }
 
-   // $FF: synthetic method
    public EntityAgeable func_90011_a(EntityAgeable var1) {
       return this.spawnBabyAnimal(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/EntityXPOrb.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityXPOrb.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityXPOrb.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityXPOrb.java
--- mcp-mcdev/net/minecraft/src/EntityXPOrb.java	2012-11-29 21:14:53.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityXPOrb.java	2012-11-29 21:41:23.000000000 -0800
@@ -8,6 +8,10 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
 
 public class EntityXPOrb extends Entity {
 
@@ -15,7 +19,7 @@
    public int xpOrbAge = 0;
    public int field_70532_c;
    private int xpOrbHealth = 5;
-   private int xpValue;
+   public int xpValue;
    private EntityPlayer closestPlayer;
    private int field_80002_g;
 
@@ -72,32 +76,36 @@
       }
 
       if(this.closestPlayer != null) {
-         double var3 = (this.closestPlayer.posX - this.posX) / var1;
-         double var5 = (this.closestPlayer.posY + (double)this.closestPlayer.getEyeHeight() - this.posY) / var1;
-         double var7 = (this.closestPlayer.posZ - this.posZ) / var1;
-         double var9 = Math.sqrt(var3 * var3 + var5 * var5 + var7 * var7);
-         double var11 = 1.0D - var9;
-         if(var11 > 0.0D) {
-            var11 *= var11;
-            this.motionX += var3 / var9 * var11 * 0.1D;
-            this.motionY += var5 / var9 * var11 * 0.1D;
-            this.motionZ += var7 / var9 * var11 * 0.1D;
+         EntityTargetEvent var3 = CraftEventFactory.callEntityTargetEvent(this, this.closestPlayer, TargetReason.CLOSEST_PLAYER);
+         Entity var4 = var3.getTarget() == null?null:((CraftEntity)var3.getTarget()).getHandle();
+         if(!var3.isCancelled() && var4 != null) {
+            double var5 = (var4.posX - this.posX) / var1;
+            double var7 = (var4.posY + (double)var4.getEyeHeight() - this.posY) / var1;
+            double var9 = (var4.posZ - this.posZ) / var1;
+            double var11 = Math.sqrt(var5 * var5 + var7 * var7 + var9 * var9);
+            double var13 = 1.0D - var11;
+            if(var13 > 0.0D) {
+               var13 *= var13;
+               this.motionX += var5 / var11 * var13 * 0.1D;
+               this.motionY += var7 / var11 * var13 * 0.1D;
+               this.motionZ += var9 / var11 * var13 * 0.1D;
+            }
          }
       }
 
       this.moveEntity(this.motionX, this.motionY, this.motionZ);
-      float var13 = 0.98F;
+      float var15 = 0.98F;
       if(this.onGround) {
-         var13 = 0.58800006F;
-         int var14 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
-         if(var14 > 0) {
-            var13 = Block.blocksList[var14].slipperiness * 0.98F;
+         var15 = 0.58800006F;
+         int var16 = this.worldObj.getBlockId(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.boundingBox.minY) - 1, MathHelper.floor_double(this.posZ));
+         if(var16 > 0) {
+            var15 = Block.blocksList[var16].slipperiness * 0.98F;
          }
       }
 
-      this.motionX *= (double)var13;
+      this.motionX *= (double)var15;
       this.motionY *= 0.9800000190734863D;
-      this.motionZ *= (double)var13;
+      this.motionZ *= (double)var15;
       if(this.onGround) {
          this.motionY *= -0.8999999761581421D;
       }
@@ -145,16 +153,14 @@
    }
 
    public void onCollideWithPlayer(EntityPlayer var1) {
-      if(!this.worldObj.isRemote) {
-         if(this.field_70532_c == 0 && var1.xpCooldown == 0) {
-            var1.xpCooldown = 2;
-            this.func_85030_a("random.orb", 0.1F, 0.5F * ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.8F));
-            var1.onItemPickup(this, 1);
-            var1.addExperience(this.xpValue);
-            this.setDead();
-         }
-
+      if(!this.worldObj.isRemote && this.field_70532_c == 0 && var1.xpCooldown == 0) {
+         var1.xpCooldown = 2;
+         this.func_85030_a("random.orb", 0.1F, 0.5F * ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.7F + 1.8F));
+         var1.onItemPickup(this, 1);
+         var1.addExperience(CraftEventFactory.callPlayerExpChangeEvent(var1, this.xpValue).getAmount());
+         this.setDead();
       }
+
    }
 
    public int getXpValue() {
@@ -162,7 +168,7 @@
    }
 
    public static int getXPSplit(int var0) {
-      return var0 >= 2477?2477:(var0 >= 1237?1237:(var0 >= 617?617:(var0 >= 307?307:(var0 >= 149?149:(var0 >= 73?73:(var0 >= 37?37:(var0 >= 17?17:(var0 >= 7?7:(var0 >= 3?3:1)))))))));
+      return var0 > 162670129?var0 - 100000:(var0 > 81335063?81335063:(var0 > 40667527?40667527:(var0 > 20333759?20333759:(var0 > 10166857?10166857:(var0 > 5083423?5083423:(var0 > 2541701?2541701:(var0 > 1270849?1270849:(var0 > 635413?635413:(var0 > 317701?317701:(var0 > 158849?158849:(var0 > 79423?79423:(var0 > '\u9b1d'?'\u9b1d':(var0 > 19853?19853:(var0 > 9923?9923:(var0 > 4957?4957:(var0 >= 2477?2477:(var0 >= 1237?1237:(var0 >= 617?617:(var0 >= 307?307:(var0 >= 149?149:(var0 >= 73?73:(var0 >= 37?37:(var0 >= 17?17:(var0 >= 7?7:(var0 >= 3?3:1)))))))))))))))))))))))));
    }
 
    public boolean canAttackWithItem() {
Binary files mcp-mcdev/net/minecraft/src/EntityZombie.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityZombie.class differ
diff -ur mcp-mcdev/net/minecraft/src/EntityZombie.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityZombie.java
--- mcp-mcdev/net/minecraft/src/EntityZombie.java	2012-11-29 21:14:53.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/EntityZombie.java	2012-11-29 21:41:23.000000000 -0800
@@ -25,6 +25,7 @@
 import net.minecraft.src.Potion;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.EntityCombustEvent;
 
 public class EntityZombie extends EntityMob {
 
@@ -83,7 +84,7 @@
    }
 
    public void setChild(boolean var1) {
-      this.getDataWatcher().updateObject(12, Byte.valueOf((byte)1));
+      this.getDataWatcher().updateObject(12, Byte.valueOf((byte)(var1?1:0)));
    }
 
    public boolean isVillager() {
@@ -113,7 +114,11 @@
             }
 
             if(var2) {
-               this.setFire(8);
+               EntityCombustEvent var4 = new EntityCombustEvent(this.getBukkitEntity(), 8);
+               this.worldObj.getServer().getPluginManager().callEvent(var4);
+               if(!var4.isCancelled()) {
+                  this.setFire(var4.getDuration());
+               }
             }
          }
       }
@@ -167,18 +172,17 @@
       return EnumCreatureAttribute.UNDEAD;
    }
 
-   protected void dropRareDrop(int var1) {
+   protected ItemStack l(int var1) {
       switch(this.rand.nextInt(3)) {
       case 0:
-         this.dropItem(Item.ingotIron.shiftedIndex, 1);
-         break;
+         return new ItemStack(Item.ingotIron.shiftedIndex, 1, 0);
       case 1:
-         this.dropItem(Item.carrot.shiftedIndex, 1);
-         break;
+         return new ItemStack(Item.carrot.shiftedIndex, 1, 0);
       case 2:
-         this.dropItem(Item.potato.shiftedIndex, 1);
+         return new ItemStack(Item.potato.shiftedIndex, 1, 0);
+      default:
+         return null;
       }
-
    }
 
    protected void func_82164_bB() {
Binary files mcp-mcdev/net/minecraft/src/Explosion.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Explosion.class differ
diff -ur mcp-mcdev/net/minecraft/src/Explosion.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Explosion.java
--- mcp-mcdev/net/minecraft/src/Explosion.java	2012-11-29 21:14:52.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Explosion.java	2012-11-29 21:41:22.000000000 -0800
@@ -16,6 +16,14 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.entity.TNTPrimed;
+import org.bukkit.event.entity.EntityDamageByBlockEvent;
+import org.bukkit.event.entity.EntityDamageByEntityEvent;
+import org.bukkit.event.entity.EntityExplodeEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
 
 public class Explosion {
 
@@ -31,104 +39,139 @@
    public float explosionSize;
    public List affectedBlockPositions = new ArrayList();
    private Map field_77288_k = new HashMap();
+   public boolean wasCanceled = false;
 
 
    public Explosion(World var1, Entity var2, double var3, double var5, double var7, float var9) {
       this.worldObj = var1;
       this.exploder = var2;
-      this.explosionSize = var9;
+      this.explosionSize = (float)Math.max((double)var9, 0.0D);
       this.explosionX = var3;
       this.explosionY = var5;
       this.explosionZ = var7;
    }
 
    public void doExplosionA() {
-      float var1 = this.explosionSize;
-      HashSet var2 = new HashSet();
-
-      int var3;
-      int var4;
-      int var5;
-      double var15;
-      double var17;
-      double var19;
-      for(var3 = 0; var3 < this.field_77289_h; ++var3) {
-         for(var4 = 0; var4 < this.field_77289_h; ++var4) {
-            for(var5 = 0; var5 < this.field_77289_h; ++var5) {
-               if(var3 == 0 || var3 == this.field_77289_h - 1 || var4 == 0 || var4 == this.field_77289_h - 1 || var5 == 0 || var5 == this.field_77289_h - 1) {
-                  double var6 = (double)((float)var3 / ((float)this.field_77289_h - 1.0F) * 2.0F - 1.0F);
-                  double var8 = (double)((float)var4 / ((float)this.field_77289_h - 1.0F) * 2.0F - 1.0F);
-                  double var10 = (double)((float)var5 / ((float)this.field_77289_h - 1.0F) * 2.0F - 1.0F);
-                  double var12 = Math.sqrt(var6 * var6 + var8 * var8 + var10 * var10);
-                  var6 /= var12;
-                  var8 /= var12;
-                  var10 /= var12;
-                  float var14 = this.explosionSize * (0.7F + this.worldObj.rand.nextFloat() * 0.6F);
-                  var15 = this.explosionX;
-                  var17 = this.explosionY;
-                  var19 = this.explosionZ;
-
-                  for(float var21 = 0.3F; var14 > 0.0F; var14 -= var21 * 0.75F) {
-                     int var22 = MathHelper.floor_double(var15);
-                     int var23 = MathHelper.floor_double(var17);
-                     int var24 = MathHelper.floor_double(var19);
-                     int var25 = this.worldObj.getBlockId(var22, var23, var24);
-                     if(var25 > 0) {
-                        Block var26 = Block.blocksList[var25];
-                        float var27 = this.exploder != null?this.exploder.func_82146_a(this, var26, var22, var23, var24):var26.getExplosionResistance(this.exploder);
-                        var14 -= (var27 + 0.3F) * var21;
-                     }
-
-                     if(var14 > 0.0F) {
-                        var2.add(new ChunkPosition(var22, var23, var24));
+      if(this.explosionSize >= 0.1F) {
+         float var1 = this.explosionSize;
+         HashSet var2 = new HashSet();
+
+         int var3;
+         int var4;
+         int var5;
+         double var15;
+         double var17;
+         double var19;
+         for(var3 = 0; var3 < this.field_77289_h; ++var3) {
+            for(var4 = 0; var4 < this.field_77289_h; ++var4) {
+               for(var5 = 0; var5 < this.field_77289_h; ++var5) {
+                  if(var3 == 0 || var3 == this.field_77289_h - 1 || var4 == 0 || var4 == this.field_77289_h - 1 || var5 == 0 || var5 == this.field_77289_h - 1) {
+                     double var6 = (double)((float)var3 / ((float)this.field_77289_h - 1.0F) * 2.0F - 1.0F);
+                     double var8 = (double)((float)var4 / ((float)this.field_77289_h - 1.0F) * 2.0F - 1.0F);
+                     double var10 = (double)((float)var5 / ((float)this.field_77289_h - 1.0F) * 2.0F - 1.0F);
+                     double var12 = Math.sqrt(var6 * var6 + var8 * var8 + var10 * var10);
+                     var6 /= var12;
+                     var8 /= var12;
+                     var10 /= var12;
+                     float var14 = this.explosionSize * (0.7F + this.worldObj.rand.nextFloat() * 0.6F);
+                     var15 = this.explosionX;
+                     var17 = this.explosionY;
+                     var19 = this.explosionZ;
+
+                     for(float var21 = 0.3F; var14 > 0.0F; var14 -= var21 * 0.75F) {
+                        int var22 = MathHelper.floor_double(var15);
+                        int var23 = MathHelper.floor_double(var17);
+                        int var24 = MathHelper.floor_double(var19);
+                        int var25 = this.worldObj.getBlockId(var22, var23, var24);
+                        if(var25 > 0) {
+                           Block var26 = Block.blocksList[var25];
+                           float var27 = this.exploder != null?this.exploder.func_82146_a(this, var26, var22, var23, var24):var26.getExplosionResistance(this.exploder);
+                           var14 -= (var27 + 0.3F) * var21;
+                        }
+
+                        if(var14 > 0.0F && var23 < 256 && var23 >= 0) {
+                           var2.add(new ChunkPosition(var22, var23, var24));
+                        }
+
+                        var15 += var6 * (double)var21;
+                        var17 += var8 * (double)var21;
+                        var19 += var10 * (double)var21;
                      }
-
-                     var15 += var6 * (double)var21;
-                     var17 += var8 * (double)var21;
-                     var19 += var10 * (double)var21;
                   }
                }
             }
          }
-      }
 
-      this.affectedBlockPositions.addAll(var2);
-      this.explosionSize *= 2.0F;
-      var3 = MathHelper.floor_double(this.explosionX - (double)this.explosionSize - 1.0D);
-      var4 = MathHelper.floor_double(this.explosionX + (double)this.explosionSize + 1.0D);
-      var5 = MathHelper.floor_double(this.explosionY - (double)this.explosionSize - 1.0D);
-      int var28 = MathHelper.floor_double(this.explosionY + (double)this.explosionSize + 1.0D);
-      int var29 = MathHelper.floor_double(this.explosionZ - (double)this.explosionSize - 1.0D);
-      int var30 = MathHelper.floor_double(this.explosionZ + (double)this.explosionSize + 1.0D);
-      List var31 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this.exploder, AxisAlignedBB.getAABBPool().addOrModifyAABBInPool((double)var3, (double)var5, (double)var29, (double)var4, (double)var28, (double)var30));
-      Vec3 var32 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.explosionX, this.explosionY, this.explosionZ);
-
-      for(int var33 = 0; var33 < var31.size(); ++var33) {
-         Entity var34 = (Entity)var31.get(var33);
-         double var35 = var34.getDistance(this.explosionX, this.explosionY, this.explosionZ) / (double)this.explosionSize;
-         if(var35 <= 1.0D) {
-            var15 = var34.posX - this.explosionX;
-            var17 = var34.posY + (double)var34.getEyeHeight() - this.explosionY;
-            var19 = var34.posZ - this.explosionZ;
-            double var37 = (double)MathHelper.sqrt_double(var15 * var15 + var17 * var17 + var19 * var19);
-            if(var37 != 0.0D) {
-               var15 /= var37;
-               var17 /= var37;
-               var19 /= var37;
-               double var39 = (double)this.worldObj.getBlockDensity(var32, var34.boundingBox);
-               double var41 = (1.0D - var35) * var39;
-               var34.attackEntityFrom(DamageSource.explosion, (int)((var41 * var41 + var41) / 2.0D * 8.0D * (double)this.explosionSize + 1.0D));
-               var34.motionX += var15 * var41;
-               var34.motionY += var17 * var41;
-               var34.motionZ += var19 * var41;
-               if(var34 instanceof EntityPlayer) {
-                  this.field_77288_k.put((EntityPlayer)var34, this.worldObj.getWorldVec3Pool().getVecFromPool(var15 * var41, var17 * var41, var19 * var41));
+         this.affectedBlockPositions.addAll(var2);
+         this.explosionSize *= 2.0F;
+         var3 = MathHelper.floor_double(this.explosionX - (double)this.explosionSize - 1.0D);
+         var4 = MathHelper.floor_double(this.explosionX + (double)this.explosionSize + 1.0D);
+         var5 = MathHelper.floor_double(this.explosionY - (double)this.explosionSize - 1.0D);
+         int var28 = MathHelper.floor_double(this.explosionY + (double)this.explosionSize + 1.0D);
+         int var29 = MathHelper.floor_double(this.explosionZ - (double)this.explosionSize - 1.0D);
+         int var30 = MathHelper.floor_double(this.explosionZ + (double)this.explosionSize + 1.0D);
+         List var31 = this.worldObj.getEntitiesWithinAABBExcludingEntity(this.exploder, AxisAlignedBB.getAABBPool().addOrModifyAABBInPool((double)var3, (double)var5, (double)var29, (double)var4, (double)var28, (double)var30));
+         Vec3 var32 = this.worldObj.getWorldVec3Pool().getVecFromPool(this.explosionX, this.explosionY, this.explosionZ);
+
+         for(int var33 = 0; var33 < var31.size(); ++var33) {
+            Entity var34 = (Entity)var31.get(var33);
+            double var35 = var34.getDistance(this.explosionX, this.explosionY, this.explosionZ) / (double)this.explosionSize;
+            if(var35 <= 1.0D) {
+               var15 = var34.posX - this.explosionX;
+               var17 = var34.posY + (double)var34.getEyeHeight() - this.explosionY;
+               var19 = var34.posZ - this.explosionZ;
+               double var37 = (double)MathHelper.sqrt_double(var15 * var15 + var17 * var17 + var19 * var19);
+               if(var37 != 0.0D) {
+                  var15 /= var37;
+                  var17 /= var37;
+                  var19 /= var37;
+                  double var39 = (double)this.worldObj.getBlockDensity(var32, var34.boundingBox);
+                  double var41 = (1.0D - var35) * var39;
+                  org.bukkit.entity.Entity var48 = var34 == null?null:var34.getBukkitEntity();
+                  int var43 = (int)((var41 * var41 + var41) / 2.0D * 8.0D * (double)this.explosionSize + 1.0D);
+                  if(var48 != null) {
+                     if(this.exploder == null) {
+                        EntityDamageByBlockEvent var44 = new EntityDamageByBlockEvent((org.bukkit.block.Block)null, var48, DamageCause.BLOCK_EXPLOSION, var43);
+                        Bukkit.getPluginManager().callEvent(var44);
+                        if(!var44.isCancelled()) {
+                           var48.setLastDamageCause(var44);
+                           var34.attackEntityFrom(DamageSource.explosion, var44.getDamage());
+                           var34.motionX += var15 * var41;
+                           var34.motionY += var17 * var41;
+                           var34.motionZ += var19 * var41;
+                           if(var34 instanceof EntityPlayer) {
+                              this.field_77288_k.put((EntityPlayer)var34, this.worldObj.getWorldVec3Pool().getVecFromPool(var15 * var41, var17 * var41, var19 * var41));
+                           }
+                        }
+                     } else {
+                        org.bukkit.entity.Entity var47 = this.exploder.getBukkitEntity();
+                        DamageCause var45;
+                        if(var47 instanceof TNTPrimed) {
+                           var45 = DamageCause.BLOCK_EXPLOSION;
+                        } else {
+                           var45 = DamageCause.ENTITY_EXPLOSION;
+                        }
+
+                        EntityDamageByEntityEvent var46 = new EntityDamageByEntityEvent(var47, var48, var45, var43);
+                        Bukkit.getPluginManager().callEvent(var46);
+                        if(!var46.isCancelled()) {
+                           var34.getBukkitEntity().setLastDamageCause(var46);
+                           var34.attackEntityFrom(DamageSource.explosion, var46.getDamage());
+                           var34.motionX += var15 * var41;
+                           var34.motionY += var17 * var41;
+                           var34.motionZ += var19 * var41;
+                           if(var34 instanceof EntityPlayer) {
+                              this.field_77288_k.put((EntityPlayer)var34, this.worldObj.getWorldVec3Pool().getVecFromPool(var15 * var41, var17 * var41, var19 * var41));
+                           }
+                        }
+                     }
+                  }
                }
             }
          }
-      }
 
-      this.explosionSize = var1;
+         this.explosionSize = var1;
+      }
    }
 
    public void doExplosionB(boolean var1) {
@@ -139,68 +182,98 @@
          this.worldObj.spawnParticle("largeexplode", this.explosionX, this.explosionY, this.explosionZ, 1.0D, 0.0D, 0.0D);
       }
 
-      Iterator var2;
-      ChunkPosition var3;
-      int var4;
-      int var5;
-      int var6;
-      int var7;
+      Iterator var10;
+      ChunkPosition var11;
+      int var12;
+      int var13;
+      int var14;
+      int var15;
       if(this.isSmoking) {
-         var2 = this.affectedBlockPositions.iterator();
+         CraftWorld var2 = this.worldObj.getWorld();
+         org.bukkit.entity.Entity var3 = this.exploder == null?null:this.exploder.getBukkitEntity();
+         Location var4 = new Location(var2, this.explosionX, this.explosionY, this.explosionZ);
+         ArrayList var5 = new ArrayList();
+
+         org.bukkit.block.Block var8;
+         for(int var6 = this.affectedBlockPositions.size() - 1; var6 >= 0; --var6) {
+            ChunkPosition var7 = (ChunkPosition)this.affectedBlockPositions.get(var6);
+            var8 = var2.getBlockAt(var7.x, var7.y, var7.z);
+            if(var8.getType() != org.bukkit.Material.AIR) {
+               var5.add(var8);
+            }
+         }
 
-         while(var2.hasNext()) {
-            var3 = (ChunkPosition)var2.next();
-            var4 = var3.x;
-            var5 = var3.y;
-            var6 = var3.z;
-            var7 = this.worldObj.getBlockId(var4, var5, var6);
+         EntityExplodeEvent var33 = new EntityExplodeEvent(var3, var4, var5, 0.3F);
+         this.worldObj.getServer().getPluginManager().callEvent(var33);
+         this.affectedBlockPositions.clear();
+         Iterator var34 = var33.blockList().iterator();
+
+         while(var34.hasNext()) {
+            var8 = (org.bukkit.block.Block)var34.next();
+            ChunkPosition var9 = new ChunkPosition(var8.getX(), var8.getY(), var8.getZ());
+            this.affectedBlockPositions.add(var9);
+         }
+
+         if(var33.isCancelled()) {
+            this.wasCanceled = true;
+            return;
+         }
+
+         var10 = this.affectedBlockPositions.iterator();
+
+         while(var10.hasNext()) {
+            var11 = (ChunkPosition)var10.next();
+            var12 = var11.x;
+            var13 = var11.y;
+            var14 = var11.z;
+            var15 = this.worldObj.getBlockId(var12, var13, var14);
             if(var1) {
-               double var8 = (double)((float)var4 + this.worldObj.rand.nextFloat());
-               double var10 = (double)((float)var5 + this.worldObj.rand.nextFloat());
-               double var12 = (double)((float)var6 + this.worldObj.rand.nextFloat());
-               double var14 = var8 - this.explosionX;
-               double var16 = var10 - this.explosionY;
-               double var18 = var12 - this.explosionZ;
-               double var20 = (double)MathHelper.sqrt_double(var14 * var14 + var16 * var16 + var18 * var18);
-               var14 /= var20;
-               var16 /= var20;
-               var18 /= var20;
-               double var22 = 0.5D / (var20 / (double)this.explosionSize + 0.1D);
-               var22 *= (double)(this.worldObj.rand.nextFloat() * this.worldObj.rand.nextFloat() + 0.3F);
-               var14 *= var22;
-               var16 *= var22;
-               var18 *= var22;
-               this.worldObj.spawnParticle("explode", (var8 + this.explosionX * 1.0D) / 2.0D, (var10 + this.explosionY * 1.0D) / 2.0D, (var12 + this.explosionZ * 1.0D) / 2.0D, var14, var16, var18);
-               this.worldObj.spawnParticle("smoke", var8, var10, var12, var14, var16, var18);
-            }
-
-            if(var7 > 0) {
-               Block var24 = Block.blocksList[var7];
-               if(var24.func_85103_a(this)) {
-                  var24.dropBlockAsItemWithChance(this.worldObj, var4, var5, var6, this.worldObj.getBlockMetadata(var4, var5, var6), 0.3F, 0);
+               double var16 = (double)((float)var12 + this.worldObj.rand.nextFloat());
+               double var18 = (double)((float)var13 + this.worldObj.rand.nextFloat());
+               double var20 = (double)((float)var14 + this.worldObj.rand.nextFloat());
+               double var22 = var16 - this.explosionX;
+               double var24 = var18 - this.explosionY;
+               double var26 = var20 - this.explosionZ;
+               double var28 = (double)MathHelper.sqrt_double(var22 * var22 + var24 * var24 + var26 * var26);
+               var22 /= var28;
+               var24 /= var28;
+               var26 /= var28;
+               double var30 = 0.5D / (var28 / (double)this.explosionSize + 0.1D);
+               var30 *= (double)(this.worldObj.rand.nextFloat() * this.worldObj.rand.nextFloat() + 0.3F);
+               var22 *= var30;
+               var24 *= var30;
+               var26 *= var30;
+               this.worldObj.spawnParticle("explode", (var16 + this.explosionX * 1.0D) / 2.0D, (var18 + this.explosionY * 1.0D) / 2.0D, (var20 + this.explosionZ * 1.0D) / 2.0D, var22, var24, var26);
+               this.worldObj.spawnParticle("smoke", var16, var18, var20, var22, var24, var26);
+            }
+
+            if(var15 > 0 && var15 != Block.fire.blockID) {
+               Block var35 = Block.blocksList[var15];
+               if(var35.func_85103_a(this)) {
+                  var35.dropBlockAsItemWithChance(this.worldObj, var12, var13, var14, this.worldObj.getBlockMetadata(var12, var13, var14), var33.getYield(), 0);
                }
 
-               if(this.worldObj.setBlockAndMetadataWithUpdate(var4, var5, var6, 0, 0, this.worldObj.isRemote)) {
-                  this.worldObj.notifyBlocksOfNeighborChange(var4, var5, var6, 0);
+               if(this.worldObj.setBlockAndMetadataWithUpdate(var12, var13, var14, 0, 0, this.worldObj.isRemote)) {
+                  this.worldObj.notifyBlocksOfNeighborChange(var12, var13, var14, 0);
                }
 
-               var24.onBlockDestroyedByExplosion(this.worldObj, var4, var5, var6);
+               var35.onBlockDestroyedByExplosion(this.worldObj, var12, var13, var14);
             }
          }
       }
 
       if(this.isFlaming) {
-         var2 = this.affectedBlockPositions.iterator();
+         var10 = this.affectedBlockPositions.iterator();
 
-         while(var2.hasNext()) {
-            var3 = (ChunkPosition)var2.next();
-            var4 = var3.x;
-            var5 = var3.y;
-            var6 = var3.z;
-            var7 = this.worldObj.getBlockId(var4, var5, var6);
-            int var25 = this.worldObj.getBlockId(var4, var5 - 1, var6);
-            if(var7 == 0 && Block.opaqueCubeLookup[var25] && this.explosionRNG.nextInt(3) == 0) {
-               this.worldObj.setBlockWithNotify(var4, var5, var6, Block.fire.blockID);
+         while(var10.hasNext()) {
+            var11 = (ChunkPosition)var10.next();
+            var12 = var11.x;
+            var13 = var11.y;
+            var14 = var11.z;
+            var15 = this.worldObj.getBlockId(var12, var13, var14);
+            int var32 = this.worldObj.getBlockId(var12, var13 - 1, var14);
+            if(var15 == 0 && Block.opaqueCubeLookup[var32] && this.explosionRNG.nextInt(3) == 0) {
+               this.worldObj.setBlockWithNotify(var12, var13, var14, Block.fire.blockID);
             }
          }
       }
Binary files mcp-mcdev/net/minecraft/src/ExtendedBlockStorage.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ExtendedBlockStorage.class differ
diff -ur mcp-mcdev/net/minecraft/src/ExtendedBlockStorage.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ExtendedBlockStorage.java
--- mcp-mcdev/net/minecraft/src/ExtendedBlockStorage.java	2012-11-29 21:14:52.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ExtendedBlockStorage.java	2012-11-29 21:41:22.000000000 -0800
@@ -23,6 +23,19 @@
       this.blocklightArray = new NibbleArray(this.blockLSBArray.length, 4);
    }
 
+   public ExtendedBlockStorage(int var1, byte[] var2, byte[] var3) {
+      this.yBase = var1;
+      this.blockLSBArray = var2;
+      if(var3 != null) {
+         this.blockMSBArray = new NibbleArray(var3, 4);
+      }
+
+      this.blockMetadataArray = new NibbleArray(this.blockLSBArray.length, 4);
+      this.blocklightArray = new NibbleArray(this.blockLSBArray.length, 4);
+      this.skylightArray = new NibbleArray(this.blockLSBArray.length, 4);
+      this.removeInvalidBlocks();
+   }
+
    public int getExtBlockID(int var1, int var2, int var3) {
       int var4 = this.blockLSBArray[var2 << 8 | var3 << 4 | var1] & 255;
       return this.blockMSBArray != null?this.blockMSBArray.get(var1, var2, var3) << 8 | var4:var4;
@@ -100,6 +113,66 @@
    }
 
    public void removeInvalidBlocks() {
+      byte[] var1 = this.blockLSBArray;
+      int var2 = 0;
+      int var3 = 0;
+      int var5;
+      if(this.blockMSBArray == null) {
+         for(int var4 = 0; var4 < var1.length; ++var4) {
+            var5 = var1[var4] & 255;
+            if(var5 > 0) {
+               if(Block.blocksList[var5] == null) {
+                  var1[var4] = 0;
+               } else {
+                  ++var2;
+                  if(Block.blocksList[var5].getTickRandomly()) {
+                     ++var3;
+                  }
+               }
+            }
+         }
+      } else {
+         byte[] var9 = this.blockMSBArray.data;
+         var5 = 0;
+
+         for(int var6 = 0; var5 < var1.length; ++var6) {
+            byte var7 = var9[var6];
+            int var8 = var1[var5] & 255 | (var7 & 15) << 8;
+            if(var8 > 0) {
+               if(Block.blocksList[var8] == null) {
+                  var1[var5] = 0;
+                  var9[var6] = (byte)(var9[var6] & 240);
+               } else {
+                  ++var2;
+                  if(Block.blocksList[var8].getTickRandomly()) {
+                     ++var3;
+                  }
+               }
+            }
+
+            ++var5;
+            var8 = var1[var5] & 255 | (var7 & 240) << 4;
+            if(var8 > 0) {
+               if(Block.blocksList[var8] == null) {
+                  var1[var5] = 0;
+                  var9[var6] = (byte)(var9[var6] & 15);
+               } else {
+                  ++var2;
+                  if(Block.blocksList[var8].getTickRandomly()) {
+                     ++var3;
+                  }
+               }
+            }
+
+            ++var5;
+         }
+      }
+
+      this.blockRefCount = var2;
+      this.tickRefCount = var3;
+   }
+
+   public void old_recalcBlockCounts() {
       this.blockRefCount = 0;
       this.tickRefCount = 0;
 
@@ -151,7 +224,18 @@
    }
 
    public void setBlockMSBArray(NibbleArray var1) {
-      this.blockMSBArray = var1;
+      boolean var2 = true;
+
+      for(int var3 = 0; var3 < var1.data.length; ++var3) {
+         if(var1.data[var3] != 0) {
+            var2 = false;
+            break;
+         }
+      }
+
+      if(!var2) {
+         this.blockMSBArray = var1;
+      }
    }
 
    public void setBlockMetadataArray(NibbleArray var1) {
Binary files mcp-mcdev/net/minecraft/src/FoodStats.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/FoodStats.class differ
diff -ur mcp-mcdev/net/minecraft/src/FoodStats.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/FoodStats.java
--- mcp-mcdev/net/minecraft/src/FoodStats.java	2012-11-29 21:14:52.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/FoodStats.java	2012-11-29 21:41:22.000000000 -0800
@@ -2,15 +2,22 @@
 
 import net.minecraft.src.DamageSource;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.ItemFood;
 import net.minecraft.src.NBTTagCompound;
+import net.minecraft.src.Packet8UpdateHealth;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.FoodLevelChangeEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
 
 public class FoodStats {
 
-   private int foodLevel = 20;
-   private float foodSaturationLevel = 5.0F;
-   private float foodExhaustionLevel;
-   private int foodTimer = 0;
+   public int foodLevel = 20;
+   public float foodSaturationLevel = 5.0F;
+   public float foodExhaustionLevel;
+   public int foodTimer = 0;
    private int prevFoodLevel = 20;
 
 
@@ -31,21 +38,31 @@
          if(this.foodSaturationLevel > 0.0F) {
             this.foodSaturationLevel = Math.max(this.foodSaturationLevel - 1.0F, 0.0F);
          } else if(var2 > 0) {
-            this.foodLevel = Math.max(this.foodLevel - 1, 0);
+            FoodLevelChangeEvent var3 = CraftEventFactory.callFoodLevelChangeEvent(var1, Math.max(this.foodLevel - 1, 0));
+            if(!var3.isCancelled()) {
+               this.foodLevel = var3.getFoodLevel();
+            }
+
+            ((EntityPlayerMP)var1).playerNetServerHandler.sendPacket(new Packet8UpdateHealth(var1.getHealth(), this.foodLevel, this.foodSaturationLevel));
          }
       }
 
       if(this.foodLevel >= 18 && var1.shouldHeal()) {
          ++this.foodTimer;
          if(this.foodTimer >= 80) {
-            var1.heal(1);
+            var1.heal(1, RegainReason.SATIATED);
             this.foodTimer = 0;
          }
       } else if(this.foodLevel <= 0) {
          ++this.foodTimer;
          if(this.foodTimer >= 80) {
             if(var1.getHealth() > 10 || var2 >= 3 || var1.getHealth() > 1 && var2 >= 2) {
-               var1.attackEntityFrom(DamageSource.starve, 1);
+               EntityDamageEvent var4 = new EntityDamageEvent(var1.getBukkitEntity(), DamageCause.STARVATION, 1);
+               var1.worldObj.getServer().getPluginManager().callEvent(var4);
+               if(!var4.isCancelled()) {
+                  var4.getEntity().setLastDamageCause(var4);
+                  var1.attackEntityFrom(DamageSource.starve, var4.getDamage());
+               }
             }
 
             this.foodTimer = 0;
Binary files mcp-mcdev/net/minecraft/src/FurnaceRecipes.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/FurnaceRecipes.class differ
diff -ur mcp-mcdev/net/minecraft/src/FurnaceRecipes.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/FurnaceRecipes.java
--- mcp-mcdev/net/minecraft/src/FurnaceRecipes.java	2012-11-29 21:14:52.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/FurnaceRecipes.java	2012-11-29 21:41:22.000000000 -0800
@@ -9,7 +9,7 @@
 public class FurnaceRecipes {
 
    private static final FurnaceRecipes smeltingBase = new FurnaceRecipes();
-   private Map smeltingList = new HashMap();
+   public Map smeltingList = new HashMap();
    private Map experienceList = new HashMap();
 
 
@@ -17,7 +17,7 @@
       return smeltingBase;
    }
 
-   private FurnaceRecipes() {
+   public FurnaceRecipes() {
       this.addSmelting(Block.oreIron.blockID, new ItemStack(Item.ingotIron), 0.7F);
       this.addSmelting(Block.oreGold.blockID, new ItemStack(Item.ingotGold), 1.0F);
       this.addSmelting(Block.oreDiamond.blockID, new ItemStack(Item.diamond), 1.0F);
Binary files mcp-mcdev/net/minecraft/src/IInventory.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IInventory.class differ
diff -ur mcp-mcdev/net/minecraft/src/IInventory.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IInventory.java
--- mcp-mcdev/net/minecraft/src/IInventory.java	2012-11-29 21:14:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IInventory.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,10 +1,16 @@
 package net.minecraft.src;
 
+import java.util.List;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.ItemStack;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
 public interface IInventory {
 
+   int MAX_STACK = 64;
+
+
    int getSizeInventory();
 
    ItemStack getStackInSlot(int var1);
@@ -26,4 +32,16 @@
    void openChest();
 
    void closeChest();
+
+   ItemStack[] getContents();
+
+   void onOpen(CraftHumanEntity var1);
+
+   void onClose(CraftHumanEntity var1);
+
+   List getViewers();
+
+   InventoryHolder getOwner();
+
+   void setMaxStackSize(int var1);
 }
Binary files mcp-mcdev/net/minecraft/src/IRecipe.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IRecipe.class differ
diff -ur mcp-mcdev/net/minecraft/src/IRecipe.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IRecipe.java
--- mcp-mcdev/net/minecraft/src/IRecipe.java	2012-11-29 21:14:50.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IRecipe.java	2012-11-29 21:41:20.000000000 -0800
@@ -3,6 +3,7 @@
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.inventory.Recipe;
 
 public interface IRecipe {
 
@@ -13,4 +14,6 @@
    int getRecipeSize();
 
    ItemStack getRecipeOutput();
+
+   Recipe toBukkitRecipe();
 }
Binary files mcp-mcdev/net/minecraft/src/ISaveHandler.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ISaveHandler.class differ
diff -ur mcp-mcdev/net/minecraft/src/ISaveHandler.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ISaveHandler.java
--- mcp-mcdev/net/minecraft/src/ISaveHandler.java	2012-11-29 21:14:50.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ISaveHandler.java	2012-11-29 21:41:20.000000000 -0800
@@ -1,8 +1,10 @@
 package net.minecraft.src;
 
 import java.io.File;
+import java.util.UUID;
 import net.minecraft.src.IChunkLoader;
 import net.minecraft.src.IPlayerFileData;
+import net.minecraft.src.MinecraftException;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.WorldInfo;
 import net.minecraft.src.WorldProvider;
@@ -11,7 +13,7 @@
 
    WorldInfo loadWorldInfo();
 
-   void checkSessionLock();
+   void checkSessionLock() throws MinecraftException;
 
    IChunkLoader getChunkLoader(WorldProvider var1);
 
@@ -26,4 +28,6 @@
    File getMapFileFromName(String var1);
 
    String getSaveDirectoryName();
+
+   UUID getUUID();
 }
Binary files mcp-mcdev/net/minecraft/src/IntHashMap.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IntHashMap.class differ
diff -ur mcp-mcdev/net/minecraft/src/IntHashMap.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IntHashMap.java
--- mcp-mcdev/net/minecraft/src/IntHashMap.java	2012-11-29 21:14:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/IntHashMap.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,7 +1,5 @@
 package net.minecraft.src;
 
-import java.util.HashSet;
-import java.util.Set;
 import net.minecraft.src.IntHashMapEntry;
 
 public class IntHashMap {
@@ -11,7 +9,6 @@
    private int threshold = 12;
    private final float growFactor = 0.75F;
    private transient volatile int versionStamp;
-   private Set keySet = new HashSet();
 
 
    private static int computeHash(int var0) {
@@ -52,7 +49,6 @@
    }
 
    public void addKey(int var1, Object var2) {
-      this.keySet.add(Integer.valueOf(var1));
       int var3 = computeHash(var1);
       int var4 = getSlotIndex(var3, this.slots.length);
 
@@ -76,8 +72,11 @@
          IntHashMapEntry[] var4 = new IntHashMapEntry[var1];
          this.copyTo(var4);
          this.slots = var4;
-         this.threshold = (int)((float)var1 * this.growFactor);
+         float var10001 = (float)var1;
+         this.getClass();
+         this.threshold = (int)(var10001 * 0.75F);
       }
+
    }
 
    private void copyTo(IntHashMapEntry[] var1) {
@@ -103,7 +102,6 @@
    }
 
    public Object removeObject(int var1) {
-      this.keySet.remove(Integer.valueOf(var1));
       IntHashMapEntry var2 = this.removeEntry(var1);
       return var2 == null?null:var2.valueEntry;
    }
@@ -155,7 +153,6 @@
 
    }
 
-   // $FF: synthetic method
    static int getHash(int var0) {
       return computeHash(var0);
    }
Binary files mcp-mcdev/net/minecraft/src/InventoryBasic.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryBasic.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryBasic.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryBasic.java
--- mcp-mcdev/net/minecraft/src/InventoryBasic.java	2012-11-29 21:14:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryBasic.java	2012-11-29 21:41:21.000000000 -0800
@@ -6,11 +6,11 @@
 import net.minecraft.src.IInventory;
 import net.minecraft.src.ItemStack;
 
-public class InventoryBasic implements IInventory {
+public abstract class InventoryBasic implements IInventory {
 
    private String inventoryTitle;
    private int slotsCount;
-   private ItemStack[] inventoryContents;
+   protected ItemStack[] inventoryContents;
    private List field_70480_d;
 
 
Binary files mcp-mcdev/net/minecraft/src/InventoryCraftResult.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryCraftResult.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryCraftResult.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryCraftResult.java
--- mcp-mcdev/net/minecraft/src/InventoryCraftResult.java	2012-11-29 21:14:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryCraftResult.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,14 +1,39 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
 import net.minecraft.src.ItemStack;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
 public class InventoryCraftResult implements IInventory {
 
    private ItemStack[] stackResult = new ItemStack[1];
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.stackResult;
+   }
+
+   public InventoryHolder getOwner() {
+      return null;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {}
+
+   public void onClose(CraftHumanEntity var1) {}
+
+   public List getViewers() {
+      return new ArrayList();
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public int getSizeInventory() {
       return 1;
    }
@@ -46,7 +71,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public void onInventoryChanged() {}
Binary files mcp-mcdev/net/minecraft/src/InventoryCrafting.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryCrafting.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryCrafting.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryCrafting.java
--- mcp-mcdev/net/minecraft/src/InventoryCrafting.java	2012-11-29 21:14:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryCrafting.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,18 +1,65 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.Container;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
+import net.minecraft.src.IRecipe;
 import net.minecraft.src.ItemStack;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.inventory.InventoryHolder;
 
 public class InventoryCrafting implements IInventory {
 
    private ItemStack[] stackList;
    private int inventoryWidth;
    private Container eventHandler;
+   public List transaction;
+   public IRecipe currentRecipe;
+   public IInventory resultInventory;
+   private EntityPlayer owner;
+   private int maxStack;
 
 
+   public ItemStack[] getContents() {
+      return this.stackList;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public InventoryType getInvType() {
+      return this.stackList.length == 4?InventoryType.CRAFTING:InventoryType.WORKBENCH;
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      return this.owner.getBukkitEntity();
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+      this.resultInventory.setMaxStackSize(var1);
+   }
+
+   public InventoryCrafting(Container var1, int var2, int var3, EntityPlayer var4) {
+      this(var1, var2, var3);
+      this.owner = var4;
+   }
+
    public InventoryCrafting(Container var1, int var2, int var3) {
+      this.transaction = new ArrayList();
+      this.maxStack = 64;
       int var4 = var2 * var3;
       this.stackList = new ItemStack[var4];
       this.eventHandler = var1;
@@ -78,7 +125,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public void onInventoryChanged() {}
Binary files mcp-mcdev/net/minecraft/src/InventoryEnderChest.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryEnderChest.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryEnderChest.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryEnderChest.java
--- mcp-mcdev/net/minecraft/src/InventoryEnderChest.java	2012-11-29 21:14:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryEnderChest.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,17 +1,53 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.InventoryBasic;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.TileEntityEnderChest;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.inventory.InventoryHolder;
 
 public class InventoryEnderChest extends InventoryBasic {
 
    private TileEntityEnderChest associatedChest;
+   public List transaction = new ArrayList();
+   public Player player;
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.inventoryContents;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      return this.player;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
+   public int getMaxStackSize() {
+      return this.maxStack;
+   }
+
    public InventoryEnderChest() {
       super("container.enderchest", 27);
    }
Binary files mcp-mcdev/net/minecraft/src/InventoryLargeChest.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryLargeChest.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryLargeChest.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryLargeChest.java
--- mcp-mcdev/net/minecraft/src/InventoryLargeChest.java	2012-11-29 21:14:50.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryLargeChest.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,16 +1,56 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
 import net.minecraft.src.ItemStack;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
 public class InventoryLargeChest implements IInventory {
 
    private String name;
-   private IInventory upperChest;
-   private IInventory lowerChest;
+   public IInventory upperChest;
+   public IInventory lowerChest;
+   public List transaction = new ArrayList();
 
 
+   public ItemStack[] getContents() {
+      ItemStack[] var1 = new ItemStack[this.getSizeInventory()];
+
+      for(int var2 = 0; var2 < var1.length; ++var2) {
+         var1[var2] = this.getStackInSlot(var2);
+      }
+
+      return var1;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.upperChest.onOpen(var1);
+      this.lowerChest.onOpen(var1);
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.upperChest.onClose(var1);
+      this.lowerChest.onClose(var1);
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      return null;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.upperChest.setMaxStackSize(var1);
+      this.lowerChest.setMaxStackSize(var1);
+   }
+
    public InventoryLargeChest(String var1, IInventory var2, IInventory var3) {
       this.name = var1;
       if(var2 == null) {
@@ -59,7 +99,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return this.upperChest.getInventoryStackLimit();
+      return Math.min(this.upperChest.getInventoryStackLimit(), this.lowerChest.getInventoryStackLimit());
    }
 
    public void onInventoryChanged() {
Binary files mcp-mcdev/net/minecraft/src/InventoryMerchant.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryMerchant.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryMerchant.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryMerchant.java
--- mcp-mcdev/net/minecraft/src/InventoryMerchant.java	2012-11-29 21:14:50.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryMerchant.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,11 +1,15 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
 import net.minecraft.src.IMerchant;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.MerchantRecipe;
 import net.minecraft.src.MerchantRecipeList;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
 public class InventoryMerchant implements IInventory {
 
@@ -14,8 +18,34 @@
    private final EntityPlayer thePlayer;
    private MerchantRecipe currentRecipe;
    private int currentRecipeIndex;
+   public List transaction = new ArrayList();
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.theInventory;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
+   public InventoryHolder getOwner() {
+      return this.thePlayer.getBukkitEntity();
+   }
+
    public InventoryMerchant(EntityPlayer var1, IMerchant var2) {
       this.thePlayer = var1;
       this.theMerchant = var2;
@@ -92,7 +122,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public boolean isUseableByPlayer(EntityPlayer var1) {
Binary files mcp-mcdev/net/minecraft/src/InventoryPlayer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryPlayer.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryPlayer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryPlayer.java
--- mcp-mcdev/net/minecraft/src/InventoryPlayer.java	2012-11-29 21:14:50.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryPlayer.java	2012-11-29 21:41:21.000000000 -0800
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.Block;
 import net.minecraft.src.Entity;
 import net.minecraft.src.EntityPlayer;
@@ -8,6 +10,8 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.NBTTagList;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.inventory.InventoryHolder;
 
 public class InventoryPlayer implements IInventory {
 
@@ -17,8 +21,38 @@
    public EntityPlayer player;
    private ItemStack itemStack;
    public boolean inventoryChanged = false;
+   public List transaction = new ArrayList();
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.mainInventory;
+   }
+
+   public ItemStack[] getArmorContents() {
+      return this.armorInventory;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      return this.player.getBukkitEntity();
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public InventoryPlayer(EntityPlayer var1) {
       this.player = var1;
    }
@@ -51,6 +85,26 @@
       return -1;
    }
 
+   public int canHold(ItemStack var1) {
+      int var2 = var1.stackSize;
+
+      for(int var3 = 0; var3 < this.mainInventory.length; ++var3) {
+         if(this.mainInventory[var3] == null) {
+            return var1.stackSize;
+         }
+
+         if(this.mainInventory[var3] != null && this.mainInventory[var3].itemID == var1.itemID && this.mainInventory[var3].isStackable() && this.mainInventory[var3].stackSize < this.mainInventory[var3].getMaxStackSize() && this.mainInventory[var3].stackSize < this.getInventoryStackLimit() && (!this.mainInventory[var3].getHasSubtypes() || this.mainInventory[var3].getItemDamage() == var1.getItemDamage())) {
+            var2 -= (this.mainInventory[var3].getMaxStackSize() < this.getInventoryStackLimit()?this.mainInventory[var3].getMaxStackSize():this.getInventoryStackLimit()) - this.mainInventory[var3].stackSize;
+         }
+
+         if(var2 <= 0) {
+            return var1.stackSize;
+         }
+      }
+
+      return var1.stackSize - var2;
+   }
+
    public int getFirstEmptyStack() {
       for(int var1 = 0; var1 < this.mainInventory.length; ++var1) {
          if(this.mainInventory[var1] == null) {
@@ -319,7 +373,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public int getDamageVsEntity(Entity var1) {
@@ -397,6 +451,10 @@
    }
 
    public ItemStack getItemStack() {
+      if(this.itemStack != null && this.itemStack.stackSize == 0) {
+         this.setItemStack((ItemStack)null);
+      }
+
       return this.itemStack;
    }
 
Binary files mcp-mcdev/net/minecraft/src/InventoryRepair.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryRepair.class differ
diff -ur mcp-mcdev/net/minecraft/src/InventoryRepair.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryRepair.java
--- mcp-mcdev/net/minecraft/src/InventoryRepair.java	2012-11-29 21:14:50.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/InventoryRepair.java	2012-11-29 21:41:20.000000000 -0800
@@ -1,17 +1,50 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.ContainerRepair;
 import net.minecraft.src.InventoryBasic;
+import net.minecraft.src.ItemStack;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.inventory.InventoryHolder;
 
-class InventoryRepair extends InventoryBasic {
+public class InventoryRepair extends InventoryBasic {
 
-   // $FF: synthetic field
    final ContainerRepair theContainer;
+   public List transaction = new ArrayList();
+   public Player player;
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.inventoryContents;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      return this.player;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    InventoryRepair(ContainerRepair var1, String var2, int var3) {
       super(var2, var3);
       this.theContainer = var1;
+      this.setMaxStackSize(1);
    }
 
    public void onInventoryChanged() {
Binary files mcp-mcdev/net/minecraft/src/ItemBed.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBed.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemBed.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBed.java
--- mcp-mcdev/net/minecraft/src/ItemBed.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBed.java	2012-11-29 21:41:20.000000000 -0800
@@ -8,6 +8,9 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemBed extends Item {
 
@@ -22,36 +25,43 @@
       } else if(var7 != 1) {
          return false;
       } else {
-         ++var5;
-         BlockBed var11 = (BlockBed)Block.bed;
-         int var12 = MathHelper.floor_double((double)(var2.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3;
-         byte var13 = 0;
-         byte var14 = 0;
-         if(var12 == 0) {
-            var14 = 1;
+         int var12 = var5++;
+         BlockBed var14 = (BlockBed)Block.bed;
+         int var15 = MathHelper.floor_double((double)(var2.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3;
+         byte var16 = 0;
+         byte var17 = 0;
+         if(var15 == 0) {
+            var17 = 1;
          }
 
-         if(var12 == 1) {
-            var13 = -1;
+         if(var15 == 1) {
+            var16 = -1;
          }
 
-         if(var12 == 2) {
-            var14 = -1;
+         if(var15 == 2) {
+            var17 = -1;
          }
 
-         if(var12 == 3) {
-            var13 = 1;
+         if(var15 == 3) {
+            var16 = 1;
          }
 
-         if(var2.canPlayerEdit(var4, var5, var6, var7, var1) && var2.canPlayerEdit(var4 + var13, var5, var6 + var14, var7, var1)) {
-            if(var3.isAirBlock(var4, var5, var6) && var3.isAirBlock(var4 + var13, var5, var6 + var14) && var3.doesBlockHaveSolidTopSurface(var4, var5 - 1, var6) && var3.doesBlockHaveSolidTopSurface(var4 + var13, var5 - 1, var6 + var14)) {
-               var3.setBlockAndMetadataWithNotify(var4, var5, var6, var11.blockID, var12);
-               if(var3.getBlockId(var4, var5, var6) == var11.blockID) {
-                  var3.setBlockAndMetadataWithNotify(var4 + var13, var5, var6 + var14, var11.blockID, var12 + 8);
-               }
+         if(var2.canPlayerEdit(var4, var5, var6, var7, var1) && var2.canPlayerEdit(var4 + var16, var5, var6 + var17, var7, var1)) {
+            if(var3.isAirBlock(var4, var5, var6) && var3.isAirBlock(var4 + var16, var5, var6 + var17) && var3.doesBlockHaveSolidTopSurface(var4, var5 - 1, var6) && var3.doesBlockHaveSolidTopSurface(var4 + var16, var5 - 1, var6 + var17)) {
+               CraftBlockState var18 = CraftBlockState.getBlockState(var3, var4, var5, var6);
+               var3.setBlockAndMetadataWithNotify(var4, var5, var6, var14.blockID, var15);
+               BlockPlaceEvent var19 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var18, var4, var12, var6);
+               if(!var19.isCancelled() && var19.canBuild()) {
+                  if(var3.getBlockId(var4, var5, var6) == var14.blockID) {
+                     var3.setBlockAndMetadataWithNotify(var4 + var16, var5, var6 + var17, var14.blockID, var15 + 8);
+                  }
 
-               --var1.stackSize;
-               return true;
+                  --var1.stackSize;
+                  return true;
+               } else {
+                  var19.getBlockPlaced().setTypeIdAndData(var18.getTypeId(), var18.getRawData(), false);
+                  return false;
+               }
             } else {
                return false;
             }
Binary files mcp-mcdev/net/minecraft/src/ItemBlock.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBlock.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemBlock.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBlock.java
--- mcp-mcdev/net/minecraft/src/ItemBlock.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBlock.java	2012-11-29 21:41:19.000000000 -0800
@@ -3,8 +3,12 @@
 import net.minecraft.src.Block;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.Item;
+import net.minecraft.src.ItemSlab;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemBlock extends Item {
 
@@ -22,10 +26,13 @@
    }
 
    public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-      int var11 = var3.getBlockId(var4, var5, var6);
-      if(var11 == Block.snow.blockID) {
+      int var11 = var4;
+      int var12 = var5;
+      int var13 = var6;
+      int var14 = var3.getBlockId(var4, var5, var6);
+      if(var14 == Block.snow.blockID) {
          var7 = 1;
-      } else if(var11 != Block.vine.blockID && var11 != Block.tallGrass.blockID && var11 != Block.deadBush.blockID) {
+      } else if(var14 != Block.vine.blockID && var14 != Block.tallGrass.blockID && var14 != Block.deadBush.blockID) {
          if(var7 == 0) {
             --var5;
          }
@@ -57,23 +64,46 @@
          return false;
       } else if(var5 == 255 && Block.blocksList[this.blockID].blockMaterial.isSolid()) {
          return false;
-      } else if(var3.canPlaceEntityOnSide(this.blockID, var4, var5, var6, false, var7, var2)) {
-         Block var12 = Block.blocksList[this.blockID];
-         int var13 = this.getMetadata(var1.getItemDamage());
-         int var14 = Block.blocksList[this.blockID].func_85104_a(var3, var4, var5, var6, var7, var8, var9, var10, var13);
-         if(var3.setBlockAndMetadataWithNotify(var4, var5, var6, this.blockID, var14)) {
-            if(var3.getBlockId(var4, var5, var6) == this.blockID) {
-               Block.blocksList[this.blockID].onBlockPlacedBy(var3, var4, var5, var6, var2);
-               Block.blocksList[this.blockID].func_85105_g(var3, var4, var5, var6, var14);
+      } else {
+         int var15 = this.blockID;
+         if(var7 == -1 && var1.getItem() instanceof ItemSlab) {
+            if(this.blockID == Block.stoneSingleSlab.blockID) {
+               var15 = Block.stoneDoubleSlab.blockID;
+            } else if(this.blockID == Block.woodSingleSlab.blockID) {
+               var15 = Block.woodDoubleSlab.blockID;
             }
-
-            var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), var12.stepSound.getPlaceSound(), (var12.stepSound.getVolume() + 1.0F) / 2.0F, var12.stepSound.getPitch() * 0.8F);
-            --var1.stackSize;
          }
 
-         return true;
-      } else {
-         return false;
+         if(var15 == this.blockID && !var3.canPlaceEntityOnSide(this.blockID, var4, var5, var6, false, var7, var2)) {
+            return false;
+         } else {
+            Block var16 = Block.blocksList[var15];
+            int var17 = this.getMetadata(var1.getItemDamage());
+            int var18 = Block.blocksList[this.blockID].func_85104_a(var3, var4, var5, var6, var7, var8, var9, var10, var17);
+            CraftBlockState var19 = CraftBlockState.getBlockState(var3, var4, var5, var6);
+            var3.editingBlocks = true;
+            var3.setBlockAndMetadataWithNotify(var4, var5, var6, var15, var18);
+            BlockPlaceEvent var20 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var19, var11, var12, var13);
+            var15 = var3.getBlockId(var4, var5, var6);
+            int var21 = var3.getBlockMetadata(var4, var5, var6);
+            var19.update(true);
+            var3.editingBlocks = false;
+            if(!var20.isCancelled() && var20.canBuild()) {
+               if(var3.setBlockAndMetadataWithNotify(var4, var5, var6, var15, var21)) {
+                  if(var3.getBlockId(var4, var5, var6) == var15 && Block.blocksList[var15] != null) {
+                     Block.blocksList[var15].onBlockPlacedBy(var3, var4, var5, var6, var2);
+                     Block.blocksList[this.blockID].func_85105_g(var3, var4, var5, var6, var21);
+                  }
+
+                  var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), var16.stepSound.getPlaceSound(), (var16.stepSound.getVolume() + 1.0F) / 2.0F, var16.stepSound.getPitch() * 0.8F);
+                  --var1.stackSize;
+               }
+
+               return true;
+            } else {
+               return true;
+            }
+         }
       }
    }
 
Binary files mcp-mcdev/net/minecraft/src/ItemBoat.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBoat.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemBoat.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBoat.java
--- mcp-mcdev/net/minecraft/src/ItemBoat.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBoat.java	2012-11-29 21:41:19.000000000 -0800
@@ -14,6 +14,9 @@
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.player.PlayerInteractEvent;
 
 public class ItemBoat extends Item {
 
@@ -36,48 +39,53 @@
       float var16 = -MathHelper.cos(-var5 * 0.017453292F);
       float var17 = MathHelper.sin(-var5 * 0.017453292F);
       float var18 = var15 * var16;
-      float var20 = var14 * var16;
-      double var21 = 5.0D;
-      Vec3 var23 = var13.addVector((double)var18 * var21, (double)var17 * var21, (double)var20 * var21);
-      MovingObjectPosition var24 = var2.rayTraceBlocks_do(var13, var23, true);
-      if(var24 == null) {
+      float var19 = var14 * var16;
+      double var20 = 5.0D;
+      Vec3 var22 = var13.addVector((double)var18 * var20, (double)var17 * var20, (double)var19 * var20);
+      MovingObjectPosition var23 = var2.rayTraceBlocks_do(var13, var22, true);
+      if(var23 == null) {
          return var1;
       } else {
-         Vec3 var25 = var3.getLook(var4);
-         boolean var26 = false;
-         float var27 = 1.0F;
-         List var28 = var2.getEntitiesWithinAABBExcludingEntity(var3, var3.boundingBox.addCoord(var25.xCoord * var21, var25.yCoord * var21, var25.zCoord * var21).expand((double)var27, (double)var27, (double)var27));
-
-         int var29;
-         for(var29 = 0; var29 < var28.size(); ++var29) {
-            Entity var30 = (Entity)var28.get(var29);
-            if(var30.canBeCollidedWith()) {
-               float var31 = var30.getCollisionBorderSize();
-               AxisAlignedBB var32 = var30.boundingBox.expand((double)var31, (double)var31, (double)var31);
-               if(var32.isVecInside(var13)) {
-                  var26 = true;
+         Vec3 var24 = var3.getLook(var4);
+         boolean var25 = false;
+         float var26 = 1.0F;
+         List var27 = var2.getEntitiesWithinAABBExcludingEntity(var3, var3.boundingBox.addCoord(var24.xCoord * var20, var24.yCoord * var20, var24.zCoord * var20).expand((double)var26, (double)var26, (double)var26));
+
+         int var28;
+         for(var28 = 0; var28 < var27.size(); ++var28) {
+            Entity var29 = (Entity)var27.get(var28);
+            if(var29.canBeCollidedWith()) {
+               float var30 = var29.getCollisionBorderSize();
+               AxisAlignedBB var31 = var29.boundingBox.expand((double)var30, (double)var30, (double)var30);
+               if(var31.isVecInside(var13)) {
+                  var25 = true;
                }
             }
          }
 
-         if(var26) {
+         if(var25) {
             return var1;
          } else {
-            if(var24.typeOfHit == EnumMovingObjectType.TILE) {
-               var29 = var24.blockX;
-               int var33 = var24.blockY;
-               int var34 = var24.blockZ;
-               if(var2.getBlockId(var29, var33, var34) == Block.snow.blockID) {
-                  --var33;
+            if(var23.typeOfHit == EnumMovingObjectType.TILE) {
+               var28 = var23.blockX;
+               int var35 = var23.blockY;
+               int var33 = var23.blockZ;
+               PlayerInteractEvent var34 = CraftEventFactory.callPlayerInteractEvent(var3, Action.RIGHT_CLICK_BLOCK, var28, var35, var33, var23.sideHit, var1);
+               if(var34.isCancelled()) {
+                  return var1;
+               }
+
+               if(var2.getBlockId(var28, var35, var33) == Block.snow.blockID) {
+                  --var35;
                }
 
-               EntityBoat var35 = new EntityBoat(var2, (double)((float)var29 + 0.5F), (double)((float)var33 + 1.0F), (double)((float)var34 + 0.5F));
-               if(!var2.getCollidingBoundingBoxes(var35, var35.boundingBox.expand(-0.1D, -0.1D, -0.1D)).isEmpty()) {
+               EntityBoat var32 = new EntityBoat(var2, (double)((float)var28 + 0.5F), (double)((float)var35 + 1.0F), (double)((float)var33 + 0.5F));
+               if(!var2.getCollidingBoundingBoxes(var32, var32.boundingBox.expand(-0.1D, -0.1D, -0.1D)).isEmpty()) {
                   return var1;
                }
 
                if(!var2.isRemote) {
-                  var2.spawnEntityInWorld(var35);
+                  var2.spawnEntityInWorld(var32);
                }
 
                if(!var3.capabilities.isCreativeMode) {
Binary files mcp-mcdev/net/minecraft/src/ItemBow.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBow.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemBow.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBow.java
--- mcp-mcdev/net/minecraft/src/ItemBow.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBow.java	2012-11-29 21:41:19.000000000 -0800
@@ -9,6 +9,8 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityShootBowEvent;
 
 public class ItemBow extends Item {
 
@@ -52,6 +54,16 @@
             var8.setFire(100);
          }
 
+         EntityShootBowEvent var11 = CraftEventFactory.callEntityShootBowEvent(var3, var1, var8, var7);
+         if(var11.isCancelled()) {
+            var11.getProjectile().remove();
+            return;
+         }
+
+         if(var11.getProjectile() == var8.getBukkitEntity()) {
+            var2.spawnEntityInWorld(var8);
+         }
+
          var1.damageItem(1, var3);
          var2.playSoundAtEntity(var3, "random.bow", 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + var7 * 0.5F);
          if(var5) {
@@ -59,10 +71,6 @@
          } else {
             var3.inventory.consumeInventoryItem(Item.arrow.shiftedIndex);
          }
-
-         if(!var2.isRemote) {
-            var2.spawnEntityInWorld(var8);
-         }
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/ItemBucket.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBucket.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemBucket.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBucket.java
--- mcp-mcdev/net/minecraft/src/ItemBucket.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemBucket.java	2012-11-29 21:41:19.000000000 -0800
@@ -10,6 +10,11 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.player.PlayerBucketEmptyEvent;
+import org.bukkit.event.player.PlayerBucketFillEvent;
 
 public class ItemBucket extends Item {
 
@@ -46,44 +51,66 @@
                   return var1;
                }
 
+               ItemStack var17;
+               PlayerBucketFillEvent var16;
                if(var2.getBlockMaterial(var13, var14, var15) == Material.water && var2.getBlockMetadata(var13, var14, var15) == 0) {
+                  var16 = CraftEventFactory.callPlayerBucketFillEvent(var3, var13, var14, var15, -1, var1, Item.bucketWater);
+                  if(var16.isCancelled()) {
+                     return var1;
+                  }
+
                   var2.setBlockWithNotify(var13, var14, var15, 0);
                   if(var3.capabilities.isCreativeMode) {
                      return var1;
                   }
 
+                  var17 = CraftItemStack.createNMSItemStack(var16.getItemStack());
                   if(--var1.stackSize <= 0) {
-                     return new ItemStack(Item.bucketWater);
+                     return var17;
                   }
 
-                  if(!var3.inventory.addItemStackToInventory(new ItemStack(Item.bucketWater))) {
-                     var3.dropPlayerItem(new ItemStack(Item.bucketWater.shiftedIndex, 1, 0));
+                  if(!var3.inventory.addItemStackToInventory(var17)) {
+                     var3.dropPlayerItem(CraftItemStack.createNMSItemStack(var16.getItemStack()));
                   }
 
                   return var1;
                }
 
                if(var2.getBlockMaterial(var13, var14, var15) == Material.lava && var2.getBlockMetadata(var13, var14, var15) == 0) {
+                  var16 = CraftEventFactory.callPlayerBucketFillEvent(var3, var13, var14, var15, -1, var1, Item.bucketLava);
+                  if(var16.isCancelled()) {
+                     return var1;
+                  }
+
                   var2.setBlockWithNotify(var13, var14, var15, 0);
                   if(var3.capabilities.isCreativeMode) {
                      return var1;
                   }
 
+                  var17 = CraftItemStack.createNMSItemStack(var16.getItemStack());
                   if(--var1.stackSize <= 0) {
-                     return new ItemStack(Item.bucketLava);
+                     return var17;
                   }
 
-                  if(!var3.inventory.addItemStackToInventory(new ItemStack(Item.bucketLava))) {
-                     var3.dropPlayerItem(new ItemStack(Item.bucketLava.shiftedIndex, 1, 0));
+                  if(!var3.inventory.addItemStackToInventory(var17)) {
+                     var3.dropPlayerItem(CraftItemStack.createNMSItemStack(var16.getItemStack()));
                   }
 
                   return var1;
                }
             } else {
                if(this.isFull < 0) {
-                  return new ItemStack(Item.bucketEmpty);
+                  PlayerBucketEmptyEvent var24 = CraftEventFactory.callPlayerBucketEmptyEvent(var3, var13, var14, var15, var12.sideHit, var1);
+                  if(var24.isCancelled()) {
+                     return var1;
+                  }
+
+                  return CraftItemStack.createNMSItemStack(var24.getItemStack());
                }
 
+               int var21 = var13;
+               int var23 = var14;
+               int var18 = var15;
                if(var12.sideHit == 0) {
                   --var14;
                }
@@ -112,12 +139,23 @@
                   return var1;
                }
 
+               PlayerBucketEmptyEvent var19 = CraftEventFactory.callPlayerBucketEmptyEvent(var3, var21, var23, var18, var12.sideHit, var1);
+               if(var19.isCancelled()) {
+                  return var1;
+               }
+
                if(this.tryPlaceContainedLiquid(var2, var5, var7, var9, var13, var14, var15) && !var3.capabilities.isCreativeMode) {
-                  return new ItemStack(Item.bucketEmpty);
+                  return CraftItemStack.createNMSItemStack(var19.getItemStack());
                }
             }
          } else if(this.isFull == 0 && var12.entityHit instanceof EntityCow) {
-            return new ItemStack(Item.bucketMilk);
+            Location var20 = var12.entityHit.getBukkitEntity().getLocation();
+            PlayerBucketFillEvent var22 = CraftEventFactory.callPlayerBucketFillEvent(var3, var20.getBlockX(), var20.getBlockY(), var20.getBlockZ(), -1, var1, Item.bucketMilk);
+            if(var22.isCancelled()) {
+               return var1;
+            }
+
+            return CraftItemStack.createNMSItemStack(var22.getItemStack());
          }
 
          return var1;
Binary files mcp-mcdev/net/minecraft/src/ItemDoor.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemDoor.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemDoor.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemDoor.java
--- mcp-mcdev/net/minecraft/src/ItemDoor.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemDoor.java	2012-11-29 21:41:19.000000000 -0800
@@ -8,6 +8,9 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemDoor extends Item {
 
@@ -38,9 +41,12 @@
                return false;
             } else {
                int var12 = MathHelper.floor_double((double)((var2.rotationYaw + 180.0F) * 4.0F / 360.0F) - 0.5D) & 3;
-               placeDoorBlock(var3, var4, var5, var6, var12, var11);
-               --var1.stackSize;
-               return true;
+               if(!place(var3, var4, var5, var6, var12, var11, var2)) {
+                  return false;
+               } else {
+                  --var1.stackSize;
+                  return true;
+               }
             }
          } else {
             return false;
@@ -49,40 +55,54 @@
    }
 
    public static void placeDoorBlock(World var0, int var1, int var2, int var3, int var4, Block var5) {
-      byte var6 = 0;
+      place(var0, var1, var2, var3, var4, var5, (EntityPlayer)null);
+   }
+
+   public static boolean place(World var0, int var1, int var2, int var3, int var4, Block var5, EntityPlayer var6) {
       byte var7 = 0;
+      byte var8 = 0;
       if(var4 == 0) {
-         var7 = 1;
+         var8 = 1;
       }
 
       if(var4 == 1) {
-         var6 = -1;
+         var7 = -1;
       }
 
       if(var4 == 2) {
-         var7 = -1;
+         var8 = -1;
       }
 
       if(var4 == 3) {
-         var6 = 1;
+         var7 = 1;
       }
 
-      int var8 = (var0.isBlockNormalCube(var1 - var6, var2, var3 - var7)?1:0) + (var0.isBlockNormalCube(var1 - var6, var2 + 1, var3 - var7)?1:0);
-      int var9 = (var0.isBlockNormalCube(var1 + var6, var2, var3 + var7)?1:0) + (var0.isBlockNormalCube(var1 + var6, var2 + 1, var3 + var7)?1:0);
-      boolean var10 = var0.getBlockId(var1 - var6, var2, var3 - var7) == var5.blockID || var0.getBlockId(var1 - var6, var2 + 1, var3 - var7) == var5.blockID;
-      boolean var11 = var0.getBlockId(var1 + var6, var2, var3 + var7) == var5.blockID || var0.getBlockId(var1 + var6, var2 + 1, var3 + var7) == var5.blockID;
-      boolean var12 = false;
-      if(var10 && !var11) {
-         var12 = true;
-      } else if(var9 > var8) {
-         var12 = true;
+      int var9 = (var0.isBlockNormalCube(var1 - var7, var2, var3 - var8)?1:0) + (var0.isBlockNormalCube(var1 - var7, var2 + 1, var3 - var8)?1:0);
+      int var10 = (var0.isBlockNormalCube(var1 + var7, var2, var3 + var8)?1:0) + (var0.isBlockNormalCube(var1 + var7, var2 + 1, var3 + var8)?1:0);
+      boolean var11 = var0.getBlockId(var1 - var7, var2, var3 - var8) == var5.blockID || var0.getBlockId(var1 - var7, var2 + 1, var3 - var8) == var5.blockID;
+      boolean var12 = var0.getBlockId(var1 + var7, var2, var3 + var8) == var5.blockID || var0.getBlockId(var1 + var7, var2 + 1, var3 + var8) == var5.blockID;
+      boolean var13 = false;
+      if(var11 && !var12) {
+         var13 = true;
+      } else if(var10 > var9) {
+         var13 = true;
       }
 
+      CraftBlockState var14 = CraftBlockState.getBlockState(var0, var1, var2, var3);
       var0.editingBlocks = true;
       var0.setBlockAndMetadataWithNotify(var1, var2, var3, var5.blockID, var4);
-      var0.setBlockAndMetadataWithNotify(var1, var2 + 1, var3, var5.blockID, 8 | (var12?1:0));
+      if(var6 != null) {
+         BlockPlaceEvent var15 = CraftEventFactory.callBlockPlaceEvent(var0, var6, var14, var1, var2, var3);
+         if(var15.isCancelled() || !var15.canBuild()) {
+            var15.getBlockPlaced().setTypeIdAndData(var14.getTypeId(), var14.getRawData(), false);
+            return false;
+         }
+      }
+
+      var0.setBlockAndMetadataWithNotify(var1, var2 + 1, var3, var5.blockID, 8 | (var13?1:0));
       var0.editingBlocks = false;
       var0.notifyBlocksOfNeighborChange(var1, var2, var3, var5.blockID);
       var0.notifyBlocksOfNeighborChange(var1, var2 + 1, var3, var5.blockID);
+      return true;
    }
 }
Binary files mcp-mcdev/net/minecraft/src/ItemDye.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemDye.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemDye.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemDye.java
--- mcp-mcdev/net/minecraft/src/ItemDye.java	2012-11-29 21:14:49.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemDye.java	2012-11-29 21:41:19.000000000 -0800
@@ -11,11 +11,16 @@
 import net.minecraft.src.CreativeTabs;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EntitySheep;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
+import org.bukkit.DyeColor;
+import org.bukkit.entity.Player;
+import org.bukkit.entity.Sheep;
+import org.bukkit.event.entity.SheepDyeWoolEvent;
 
 public class ItemDye extends Item {
 
@@ -40,22 +45,24 @@
          return false;
       } else {
          int var11;
-         int var12;
          int var13;
+         int var14;
          if(var1.getItemDamage() == 15) {
             var11 = var3.getBlockId(var4, var5, var6);
+            Player var17;
             if(var11 == Block.sapling.blockID) {
                if(!var3.isRemote) {
-                  ((BlockSapling)Block.sapling).growTree(var3, var4, var5, var6, var3.rand);
-                  --var1.stackSize;
+                  var17 = var2 instanceof EntityPlayerMP?(Player)var2.getBukkitEntity():null;
+                  ((BlockSapling)Block.sapling).grow(var3, var4, var5, var6, var3.rand, true, var17, var1);
                }
 
                return true;
             }
 
             if(var11 == Block.mushroomBrown.blockID || var11 == Block.mushroomRed.blockID) {
-               if(!var3.isRemote && ((BlockMushroom)Block.blocksList[var11]).fertilizeMushroom(var3, var4, var5, var6, var3.rand)) {
-                  --var1.stackSize;
+               if(!var3.isRemote) {
+                  var17 = var2 instanceof EntityPlayerMP?(Player)var2.getBukkitEntity():null;
+                  ((BlockMushroom)Block.blocksList[var11]).grow(var3, var4, var5, var6, var3.rand, true, var17, var1);
                }
 
                return true;
@@ -100,32 +107,32 @@
                if(!var3.isRemote) {
                   --var1.stackSize;
 
-                  label133:
-                  for(var12 = 0; var12 < 128; ++var12) {
-                     var13 = var4;
-                     int var14 = var5 + 1;
+                  label140:
+                  for(var13 = 0; var13 < 128; ++var13) {
+                     var14 = var4;
+                     int var12 = var5 + 1;
                      int var15 = var6;
 
-                     for(int var16 = 0; var16 < var12 / 16; ++var16) {
-                        var13 += itemRand.nextInt(3) - 1;
-                        var14 += (itemRand.nextInt(3) - 1) * itemRand.nextInt(3) / 2;
+                     for(int var16 = 0; var16 < var13 / 16; ++var16) {
+                        var14 += itemRand.nextInt(3) - 1;
+                        var12 += (itemRand.nextInt(3) - 1) * itemRand.nextInt(3) / 2;
                         var15 += itemRand.nextInt(3) - 1;
-                        if(var3.getBlockId(var13, var14 - 1, var15) != Block.grass.blockID || var3.isBlockNormalCube(var13, var14, var15)) {
-                           continue label133;
+                        if(var3.getBlockId(var14, var12 - 1, var15) != Block.grass.blockID || var3.isBlockNormalCube(var14, var12, var15)) {
+                           continue label140;
                         }
                      }
 
-                     if(var3.getBlockId(var13, var14, var15) == 0) {
+                     if(var3.getBlockId(var14, var12, var15) == 0) {
                         if(itemRand.nextInt(10) != 0) {
-                           if(Block.tallGrass.canBlockStay(var3, var13, var14, var15)) {
-                              var3.setBlockAndMetadataWithNotify(var13, var14, var15, Block.tallGrass.blockID, 1);
+                           if(Block.tallGrass.canBlockStay(var3, var14, var12, var15)) {
+                              var3.setBlockAndMetadataWithNotify(var14, var12, var15, Block.tallGrass.blockID, 1);
                            }
                         } else if(itemRand.nextInt(3) != 0) {
-                           if(Block.plantYellow.canBlockStay(var3, var13, var14, var15)) {
-                              var3.setBlockWithNotify(var13, var14, var15, Block.plantYellow.blockID);
+                           if(Block.plantYellow.canBlockStay(var3, var14, var12, var15)) {
+                              var3.setBlockWithNotify(var14, var12, var15, Block.plantYellow.blockID);
                            }
-                        } else if(Block.plantRed.canBlockStay(var3, var13, var14, var15)) {
-                           var3.setBlockWithNotify(var13, var14, var15, Block.plantRed.blockID);
+                        } else if(Block.plantRed.canBlockStay(var3, var14, var12, var15)) {
+                           var3.setBlockWithNotify(var14, var12, var15, Block.plantRed.blockID);
                         }
                      }
                   }
@@ -135,8 +142,8 @@
             }
          } else if(var1.getItemDamage() == 3) {
             var11 = var3.getBlockId(var4, var5, var6);
-            var12 = var3.getBlockMetadata(var4, var5, var6);
-            if(var11 == Block.wood.blockID && BlockLog.limitToValidMetadata(var12) == 3) {
+            var13 = var3.getBlockMetadata(var4, var5, var6);
+            if(var11 == Block.wood.blockID && BlockLog.limitToValidMetadata(var13) == 3) {
                if(var7 == 0) {
                   return false;
                }
@@ -162,8 +169,8 @@
                }
 
                if(var3.isAirBlock(var4, var5, var6)) {
-                  var13 = Block.blocksList[Block.cocoaPlant.blockID].func_85104_a(var3, var4, var5, var6, var7, var8, var9, var10, 0);
-                  var3.setBlockAndMetadataWithNotify(var4, var5, var6, Block.cocoaPlant.blockID, var13);
+                  var14 = Block.blocksList[Block.cocoaPlant.blockID].func_85104_a(var3, var4, var5, var6, var7, var8, var9, var10, 0);
+                  var3.setBlockAndMetadataWithNotify(var4, var5, var6, Block.cocoaPlant.blockID, var14);
                   if(!var2.capabilities.isCreativeMode) {
                      --var1.stackSize;
                   }
@@ -182,7 +189,15 @@
          EntitySheep var3 = (EntitySheep)var2;
          int var4 = BlockCloth.getBlockFromDye(var1.getItemDamage());
          if(!var3.getSheared() && var3.getFleeceColor() != var4) {
-            var3.setFleeceColor(var4);
+            byte var5 = (byte)var4;
+            SheepDyeWoolEvent var6 = new SheepDyeWoolEvent((Sheep)var3.getBukkitEntity(), DyeColor.getByData(var5));
+            var3.worldObj.getServer().getPluginManager().callEvent(var6);
+            if(var6.isCancelled()) {
+               return false;
+            }
+
+            byte var7 = var6.getColor().getData();
+            var3.setFleeceColor(var7);
             --var1.stackSize;
          }
 
Binary files mcp-mcdev/net/minecraft/src/ItemFireball.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFireball.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemFireball.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFireball.java
--- mcp-mcdev/net/minecraft/src/ItemFireball.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFireball.java	2012-11-29 21:41:19.000000000 -0800
@@ -6,6 +6,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockIgniteEvent;
+import org.bukkit.event.block.BlockIgniteEvent.IgniteCause;
 
 public class ItemFireball extends Item {
 
@@ -47,6 +50,18 @@
          } else {
             int var11 = var3.getBlockId(var4, var5, var6);
             if(var11 == 0) {
+               org.bukkit.block.Block var12 = var3.getWorld().getBlockAt(var4, var5, var6);
+               Player var13 = (Player)var2.getBukkitEntity();
+               BlockIgniteEvent var14 = new BlockIgniteEvent(var12, IgniteCause.FIREBALL, var13);
+               var3.getServer().getPluginManager().callEvent(var14);
+               if(var14.isCancelled()) {
+                  if(!var2.capabilities.isCreativeMode) {
+                     --var1.stackSize;
+                  }
+
+                  return false;
+               }
+
                var3.playSoundEffect((double)var4 + 0.5D, (double)var5 + 0.5D, (double)var6 + 0.5D, "fire.ignite", 1.0F, itemRand.nextFloat() * 0.4F + 0.8F);
                var3.setBlockWithNotify(var4, var5, var6, Block.fire.blockID);
             }
Binary files mcp-mcdev/net/minecraft/src/ItemFishingRod.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFishingRod.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemFishingRod.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFishingRod.java
--- mcp-mcdev/net/minecraft/src/ItemFishingRod.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFishingRod.java	2012-11-29 21:41:19.000000000 -0800
@@ -6,6 +6,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerFishEvent;
+import org.bukkit.event.player.PlayerFishEvent.State;
 
 public class ItemFishingRod extends Item {
 
@@ -22,6 +25,12 @@
          var1.damageItem(var4, var3);
          var3.swingItem();
       } else {
+         PlayerFishEvent var5 = new PlayerFishEvent((Player)var3.getBukkitEntity(), (org.bukkit.entity.Entity)null, State.FISHING);
+         var2.getServer().getPluginManager().callEvent(var5);
+         if(var5.isCancelled()) {
+            return var1;
+         }
+
          var2.playSoundAtEntity(var3, "random.bow", 0.5F, 0.4F / (itemRand.nextFloat() * 0.4F + 0.8F));
          if(!var2.isRemote) {
             var2.spawnEntityInWorld(new EntityFishHook(var2, var3));
Binary files mcp-mcdev/net/minecraft/src/ItemFlintAndSteel.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFlintAndSteel.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemFlintAndSteel.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFlintAndSteel.java
--- mcp-mcdev/net/minecraft/src/ItemFlintAndSteel.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFlintAndSteel.java	2012-11-29 21:41:19.000000000 -0800
@@ -6,6 +6,12 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockIgniteEvent;
+import org.bukkit.event.block.BlockPlaceEvent;
+import org.bukkit.event.block.BlockIgniteEvent.IgniteCause;
 
 public class ItemFlintAndSteel extends Item {
 
@@ -17,6 +23,9 @@
    }
 
    public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
+      int var11 = var4;
+      int var12 = var5;
+      int var13 = var6;
       if(var7 == 0) {
          --var5;
       }
@@ -44,10 +53,25 @@
       if(!var2.canPlayerEdit(var4, var5, var6, var7, var1)) {
          return false;
       } else {
-         int var11 = var3.getBlockId(var4, var5, var6);
-         if(var11 == 0) {
+         int var14 = var3.getBlockId(var4, var5, var6);
+         if(var14 == 0) {
+            org.bukkit.block.Block var15 = var3.getWorld().getBlockAt(var4, var5, var6);
+            Player var16 = (Player)var2.getBukkitEntity();
+            BlockIgniteEvent var17 = new BlockIgniteEvent(var15, IgniteCause.FLINT_AND_STEEL, var16);
+            var3.getServer().getPluginManager().callEvent(var17);
+            if(var17.isCancelled()) {
+               var1.damageItem(1, var2);
+               return false;
+            }
+
+            CraftBlockState var18 = CraftBlockState.getBlockState(var3, var4, var5, var6);
             var3.playSoundEffect((double)var4 + 0.5D, (double)var5 + 0.5D, (double)var6 + 0.5D, "fire.ignite", 1.0F, itemRand.nextFloat() * 0.4F + 0.8F);
             var3.setBlockWithNotify(var4, var5, var6, Block.fire.blockID);
+            BlockPlaceEvent var19 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var18, var11, var12, var13);
+            if(var19.isCancelled() || !var19.canBuild()) {
+               var19.getBlockPlaced().setTypeIdAndData(0, (byte)0, false);
+               return false;
+            }
          }
 
          var1.damageItem(1, var2);
Binary files mcp-mcdev/net/minecraft/src/ItemFood.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFood.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemFood.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFood.java
--- mcp-mcdev/net/minecraft/src/ItemFood.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemFood.java	2012-11-29 21:41:19.000000000 -0800
@@ -2,11 +2,15 @@
 
 import net.minecraft.src.CreativeTabs;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EnumAction;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.Packet8UpdateHealth;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.FoodLevelChangeEvent;
 
 public class ItemFood extends Item {
 
@@ -36,7 +40,13 @@
 
    public ItemStack onFoodEaten(ItemStack var1, World var2, EntityPlayer var3) {
       --var1.stackSize;
-      var3.getFoodStats().addStats(this);
+      int var4 = var3.getFoodStats().foodLevel;
+      FoodLevelChangeEvent var5 = CraftEventFactory.callFoodLevelChangeEvent(var3, this.getHealAmount() + var4);
+      if(!var5.isCancelled()) {
+         var3.getFoodStats().addStats(var5.getFoodLevel() - var4, this.getSaturationModifier());
+      }
+
+      ((EntityPlayerMP)var3).playerNetServerHandler.sendPacket(new Packet8UpdateHealth(var3.getHealth(), var3.getFoodStats().foodLevel, var3.getFoodStats().foodSaturationLevel));
       var2.playSoundAtEntity(var3, "random.burp", 0.5F, var2.rand.nextFloat() * 0.1F + 0.9F);
       this.func_77849_c(var1, var2, var3);
       return var1;
Binary files mcp-mcdev/net/minecraft/src/ItemHangingEntity.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemHangingEntity.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemHangingEntity.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemHangingEntity.java
--- mcp-mcdev/net/minecraft/src/ItemHangingEntity.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemHangingEntity.java	2012-11-29 21:41:19.000000000 -0800
@@ -9,6 +9,13 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.block.BlockFace;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.entity.Hanging;
+import org.bukkit.entity.Painting;
+import org.bukkit.entity.Player;
+import org.bukkit.event.hanging.HangingPlaceEvent;
+import org.bukkit.event.painting.PaintingPlaceEvent;
 
 public class ItemHangingEntity extends Item {
 
@@ -34,6 +41,22 @@
          } else {
             if(var12 != null && var12.onValidSurface()) {
                if(!var3.isRemote) {
+                  Player var13 = var2 == null?null:(Player)var2.getBukkitEntity();
+                  org.bukkit.block.Block var14 = var3.getWorld().getBlockAt(var4, var5, var6);
+                  BlockFace var15 = CraftBlock.notchToBlockFace(var7);
+                  HangingPlaceEvent var16 = new HangingPlaceEvent((Hanging)var12.getBukkitEntity(), var13, var14, var15);
+                  var3.getServer().getPluginManager().callEvent(var16);
+                  PaintingPlaceEvent var17 = null;
+                  if(var12 instanceof EntityPainting) {
+                     var17 = new PaintingPlaceEvent((Painting)var12.getBukkitEntity(), var13, var14, var15);
+                     var17.setCancelled(var16.isCancelled());
+                     var3.getServer().getPluginManager().callEvent(var17);
+                  }
+
+                  if(var16.isCancelled() || var17 != null && var17.isCancelled()) {
+                     return false;
+                  }
+
                   var3.spawnEntityInWorld(var12);
                }
 
Binary files mcp-mcdev/net/minecraft/src/ItemHoe.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemHoe.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemHoe.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemHoe.java
--- mcp-mcdev/net/minecraft/src/ItemHoe.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemHoe.java	2012-11-29 21:41:19.000000000 -0800
@@ -7,6 +7,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemHoe extends Item {
 
@@ -35,9 +38,16 @@
             if(var3.isRemote) {
                return true;
             } else {
+               CraftBlockState var14 = CraftBlockState.getBlockState(var3, var4, var5, var6);
                var3.setBlockWithNotify(var4, var5, var6, var13.blockID);
-               var1.damageItem(1, var2);
-               return true;
+               BlockPlaceEvent var15 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var14, var4, var5, var6);
+               if(!var15.isCancelled() && var15.canBuild()) {
+                  var1.damageItem(1, var2);
+                  return true;
+               } else {
+                  var15.getBlockPlaced().setTypeId(var14.getTypeId());
+                  return false;
+               }
             }
          }
       }
Binary files mcp-mcdev/net/minecraft/src/ItemInWorldManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemInWorldManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemInWorldManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemInWorldManager.java
--- mcp-mcdev/net/minecraft/src/ItemInWorldManager.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemInWorldManager.java	2012-11-29 21:41:19.000000000 -0800
@@ -1,13 +1,21 @@
 package net.minecraft.src;
 
 import net.minecraft.src.Block;
+import net.minecraft.src.EnchantmentHelper;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EnumGameType;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.Packet53BlockChange;
+import net.minecraft.src.TileEntity;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldServer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.Event.Result;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.BlockBreakEvent;
+import org.bukkit.event.block.BlockDamageEvent;
+import org.bukkit.event.player.PlayerInteractEvent;
 
 public class ItemInWorldManager {
 
@@ -34,6 +42,10 @@
       this.theWorld = var1;
    }
 
+   public ItemInWorldManager(WorldServer var1) {
+      this((World)var1);
+   }
+
    public void setGameType(EnumGameType var1) {
       this.gameType = var1;
       var1.configurePlayerCapabilities(this.thisPlayerMP.capabilities);
@@ -57,7 +69,7 @@
    }
 
    public void updateBlockRemoving() {
-      ++this.curblockDamage;
+      this.curblockDamage = (int)(System.currentTimeMillis() / 50L);
       int var1;
       float var4;
       int var5;
@@ -101,40 +113,81 @@
    }
 
    public void blockClicked(int var1, int var2, int var3, int var4) {
+      PlayerInteractEvent var5 = CraftEventFactory.callPlayerInteractEvent(this.thisPlayerMP, Action.LEFT_CLICK_BLOCK, var1, var2, var3, var4, this.thisPlayerMP.inventory.getCurrentItem());
       if(!this.gameType.isAdventure() || this.thisPlayerMP.canCurrentToolHarvestBlock(var1, var2, var3)) {
+         if(var5.isCancelled()) {
+            this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+            TileEntity var10 = this.theWorld.getBlockTileEntity(var1, var2, var3);
+            if(var10 != null) {
+               this.thisPlayerMP.playerNetServerHandler.sendPacket(var10.getDescriptionPacket());
+            }
+
+            return;
+         }
+
          if(this.isCreative()) {
             if(!this.theWorld.extinguishFire((EntityPlayer)null, var1, var2, var3, var4)) {
                this.tryHarvestBlock(var1, var2, var3);
             }
-
          } else {
             this.theWorld.extinguishFire(this.thisPlayerMP, var1, var2, var3, var4);
             this.initialDamage = this.curblockDamage;
-            float var5 = 1.0F;
-            int var6 = this.theWorld.getBlockId(var1, var2, var3);
-            if(var6 > 0) {
-               Block.blocksList[var6].onBlockClicked(this.theWorld, var1, var2, var3, this.thisPlayerMP);
-               var5 = Block.blocksList[var6].getPlayerRelativeBlockHardness(this.thisPlayerMP, this.thisPlayerMP.worldObj, var1, var2, var3);
+            float var6 = 1.0F;
+            int var7 = this.theWorld.getBlockId(var1, var2, var3);
+            if(var5.useInteractedBlock() == Result.DENY) {
+               if(var7 == Block.doorWood.blockID) {
+                  boolean var8 = (this.theWorld.getBlockMetadata(var1, var2, var3) & 8) == 0;
+                  this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+                  this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2 + (var8?1:-1), var3, this.theWorld));
+               } else if(var7 == Block.trapdoor.blockID) {
+                  this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+               }
+            } else if(var7 > 0) {
+               Block.blocksList[var7].onBlockClicked(this.theWorld, var1, var2, var3, this.thisPlayerMP);
+               this.theWorld.extinguishFire((EntityPlayer)null, var1, var2, var3, var4);
+            }
+
+            if(var7 > 0) {
+               var6 = Block.blocksList[var7].getPlayerRelativeBlockHardness(this.thisPlayerMP, this.theWorld, var1, var2, var3);
+            }
+
+            if(var5.useItemInHand() == Result.DENY) {
+               if(var6 > 1.0F) {
+                  this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+               }
+
+               return;
+            }
+
+            BlockDamageEvent var11 = CraftEventFactory.callBlockDamageEvent(this.thisPlayerMP, var1, var2, var3, this.thisPlayerMP.inventory.getCurrentItem(), var6 >= 1.0F);
+            if(var11.isCancelled()) {
+               this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+               return;
             }
 
-            if(var6 > 0 && var5 >= 1.0F) {
+            if(var11.getInstaBreak()) {
+               var6 = 2.0F;
+            }
+
+            if(var7 > 0 && var6 >= 1.0F) {
                this.tryHarvestBlock(var1, var2, var3);
             } else {
                this.isPartiallyDestroyedBlockWhole = true;
                this.curBlockX = var1;
                this.curBlockY = var2;
                this.curBlockZ = var3;
-               int var7 = (int)(var5 * 10.0F);
-               this.theWorld.destroyBlockInWorldPartially(this.thisPlayerMP.entityId, var1, var2, var3, var7);
-               this.durabilityRemainingOnBlock = var7;
+               int var9 = (int)(var6 * 10.0F);
+               this.theWorld.destroyBlockInWorldPartially(this.thisPlayerMP.entityId, var1, var2, var3, var9);
+               this.durabilityRemainingOnBlock = var9;
             }
-
          }
       }
+
    }
 
    public void blockRemoving(int var1, int var2, int var3) {
       if(var1 == this.curBlockX && var2 == this.curBlockY && var3 == this.curBlockZ) {
+         this.curblockDamage = (int)(System.currentTimeMillis() / 50L);
          int var4 = this.curblockDamage - this.initialDamage;
          int var5 = this.theWorld.getBlockId(var1, var2, var3);
          if(var5 != 0) {
@@ -153,6 +206,8 @@
                this.field_73093_n = this.initialDamage;
             }
          }
+      } else {
+         this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
       }
 
    }
@@ -178,31 +233,71 @@
    }
 
    public boolean tryHarvestBlock(int var1, int var2, int var3) {
-      if(this.gameType.isAdventure() && !this.thisPlayerMP.canCurrentToolHarvestBlock(var1, var2, var3)) {
+      BlockBreakEvent var4 = null;
+      if(this.thisPlayerMP instanceof EntityPlayerMP) {
+         org.bukkit.block.Block var5 = this.theWorld.getWorld().getBlockAt(var1, var2, var3);
+         if(this.theWorld.getBlockTileEntity(var1, var2, var3) == null) {
+            Packet53BlockChange var6 = new Packet53BlockChange(var1, var2, var3, this.theWorld);
+            var6.type = 0;
+            var6.metadata = 0;
+            this.thisPlayerMP.playerNetServerHandler.sendPacket(var6);
+         }
+
+         var4 = new BlockBreakEvent(var5, this.thisPlayerMP.getBukkitEntity());
+         var4.setCancelled(this.gameType.isAdventure() && !this.thisPlayerMP.canCurrentToolHarvestBlock(var1, var2, var3));
+         Block var12 = Block.blocksList[var5.getTypeId()];
+         if(var12 != null && !var4.isCancelled() && !this.isCreative() && this.thisPlayerMP.canHarvestBlock(var12) && (!var12.canSilkHarvest() || !EnchantmentHelper.getSilkTouchModifier(this.thisPlayerMP))) {
+            byte var7 = var5.getData();
+            int var8 = EnchantmentHelper.getFortuneModifier(this.thisPlayerMP);
+            var4.setExpToDrop(var12.getExpDrop(this.theWorld, var7, var8));
+         }
+
+         this.theWorld.getServer().getPluginManager().callEvent(var4);
+         if(var4.isCancelled()) {
+            this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+            TileEntity var14 = this.theWorld.getBlockTileEntity(var1, var2, var3);
+            if(var14 != null) {
+               this.thisPlayerMP.playerNetServerHandler.sendPacket(var14.getDescriptionPacket());
+            }
+
+            return false;
+         }
+      }
+
+      int var10 = this.theWorld.getBlockId(var1, var2, var3);
+      if(Block.blocksList[var10] == null) {
          return false;
       } else {
-         int var4 = this.theWorld.getBlockId(var1, var2, var3);
-         int var5 = this.theWorld.getBlockMetadata(var1, var2, var3);
-         this.theWorld.playAuxSFXAtEntity(this.thisPlayerMP, 2001, var1, var2, var3, var4 + (this.theWorld.getBlockMetadata(var1, var2, var3) << 12));
-         boolean var6 = this.removeBlock(var1, var2, var3);
-         if(this.isCreative()) {
-            this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+         int var11 = this.theWorld.getBlockMetadata(var1, var2, var3);
+         if(var10 == Block.skull.blockID && !this.isCreative()) {
+            Block.skull.dropBlockAsItemWithChance(this.theWorld, var1, var2, var3, var11, 1.0F, 0);
+            return this.removeBlock(var1, var2, var3);
          } else {
-            ItemStack var7 = this.thisPlayerMP.getCurrentEquippedItem();
-            boolean var8 = this.thisPlayerMP.canHarvestBlock(Block.blocksList[var4]);
-            if(var7 != null) {
-               var7.onBlockDestroyed(this.theWorld, var4, var1, var2, var3, this.thisPlayerMP);
-               if(var7.stackSize == 0) {
-                  this.thisPlayerMP.destroyCurrentEquippedItem();
+            this.theWorld.playAuxSFXAtEntity(this.thisPlayerMP, 2001, var1, var2, var3, var10 + (this.theWorld.getBlockMetadata(var1, var2, var3) << 12));
+            boolean var13 = this.removeBlock(var1, var2, var3);
+            if(this.isCreative()) {
+               this.thisPlayerMP.playerNetServerHandler.sendPacket(new Packet53BlockChange(var1, var2, var3, this.theWorld));
+            } else {
+               ItemStack var15 = this.thisPlayerMP.getCurrentEquippedItem();
+               boolean var9 = this.thisPlayerMP.canHarvestBlock(Block.blocksList[var10]);
+               if(var15 != null) {
+                  var15.onBlockDestroyed(this.theWorld, var10, var1, var2, var3, this.thisPlayerMP);
+                  if(var15.stackSize == 0) {
+                     this.thisPlayerMP.destroyCurrentEquippedItem();
+                  }
+               }
+
+               if(var13 && var9) {
+                  Block.blocksList[var10].harvestBlock(this.theWorld, this.thisPlayerMP, var1, var2, var3, var11);
                }
             }
 
-            if(var6 && var8) {
-               Block.blocksList[var4].harvestBlock(this.theWorld, this.thisPlayerMP, var1, var2, var3, var5);
+            if(var13 && var4 != null) {
+               Block.blocksList[var10].dropXpOnBlockBreak(this.theWorld, var1, var2, var3, var4.getExpToDrop());
             }
-         }
 
-         return var6;
+            return var13;
+         }
       }
    }
 
@@ -235,20 +330,36 @@
 
    public boolean activateBlockOrUseItem(EntityPlayer var1, World var2, ItemStack var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
       int var11 = var2.getBlockId(var4, var5, var6);
-      if(var11 > 0 && Block.blocksList[var11].onBlockActivated(var2, var4, var5, var6, var1, var7, var8, var9, var10)) {
-         return true;
-      } else if(var3 == null) {
-         return false;
-      } else if(this.isCreative()) {
-         int var12 = var3.getItemDamage();
-         int var13 = var3.stackSize;
-         boolean var14 = var3.tryPlaceItemIntoWorld(var1, var2, var4, var5, var6, var7, var8, var9, var10);
-         var3.setItemDamage(var12);
-         var3.stackSize = var13;
-         return var14;
-      } else {
-         return var3.tryPlaceItemIntoWorld(var1, var2, var4, var5, var6, var7, var8, var9, var10);
+      boolean var12 = false;
+      if(var11 > 0) {
+         PlayerInteractEvent var13 = CraftEventFactory.callPlayerInteractEvent(var1, Action.RIGHT_CLICK_BLOCK, var4, var5, var6, var7, var3);
+         if(var13.useInteractedBlock() == Result.DENY) {
+            if(var11 == Block.doorWood.blockID) {
+               boolean var14 = (var2.getBlockMetadata(var4, var5, var6) & 8) == 0;
+               ((EntityPlayerMP)var1).playerNetServerHandler.sendPacket(new Packet53BlockChange(var4, var5 + (var14?1:-1), var6, var2));
+            }
+
+            var12 = var13.useItemInHand() != Result.ALLOW;
+         } else {
+            var12 = Block.blocksList[var11].onBlockActivated(var2, var4, var5, var6, var1, var7, var8, var9, var10);
+         }
+
+         if(var3 != null && !var12) {
+            int var16 = var3.getItemDamage();
+            int var15 = var3.stackSize;
+            var12 = var3.tryPlaceItemIntoWorld(var1, var2, var4, var5, var6, var7, var8, var9, var10);
+            if(this.isCreative()) {
+               var3.setItemDamage(var16);
+               var3.stackSize = var15;
+            }
+         }
+
+         if(var3 != null && (!var12 && var13.useItemInHand() != Result.DENY || var13.useItemInHand() == Result.ALLOW)) {
+            this.tryUseItem(var1, var2, var3);
+         }
       }
+
+      return var12;
    }
 
    public void setWorld(WorldServer var1) {
Binary files mcp-mcdev/net/minecraft/src/ItemLilyPad.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemLilyPad.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemLilyPad.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemLilyPad.java
--- mcp-mcdev/net/minecraft/src/ItemLilyPad.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemLilyPad.java	2012-11-29 21:41:18.000000000 -0800
@@ -8,6 +8,9 @@
 import net.minecraft.src.Material;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemLilyPad extends ItemColored {
 
@@ -33,7 +36,14 @@
             }
 
             if(var2.getBlockMaterial(var5, var6, var7) == Material.water && var2.getBlockMetadata(var5, var6, var7) == 0 && var2.isAirBlock(var5, var6 + 1, var7)) {
+               CraftBlockState var8 = CraftBlockState.getBlockState(var2, var5, var6 + 1, var7);
                var2.setBlockWithNotify(var5, var6 + 1, var7, Block.waterlily.blockID);
+               BlockPlaceEvent var9 = CraftEventFactory.callBlockPlaceEvent(var2, var3, var8, var5, var6, var7);
+               if(var9.isCancelled() || !var9.canBuild()) {
+                  var9.getBlockPlaced().setTypeId(0);
+                  return var1;
+               }
+
                if(!var3.capabilities.isCreativeMode) {
                   --var1.stackSize;
                }
Binary files mcp-mcdev/net/minecraft/src/ItemMap.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMap.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemMap.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMap.java
--- mcp-mcdev/net/minecraft/src/ItemMap.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMap.java	2012-11-29 21:41:18.000000000 -0800
@@ -14,6 +14,9 @@
 import net.minecraft.src.Packet;
 import net.minecraft.src.Packet131MapData;
 import net.minecraft.src.World;
+import net.minecraft.src.WorldServer;
+import org.bukkit.Bukkit;
+import org.bukkit.event.server.MapInitializeEvent;
 
 public class ItemMap extends ItemMapBase {
 
@@ -33,16 +36,18 @@
          int var5 = 128 * (1 << var4.scale);
          var4.xCenter = Math.round((float)var2.getWorldInfo().getSpawnX() / (float)var5) * var5;
          var4.zCenter = Math.round((float)(var2.getWorldInfo().getSpawnZ() / var5)) * var5;
-         var4.dimension = (byte)var2.provider.dimensionId;
+         var4.dimension = (byte)((WorldServer)var2).dimension;
          var4.markDirty();
          var2.setItemData(var3, var4);
+         MapInitializeEvent var6 = new MapInitializeEvent(var4.mapView);
+         Bukkit.getServer().getPluginManager().callEvent(var6);
       }
 
       return var4;
    }
 
    public void updateMapData(World var1, Entity var2, MapData var3) {
-      if(var1.provider.dimensionId == var3.dimension && var2 instanceof EntityPlayer) {
+      if(((WorldServer)var1).dimension == var3.dimension && var2 instanceof EntityPlayer) {
          short var4 = 128;
          short var5 = 128;
          int var6 = 1 << var3.scale;
@@ -122,11 +127,11 @@
                                        var36 = var33 - 1;
                                        boolean var37 = false;
 
-                                       int var44;
+                                       int var38;
                                        do {
-                                          var44 = var25.getBlockID(var31 + var26, var36--, var32 + var27);
+                                          var38 = var25.getBlockID(var31 + var26, var36--, var32 + var27);
                                           ++var28;
-                                       } while(var36 > 0 && var44 != 0 && Block.blocksList[var44].blockMaterial.isLiquid());
+                                       } while(var36 > 0 && var38 != 0 && Block.blocksList[var38].blockMaterial.isLiquid());
                                     }
                                  }
 
@@ -147,28 +152,28 @@
                            }
                         }
 
-                        double var38 = (var29 - var16) * 4.0D / (double)(var6 + 4) + ((double)(var13 + var18 & 1) - 0.5D) * 0.4D;
-                        byte var41 = 1;
-                        if(var38 > 0.6D) {
-                           var41 = 2;
+                        double var39 = (var29 - var16) * 4.0D / (double)(var6 + 4) + ((double)(var13 + var18 & 1) - 0.5D) * 0.4D;
+                        byte var44 = 1;
+                        if(var39 > 0.6D) {
+                           var44 = 2;
                         }
 
-                        if(var38 < -0.6D) {
-                           var41 = 0;
+                        if(var39 < -0.6D) {
+                           var44 = 0;
                         }
 
                         var36 = 0;
                         if(var32 > 0) {
                            MapColor var43 = Block.blocksList[var32].blockMaterial.materialMapColor;
                            if(var43 == MapColor.waterColor) {
-                              var38 = (double)var28 * 0.1D + (double)(var13 + var18 & 1) * 0.2D;
-                              var41 = 1;
-                              if(var38 < 0.5D) {
-                                 var41 = 2;
+                              var39 = (double)var28 * 0.1D + (double)(var13 + var18 & 1) * 0.2D;
+                              var44 = 1;
+                              if(var39 < 0.5D) {
+                                 var44 = 2;
                               }
 
-                              if(var38 > 0.9D) {
-                                 var41 = 0;
+                              if(var39 > 0.9D) {
+                                 var44 = 0;
                               }
                            }
 
@@ -178,8 +183,8 @@
                         var16 = var29;
                         if(var18 >= 0 && var19 * var19 + var20 * var20 < var11 * var11 && (!var21 || (var13 + var18 & 1) != 0)) {
                            byte var42 = var3.colors[var13 + var18 * var4];
-                           byte var40 = (byte)(var36 * 4 + var41);
-                           if(var42 != var40) {
+                           byte var41 = (byte)(var36 * 4 + var44);
+                           if(var42 != var41) {
                               if(var14 > var18) {
                                  var14 = var18;
                               }
@@ -188,7 +193,7 @@
                                  var15 = var18;
                               }
 
-                              var3.colors[var13 + var18 * var4] = var40;
+                              var3.colors[var13 + var18 * var4] = var41;
                            }
                         }
                      }
@@ -200,8 +205,8 @@
                }
             }
          }
-
       }
+
    }
 
    public void onUpdate(ItemStack var1, World var2, Entity var3, int var4, boolean var5) {
@@ -215,8 +220,8 @@
          if(var5) {
             this.updateMapData(var2, var3, var6);
          }
-
       }
+
    }
 
    public Packet getUpdatePacket(ItemStack var1, World var2, EntityPlayer var3) {
@@ -239,6 +244,8 @@
          var5.dimension = var4.dimension;
          var5.markDirty();
          var2.setItemData("map_" + var1.getItemDamage(), var5);
+         MapInitializeEvent var6 = new MapInitializeEvent(var5.mapView);
+         Bukkit.getServer().getPluginManager().callEvent(var6);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/ItemMinecart.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMinecart.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemMinecart.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMinecart.java
--- mcp-mcdev/net/minecraft/src/ItemMinecart.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMinecart.java	2012-11-29 21:41:18.000000000 -0800
@@ -7,6 +7,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.player.PlayerInteractEvent;
 
 public class ItemMinecart extends Item {
 
@@ -24,6 +27,11 @@
       int var11 = var3.getBlockId(var4, var5, var6);
       if(BlockRail.isRailBlock(var11)) {
          if(!var3.isRemote) {
+            PlayerInteractEvent var12 = CraftEventFactory.callPlayerInteractEvent(var2, Action.RIGHT_CLICK_BLOCK, var4, var5, var6, var7, var1);
+            if(var12.isCancelled()) {
+               return false;
+            }
+
             var3.spawnEntityInWorld(new EntityMinecart(var3, (double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), this.minecartType));
          }
 
Binary files mcp-mcdev/net/minecraft/src/ItemMonsterPlacer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMonsterPlacer.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemMonsterPlacer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMonsterPlacer.java
--- mcp-mcdev/net/minecraft/src/ItemMonsterPlacer.java	2012-11-29 21:14:48.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemMonsterPlacer.java	2012-11-29 21:41:18.000000000 -0800
@@ -11,6 +11,7 @@
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.StatCollector;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class ItemMonsterPlacer extends Item {
 
@@ -31,9 +32,7 @@
    }
 
    public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-      if(var3.isRemote) {
-         return true;
-      } else {
+      if(!var3.isRemote && var1.getItemDamage() != 48 && var1.getItemDamage() != 49 && var1.getItemDamage() != 63 && var1.getItemDamage() != 64) {
          int var11 = var3.getBlockId(var4, var5, var6);
          var4 += Facing.offsetsXForSide[var7];
          var5 += Facing.offsetsYForSide[var7];
@@ -48,6 +47,8 @@
          }
 
          return true;
+      } else {
+         return true;
       }
    }
 
@@ -59,10 +60,10 @@
 
          for(int var9 = 0; var9 < 1; ++var9) {
             var8 = EntityList.createEntityByID(var1, var0);
-            if(var8 != null) {
+            if(var8 != null && var8 instanceof EntityLiving) {
                var8.setLocationAndAngles(var2, var4, var6, var0.rand.nextFloat() * 360.0F, 0.0F);
                ((EntityLiving)var8).initCreature();
-               var0.spawnEntityInWorld(var8);
+               var0.addEntity(var8, SpawnReason.SPAWNER_EGG);
                ((EntityLiving)var8).playLivingSound();
             }
          }
Binary files mcp-mcdev/net/minecraft/src/ItemRedstone.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemRedstone.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemRedstone.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemRedstone.java
--- mcp-mcdev/net/minecraft/src/ItemRedstone.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemRedstone.java	2012-11-29 21:41:18.000000000 -0800
@@ -6,6 +6,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemRedstone extends Item {
 
@@ -15,6 +18,9 @@
    }
 
    public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
+      int var11 = var4;
+      int var12 = var5;
+      int var13 = var6;
       if(var3.getBlockId(var4, var5, var6) != Block.snow.blockID) {
          if(var7 == 0) {
             --var5;
@@ -49,6 +55,16 @@
          return false;
       } else {
          if(Block.redstoneWire.canPlaceBlockAt(var3, var4, var5, var6)) {
+            CraftBlockState var14 = CraftBlockState.getBlockState(var3, var4, var5, var6);
+            var3.editingBlocks = true;
+            var3.setBlock(var4, var5, var6, Block.redstoneWire.blockID);
+            BlockPlaceEvent var15 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var14, var11, var12, var13);
+            var14.update(true);
+            var3.editingBlocks = false;
+            if(var15.isCancelled() || !var15.canBuild()) {
+               return false;
+            }
+
             --var1.stackSize;
             var3.setBlockWithNotify(var4, var5, var6, Block.redstoneWire.blockID);
          }
Binary files mcp-mcdev/net/minecraft/src/ItemReed.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemReed.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemReed.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemReed.java
--- mcp-mcdev/net/minecraft/src/ItemReed.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemReed.java	2012-11-29 21:41:18.000000000 -0800
@@ -6,6 +6,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemReed extends Item {
 
@@ -18,10 +21,13 @@
    }
 
    public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
-      int var11 = var3.getBlockId(var4, var5, var6);
-      if(var11 == Block.snow.blockID) {
+      int var11 = var4;
+      int var12 = var5;
+      int var13 = var6;
+      int var14 = var3.getBlockId(var4, var5, var6);
+      if(var14 == Block.snow.blockID) {
          var7 = 1;
-      } else if(var11 != Block.vine.blockID && var11 != Block.tallGrass.blockID && var11 != Block.deadBush.blockID) {
+      } else if(var14 != Block.vine.blockID && var14 != Block.tallGrass.blockID && var14 != Block.deadBush.blockID) {
          if(var7 == 0) {
             --var5;
          }
@@ -53,15 +59,23 @@
          return false;
       } else {
          if(var3.canPlaceEntityOnSide(this.spawnID, var4, var5, var6, false, var7, (Entity)null)) {
-            Block var12 = Block.blocksList[this.spawnID];
-            int var13 = var12.func_85104_a(var3, var4, var5, var6, var7, var8, var9, var10, 0);
-            if(var3.setBlockAndMetadataWithNotify(var4, var5, var6, this.spawnID, var13)) {
+            Block var15 = Block.blocksList[this.spawnID];
+            int var16 = var15.func_85104_a(var3, var4, var5, var6, var7, var8, var9, var10, 0);
+            CraftBlockState var17 = CraftBlockState.getBlockState(var3, var4, var5, var6);
+            if(var3.setBlockAndMetadata(var4, var5, var6, this.spawnID, var16)) {
+               BlockPlaceEvent var18 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var17, var11, var12, var13);
+               if(var18.isCancelled() || !var18.canBuild()) {
+                  var3.setBlockAndMetadataWithNotify(var4, var5, var6, var17.getTypeId(), var17.getRawData());
+                  return true;
+               }
+
+               var3.notifyBlockChange(var4, var5, var6, this.spawnID);
                if(var3.getBlockId(var4, var5, var6) == this.spawnID) {
                   Block.blocksList[this.spawnID].onBlockPlacedBy(var3, var4, var5, var6, var2);
-                  Block.blocksList[this.spawnID].func_85105_g(var3, var4, var5, var6, var13);
+                  Block.blocksList[this.spawnID].func_85105_g(var3, var4, var5, var6, var16);
                }
 
-               var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), var12.stepSound.getPlaceSound(), (var12.stepSound.getVolume() + 1.0F) / 2.0F, var12.stepSound.getPitch() * 0.8F);
+               var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), var15.stepSound.getPlaceSound(), (var15.stepSound.getVolume() + 1.0F) / 2.0F, var15.stepSound.getPitch() * 0.8F);
                --var1.stackSize;
             }
          }
Binary files mcp-mcdev/net/minecraft/src/ItemSeedFood.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSeedFood.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemSeedFood.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSeedFood.java
--- mcp-mcdev/net/minecraft/src/ItemSeedFood.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSeedFood.java	2012-11-29 21:41:18.000000000 -0800
@@ -4,6 +4,9 @@
 import net.minecraft.src.ItemFood;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemSeedFood extends ItemFood {
 
@@ -23,9 +26,16 @@
       } else if(var2.canPlayerEdit(var4, var5, var6, var7, var1) && var2.canPlayerEdit(var4, var5 + 1, var6, var7, var1)) {
          int var11 = var3.getBlockId(var4, var5, var6);
          if(var11 == this.soilId && var3.isAirBlock(var4, var5 + 1, var6)) {
+            CraftBlockState var12 = CraftBlockState.getBlockState(var3, var4, var5 + 1, var6);
             var3.setBlockWithNotify(var4, var5 + 1, var6, this.cropId);
-            --var1.stackSize;
-            return true;
+            BlockPlaceEvent var13 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var12, var4, var5, var6);
+            if(!var13.isCancelled() && var13.canBuild()) {
+               --var1.stackSize;
+               return true;
+            } else {
+               var13.getBlockPlaced().setTypeId(0);
+               return false;
+            }
          } else {
             return false;
          }
Binary files mcp-mcdev/net/minecraft/src/ItemSeeds.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSeeds.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemSeeds.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSeeds.java
--- mcp-mcdev/net/minecraft/src/ItemSeeds.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSeeds.java	2012-11-29 21:41:18.000000000 -0800
@@ -5,6 +5,9 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemSeeds extends Item {
 
@@ -22,12 +25,19 @@
    public boolean onItemUse(ItemStack var1, EntityPlayer var2, World var3, int var4, int var5, int var6, int var7, float var8, float var9, float var10) {
       if(var7 != 1) {
          return false;
-      } else if(var2.canPlayerEdit(var4, var5, var6, var7, var1) && var2.canPlayerEdit(var4, var5 + 1, var6, var7, var1)) {
+      } else if(var2.isWithinHomeDistance(var4, var5, var6) && var2.isWithinHomeDistance(var4, var5 + 1, var6)) {
          int var11 = var3.getBlockId(var4, var5, var6);
          if(var11 == this.soilBlockID && var3.isAirBlock(var4, var5 + 1, var6)) {
+            CraftBlockState var12 = CraftBlockState.getBlockState(var3, var4, var5 + 1, var6);
             var3.setBlockWithNotify(var4, var5 + 1, var6, this.blockType);
-            --var1.stackSize;
-            return true;
+            BlockPlaceEvent var13 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var12, var4, var5, var6);
+            if(!var13.isCancelled() && var13.canBuild()) {
+               --var1.stackSize;
+               return true;
+            } else {
+               var13.getBlockPlaced().setTypeId(0);
+               return false;
+            }
          } else {
             return false;
          }
Binary files mcp-mcdev/net/minecraft/src/ItemSign.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSign.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemSign.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSign.java
--- mcp-mcdev/net/minecraft/src/ItemSign.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSign.java	2012-11-29 21:41:18.000000000 -0800
@@ -8,6 +8,9 @@
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.TileEntitySign;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemSign extends Item {
 
@@ -23,6 +26,9 @@
       } else if(!var3.getBlockMaterial(var4, var5, var6).isSolid()) {
          return false;
       } else {
+         int var11 = var4;
+         int var12 = var5;
+         int var13 = var6;
          if(var7 == 1) {
             ++var5;
          }
@@ -48,20 +54,27 @@
          } else if(!Block.signPost.canPlaceBlockAt(var3, var4, var5, var6)) {
             return false;
          } else {
+            CraftBlockState var14 = CraftBlockState.getBlockState(var3, var4, var5, var6);
             if(var7 == 1) {
-               int var11 = MathHelper.floor_double((double)((var2.rotationYaw + 180.0F) * 16.0F / 360.0F) + 0.5D) & 15;
-               var3.setBlockAndMetadataWithNotify(var4, var5, var6, Block.signPost.blockID, var11);
+               int var15 = MathHelper.floor_double((double)((var2.rotationYaw + 180.0F) * 16.0F / 360.0F) + 0.5D) & 15;
+               var3.setBlockAndMetadataWithNotify(var4, var5, var6, Block.signPost.blockID, var15);
             } else {
                var3.setBlockAndMetadataWithNotify(var4, var5, var6, Block.signWall.blockID, var7);
             }
 
-            --var1.stackSize;
-            TileEntitySign var12 = (TileEntitySign)var3.getBlockTileEntity(var4, var5, var6);
-            if(var12 != null) {
-               var2.displayGUIEditSign(var12);
-            }
+            BlockPlaceEvent var17 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var14, var11, var12, var13);
+            if(!var17.isCancelled() && var17.canBuild()) {
+               --var1.stackSize;
+               TileEntitySign var16 = (TileEntitySign)var3.getBlockTileEntity(var4, var5, var6);
+               if(var16 != null) {
+                  var2.displayGUIEditSign(var16);
+               }
 
-            return true;
+               return true;
+            } else {
+               var17.getBlockPlaced().setTypeIdAndData(var14.getTypeId(), var14.getRawData(), false);
+               return false;
+            }
          }
       }
    }
Binary files mcp-mcdev/net/minecraft/src/ItemSkull.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSkull.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemSkull.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSkull.java
--- mcp-mcdev/net/minecraft/src/ItemSkull.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSkull.java	2012-11-29 21:41:18.000000000 -0800
@@ -11,6 +11,9 @@
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.TileEntitySkull;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockPlaceEvent;
 
 public class ItemSkull extends Item {
 
@@ -31,6 +34,9 @@
       } else if(!var3.getBlockMaterial(var4, var5, var6).isSolid()) {
          return false;
       } else {
+         int var11 = var4;
+         int var12 = var5;
+         int var13 = var6;
          if(var7 == 1) {
             ++var5;
          }
@@ -56,26 +62,33 @@
          } else if(!Block.skull.canPlaceBlockAt(var3, var4, var5, var6)) {
             return false;
          } else {
+            CraftBlockState var14 = CraftBlockState.getBlockState(var3, var4, var5, var6);
             var3.setBlockAndMetadataWithNotify(var4, var5, var6, Block.skull.blockID, var7);
-            int var11 = 0;
+            int var15 = 0;
             if(var7 == 1) {
-               var11 = MathHelper.floor_double((double)(var2.rotationYaw * 16.0F / 360.0F) + 0.5D) & 15;
+               var15 = MathHelper.floor_double((double)(var2.rotationYaw * 16.0F / 360.0F) + 0.5D) & 15;
             }
 
-            TileEntity var12 = var3.getBlockTileEntity(var4, var5, var6);
-            if(var12 != null && var12 instanceof TileEntitySkull) {
-               String var13 = "";
+            TileEntity var16 = var3.getBlockTileEntity(var4, var5, var6);
+            if(var16 != null && var16 instanceof TileEntitySkull) {
+               String var17 = "";
                if(var1.hasTagCompound() && var1.getTagCompound().hasKey("SkullOwner")) {
-                  var13 = var1.getTagCompound().getString("SkullOwner");
+                  var17 = var1.getTagCompound().getString("SkullOwner");
                }
 
-               ((TileEntitySkull)var12).func_82118_a(var1.getItemDamage(), var13);
-               ((TileEntitySkull)var12).func_82116_a(var11);
-               ((BlockSkull)Block.skull).makeWither(var3, var4, var5, var6, (TileEntitySkull)var12);
+               ((TileEntitySkull)var16).func_82118_a(var1.getItemDamage(), var17);
+               ((TileEntitySkull)var16).func_82116_a(var15);
+               ((BlockSkull)Block.skull).makeWither(var3, var4, var5, var6, (TileEntitySkull)var16);
             }
 
-            --var1.stackSize;
-            return true;
+            BlockPlaceEvent var18 = CraftEventFactory.callBlockPlaceEvent(var3, var2, var14, var11, var12, var13);
+            if(!var18.isCancelled() && var18.canBuild()) {
+               --var1.stackSize;
+               return true;
+            } else {
+               var18.getBlockPlaced().setTypeIdAndData(var14.getTypeId(), var14.getRawData(), false);
+               return false;
+            }
          }
       }
    }
Binary files mcp-mcdev/net/minecraft/src/ItemSlab.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSlab.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemSlab.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSlab.java
--- mcp-mcdev/net/minecraft/src/ItemSlab.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemSlab.java	2012-11-29 21:41:18.000000000 -0800
@@ -42,16 +42,7 @@
          int var12 = var3.getBlockMetadata(var4, var5, var6);
          int var13 = var12 & 7;
          boolean var14 = (var12 & 8) != 0;
-         if((var7 == 1 && !var14 || var7 == 0 && var14) && var11 == this.theHalfSlab.blockID && var13 == var1.getItemDamage()) {
-            if(var3.checkIfAABBIsClear(this.theHalfSlab2.getCollisionBoundingBoxFromPool(var3, var4, var5, var6)) && var3.setBlockAndMetadataWithNotify(var4, var5, var6, this.theHalfSlab2.blockID, var13)) {
-               var3.playSoundEffect((double)((float)var4 + 0.5F), (double)((float)var5 + 0.5F), (double)((float)var6 + 0.5F), this.theHalfSlab2.stepSound.getPlaceSound(), (this.theHalfSlab2.stepSound.getVolume() + 1.0F) / 2.0F, this.theHalfSlab2.stepSound.getPitch() * 0.8F);
-               --var1.stackSize;
-            }
-
-            return true;
-         } else {
-            return this.func_77888_a(var1, var2, var3, var4, var5, var6, var7)?true:super.onItemUse(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
-         }
+         return (var7 == 1 && !var14 || var7 == 0 && var14) && var11 == this.theHalfSlab.blockID && var13 == var1.getItemDamage()?super.onItemUse(var1, var2, var3, var4, var5, var6, -1, var8, var9, var10):(this.func_77888_a(var1, var2, var3, var4, var5, var6, var7)?true:super.onItemUse(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10));
       }
    }
 
Binary files mcp-mcdev/net/minecraft/src/ItemStack.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemStack.class differ
diff -ur mcp-mcdev/net/minecraft/src/ItemStack.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemStack.java
--- mcp-mcdev/net/minecraft/src/ItemStack.java	2012-11-29 21:14:47.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ItemStack.java	2012-11-29 21:41:18.000000000 -0800
@@ -14,6 +14,7 @@
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.StatList;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public final class ItemStack {
 
@@ -54,7 +55,19 @@
       this.itemFrame = null;
       this.itemID = var1;
       this.stackSize = var2;
-      this.itemDamage = var3;
+      this.setItemDamage(var3);
+   }
+
+   public ItemStack(int var1, int var2, int var3, NBTTagList var4) {
+      this(var1, var2, var3);
+      if(var4 != null && Item.itemsList[this.itemID].getItemStackLimit() == 1) {
+         if(this.stackTagCompound == null) {
+            this.setTagCompound(new NBTTagCompound());
+         }
+
+         this.stackTagCompound.setTag("ench", var4.copy());
+      }
+
    }
 
    public static ItemStack loadItemStackFromNBT(NBTTagCompound var0) {
@@ -153,7 +166,7 @@
    }
 
    public void setItemDamage(int var1) {
-      this.itemDamage = var1;
+      this.itemDamage = this.itemID > 0 && this.itemID < 256 && this.itemID != Block.anvil.blockID?Item.itemsList[this.itemID].getMetadata(var1):var1;
    }
 
    public int getMaxDamage() {
@@ -184,10 +197,14 @@
                this.stackSize = 0;
             }
 
+            if(this.stackSize == 0 && var2 instanceof EntityPlayer) {
+               CraftEventFactory.callPlayerItemBreakEvent((EntityPlayer)var2, this);
+            }
+
             this.itemDamage = 0;
          }
-
       }
+
    }
 
    public void hitEntity(EntityLiving var1, EntityPlayer var2) {
Binary files mcp-mcdev/net/minecraft/src/MapData.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/MapData.class differ
diff -ur mcp-mcdev/net/minecraft/src/MapData.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/MapData.java
--- mcp-mcdev/net/minecraft/src/MapData.java	2012-11-29 21:14:46.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/MapData.java	2012-11-29 21:41:17.000000000 -0800
@@ -2,9 +2,11 @@
 
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.UUID;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.MapCoord;
@@ -12,6 +14,10 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldSavedData;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.map.CraftMapView;
 
 public class MapData extends WorldSavedData {
 
@@ -23,6 +29,9 @@
    public List playersArrayList = new ArrayList();
    private Map playersHashMap = new HashMap();
    public Map playersVisibleOnMap = new LinkedHashMap();
+   public final CraftMapView mapView = new CraftMapView(this);
+   private CraftServer server = (CraftServer)Bukkit.getServer();
+   private UUID uniqueId = null;
 
 
    public MapData(String var1) {
@@ -30,7 +39,22 @@
    }
 
    public void readFromNBT(NBTTagCompound var1) {
-      this.dimension = var1.getByte("dimension");
+      byte var2 = var1.getByte("dimension");
+      if(var2 >= 10) {
+         long var3 = var1.getLong("UUIDLeast");
+         long var5 = var1.getLong("UUIDMost");
+         if(var3 != 0L && var5 != 0L) {
+            this.uniqueId = new UUID(var5, var3);
+            CraftWorld var7 = (CraftWorld)this.server.getWorld(this.uniqueId);
+            if(var7 == null) {
+               var2 = 127;
+            } else {
+               var2 = (byte)var7.getHandle().dimension;
+            }
+         }
+      }
+
+      this.dimension = var2;
       this.xCenter = var1.getInteger("xCenter");
       this.zCenter = var1.getInteger("zCenter");
       this.scale = var1.getByte("scale");
@@ -42,23 +66,23 @@
          this.scale = 4;
       }
 
-      short var2 = var1.getShort("width");
-      short var3 = var1.getShort("height");
-      if(var2 == 128 && var3 == 128) {
+      short var8 = var1.getShort("width");
+      short var9 = var1.getShort("height");
+      if(var8 == 128 && var9 == 128) {
          this.colors = var1.getByteArray("colors");
       } else {
-         byte[] var4 = var1.getByteArray("colors");
+         byte[] var10 = var1.getByteArray("colors");
          this.colors = new byte[16384];
-         int var5 = (128 - var2) / 2;
-         int var6 = (128 - var3) / 2;
+         int var11 = (128 - var8) / 2;
+         int var16 = (128 - var9) / 2;
 
-         for(int var7 = 0; var7 < var3; ++var7) {
-            int var8 = var7 + var6;
-            if(var8 >= 0 || var8 < 128) {
-               for(int var9 = 0; var9 < var2; ++var9) {
-                  int var10 = var9 + var5;
-                  if(var10 >= 0 || var10 < 128) {
-                     this.colors[var10 + var8 * 128] = var4[var9 + var7 * var2];
+         for(int var12 = 0; var12 < var9; ++var12) {
+            int var13 = var12 + var16;
+            if(var13 >= 0 || var13 < 128) {
+               for(int var14 = 0; var14 < var8; ++var14) {
+                  int var15 = var14 + var11;
+                  if(var15 >= 0 || var15 < 128) {
+                     this.colors[var15 + var13 * 128] = var10[var14 + var12 * var8];
                   }
                }
             }
@@ -68,6 +92,26 @@
    }
 
    public void writeToNBT(NBTTagCompound var1) {
+      if(this.dimension >= 10) {
+         if(this.uniqueId == null) {
+            Iterator var2 = this.server.getWorlds().iterator();
+
+            while(var2.hasNext()) {
+               org.bukkit.World var3 = (org.bukkit.World)var2.next();
+               CraftWorld var4 = (CraftWorld)var3;
+               if(var4.getHandle().dimension == this.dimension) {
+                  this.uniqueId = var4.getUID();
+                  break;
+               }
+            }
+         }
+
+         if(this.uniqueId != null) {
+            var1.setLong("UUIDLeast", this.uniqueId.getLeastSignificantBits());
+            var1.setLong("UUIDMost", this.uniqueId.getMostSignificantBits());
+         }
+      }
+
       var1.setByte("dimension", this.dimension);
       var1.setInteger("xCenter", this.xCenter);
       var1.setInteger("zCenter", this.zCenter);
Binary files mcp-mcdev/net/minecraft/src/MapInfo.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/MapInfo.class differ
diff -ur mcp-mcdev/net/minecraft/src/MapInfo.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/MapInfo.java
--- mcp-mcdev/net/minecraft/src/MapInfo.java	2012-11-29 21:14:45.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/MapInfo.java	2012-11-29 21:41:15.000000000 -0800
@@ -1,10 +1,11 @@
 package net.minecraft.src;
 
-import java.util.Iterator;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.ItemStack;
-import net.minecraft.src.MapCoord;
 import net.minecraft.src.MapData;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.map.RenderData;
+import org.bukkit.map.MapCursor;
 
 public class MapInfo {
 
@@ -16,7 +17,6 @@
    private byte[] lastPlayerLocationOnMap;
    public int field_82569_d;
    private boolean field_82570_i;
-   // $FF: synthetic field
    final MapData mapDataObj;
 
 
@@ -43,56 +43,59 @@
          this.field_82570_i = true;
          return var2;
       } else {
-         int var3;
+         RenderData var3 = this.mapDataObj.mapView.render((CraftPlayer)this.entityplayerObj.getBukkitEntity());
+         int var6;
          int var10;
          if(--this.ticksUntilPlayerLocationMapUpdate < 0) {
             this.ticksUntilPlayerLocationMapUpdate = 4;
-            var2 = new byte[this.mapDataObj.playersVisibleOnMap.size() * 3 + 1];
+            var2 = new byte[var3.cursors.size() * 3 + 1];
             var2[0] = 1;
-            var3 = 0;
+            boolean var4 = false;
 
-            for(Iterator var4 = this.mapDataObj.playersVisibleOnMap.values().iterator(); var4.hasNext(); ++var3) {
-               MapCoord var5 = (MapCoord)var4.next();
-               var2[var3 * 3 + 1] = (byte)(var5.iconSize << 4 | var5.iconRotation & 15);
-               var2[var3 * 3 + 2] = var5.centerX;
-               var2[var3 * 3 + 3] = var5.centerZ;
+            for(var10 = 0; var10 < var3.cursors.size(); ++var10) {
+               MapCursor var5 = (MapCursor)var3.cursors.get(var10);
+               if(var5.isVisible()) {
+                  var2[var10 * 3 + 1] = (byte)(var5.getRawType() << 4 | var5.getDirection() & 15);
+                  var2[var10 * 3 + 2] = var5.getX();
+                  var2[var10 * 3 + 3] = var5.getY();
+               }
             }
 
-            boolean var9 = !var1.isOnItemFrame();
+            boolean var11 = !var1.isOnItemFrame();
             if(this.lastPlayerLocationOnMap != null && this.lastPlayerLocationOnMap.length == var2.length) {
-               for(var10 = 0; var10 < var2.length; ++var10) {
-                  if(var2[var10] != this.lastPlayerLocationOnMap[var10]) {
-                     var9 = false;
+               for(var6 = 0; var6 < var2.length; ++var6) {
+                  if(var2[var6] != this.lastPlayerLocationOnMap[var6]) {
+                     var11 = false;
                      break;
                   }
                }
             } else {
-               var9 = false;
+               var11 = false;
             }
 
-            if(!var9) {
+            if(!var11) {
                this.lastPlayerLocationOnMap = var2;
                return var2;
             }
          }
 
-         for(int var8 = 0; var8 < 1; ++var8) {
-            var3 = this.currentRandomNumber++ * 11 % 128;
-            if(this.field_76209_b[var3] >= 0) {
-               int var11 = this.field_76210_c[var3] - this.field_76209_b[var3] + 1;
-               var10 = this.field_76209_b[var3];
-               byte[] var6 = new byte[var11 + 3];
-               var6[0] = 0;
-               var6[1] = (byte)var3;
-               var6[2] = (byte)var10;
+         for(int var12 = 0; var12 < 1; ++var12) {
+            var10 = this.currentRandomNumber++ * 11 % 128;
+            if(this.field_76209_b[var10] >= 0) {
+               int var7 = this.field_76210_c[var10] - this.field_76209_b[var10] + 1;
+               var6 = this.field_76209_b[var10];
+               byte[] var8 = new byte[var7 + 3];
+               var8[0] = 0;
+               var8[1] = (byte)var10;
+               var8[2] = (byte)var6;
 
-               for(int var7 = 0; var7 < var6.length - 3; ++var7) {
-                  var6[var7 + 3] = this.mapDataObj.colors[(var7 + var10) * 128 + var3];
+               for(int var9 = 0; var9 < var8.length - 3; ++var9) {
+                  var8[var9 + 3] = var3.buffer[(var9 + var6) * 128 + var10];
                }
 
-               this.field_76210_c[var3] = -1;
-               this.field_76209_b[var3] = -1;
-               return var6;
+               this.field_76210_c[var10] = -1;
+               this.field_76209_b[var10] = -1;
+               return var8;
             }
          }
 
Binary files mcp-mcdev/net/minecraft/src/NBTTagCompound.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NBTTagCompound.class differ
diff -ur mcp-mcdev/net/minecraft/src/NBTTagCompound.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NBTTagCompound.java
--- mcp-mcdev/net/minecraft/src/NBTTagCompound.java	2012-11-29 21:14:44.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NBTTagCompound.java	2012-11-29 21:41:14.000000000 -0800
@@ -2,6 +2,7 @@
 
 import java.io.DataInput;
 import java.io.DataOutput;
+import java.io.IOException;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Iterator;
@@ -44,7 +45,16 @@
          NBTBase.writeNamedTag(var3, var1);
       }
 
-      var1.writeByte(0);
+      try {
+         var1.writeByte(0);
+      } catch (IOException var4) {
+         var4.printStackTrace();
+      }
+
+   }
+
+   public void remove(String var1) {
+      this.tagMap.remove(var1);
    }
 
    void load(DataInput var1) {
@@ -263,7 +273,6 @@
       return super.hashCode() ^ this.tagMap.hashCode();
    }
 
-   // $FF: synthetic method
    static Map getTagMap(NBTTagCompound var0) {
       return var0.tagMap;
    }
Binary files mcp-mcdev/net/minecraft/src/NetLoginHandler.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NetLoginHandler.class differ
diff -ur mcp-mcdev/net/minecraft/src/NetLoginHandler.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NetLoginHandler.java
--- mcp-mcdev/net/minecraft/src/NetLoginHandler.java	2012-11-29 21:14:44.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NetLoginHandler.java	2012-11-29 21:41:14.000000000 -0800
@@ -1,13 +1,11 @@
 package net.minecraft.src;
 
-import java.io.Serializable;
+import java.io.IOException;
 import java.net.InetAddress;
 import java.net.Socket;
 import java.security.PrivateKey;
 import java.security.PublicKey;
 import java.util.Arrays;
-import java.util.Iterator;
-import java.util.List;
 import java.util.Random;
 import java.util.logging.Logger;
 import javax.crypto.SecretKey;
@@ -27,6 +25,8 @@
 import net.minecraft.src.StringUtils;
 import net.minecraft.src.TcpConnection;
 import net.minecraft.src.ThreadLoginVerifier;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.server.ServerListPingEvent;
 
 public class NetLoginHandler extends NetHandler {
 
@@ -39,16 +39,26 @@
    private int loginTimer = 0;
    private String clientUsername = null;
    private volatile boolean field_72544_i = false;
-   private String loginServerId = "";
-   private SecretKey field_72542_k = null;
+   private String loginServerId;
+   private SecretKey field_72542_k;
+   public String hostname;
+   private boolean login;
 
 
-   public NetLoginHandler(MinecraftServer var1, Socket var2, String var3) {
+   public NetLoginHandler(MinecraftServer var1, Socket var2, String var3) throws IOException {
+      this.loginServerId = Long.toString(rand.nextLong(), 16);
+      this.field_72542_k = null;
+      this.hostname = "";
+      this.login = false;
       this.mcServer = var1;
       this.myTCPConnection = new TcpConnection(var2, var3, this, var1.getKeyPair().getPrivate());
       this.myTCPConnection.field_74468_e = 0;
    }
 
+   public Socket getSocket() {
+      return this.myTCPConnection.getSocket();
+   }
+
    public void tryLogin() {
       if(this.field_72544_i) {
          this.initializePlayerConnection();
@@ -75,6 +85,7 @@
    }
 
    public void handleClientProtocol(Packet2ClientProtocol var1) {
+      this.hostname = var1.serverHost == null?"":var1.serverHost + ':' + var1.serverPort;
       this.clientUsername = var1.getUsername();
       if(!this.clientUsername.equals(StringUtils.stripControlCodes(this.clientUsername))) {
          this.kickUser("Invalid username!");
@@ -86,7 +97,6 @@
             } else {
                this.kickUser("Outdated client!");
             }
-
          } else {
             this.loginServerId = this.mcServer.isServerInOnlineMode()?Long.toString(rand.nextLong(), 16):"-";
             this.field_72536_d = new byte[4];
@@ -94,6 +104,7 @@
             this.myTCPConnection.addToSendQueue(new Packet253ServerAuthData(this.loginServerId, var2, this.field_72536_d));
          }
       }
+
    }
 
    public void handleSharedKey(Packet252SharedKey var1) {
@@ -109,7 +120,13 @@
    public void handleClientCommand(Packet205ClientCommand var1) {
       if(var1.forceRespawn == 0) {
          if(this.mcServer.isServerInOnlineMode()) {
-            (new ThreadLoginVerifier(this)).start();
+            if(this.login) {
+               this.kickUser("Duplicate login");
+               return;
+            }
+
+            this.login = true;
+            (new ThreadLoginVerifier(this, this.mcServer.server)).start();
          } else {
             this.field_72544_i = true;
          }
@@ -120,17 +137,15 @@
    public void handleLogin(Packet1Login var1) {}
 
    public void initializePlayerConnection() {
-      String var1 = this.mcServer.getConfigurationManager().allowUserToConnect(this.myTCPConnection.getRemoteAddress(), this.clientUsername);
+      EntityPlayerMP var1 = this.mcServer.getConfigurationManager().attemptLogin(this, this.clientUsername, this.hostname);
       if(var1 != null) {
-         this.kickUser(var1);
-      } else {
-         EntityPlayerMP var2 = this.mcServer.getConfigurationManager().createPlayerForUser(this.clientUsername);
+         EntityPlayerMP var2 = this.mcServer.getConfigurationManager().processLogin(var1);
          if(var2 != null) {
             this.mcServer.getConfigurationManager().initializeConnectionToPlayer(this.myTCPConnection, var2);
          }
-      }
 
-      this.finishedProcessing = true;
+         this.finishedProcessing = true;
+      }
    }
 
    public void handleErrorMessage(String var1, Object[] var2) {
@@ -139,41 +154,47 @@
    }
 
    public void handleServerPing(Packet254ServerPing var1) {
-      try {
-         ServerConfigurationManager var2 = this.mcServer.getConfigurationManager();
-         String var3 = null;
-         if(var1.field_82559_a == 1) {
-            List var4 = Arrays.asList(new Serializable[]{Integer.valueOf(1), Integer.valueOf(49), this.mcServer.getMinecraftVersion(), this.mcServer.getMOTD(), Integer.valueOf(var2.getCurrentPlayerCount()), Integer.valueOf(var2.getMaxPlayers())});
-
-            Object var6;
-            for(Iterator var5 = var4.iterator(); var5.hasNext(); var3 = var3 + var6.toString().replaceAll(" ", "")) {
-               var6 = var5.next();
-               if(var3 == null) {
-                  var3 = "§";
-               } else {
-                  var3 = var3 + " ";
+      if(this.myTCPConnection.getSocket() != null) {
+         try {
+            ServerConfigurationManager var2 = this.mcServer.getConfigurationManager();
+            String var3 = null;
+            ServerListPingEvent var4 = CraftEventFactory.callServerListPingEvent(this.mcServer.server, this.getSocket().getInetAddress(), this.mcServer.getMOTD(), var2.getCurrentPlayerCount(), var2.getMaxPlayers());
+            if(var1.field_82559_a == 1) {
+               Object[] var5 = new Object[]{Integer.valueOf(1), Integer.valueOf(49), this.mcServer.getMinecraftVersion(), var4.getMotd(), Integer.valueOf(var2.getCurrentPlayerCount()), Integer.valueOf(var4.getMaxPlayers())};
+               Object[] var6 = var5;
+               int var7 = var5.length;
+
+               for(int var8 = 0; var8 < var7; ++var8) {
+                  Object var9 = var6[var8];
+                  if(var3 == null) {
+                     var3 = "§";
+                  } else {
+                     var3 = var3 + " ";
+                  }
+
+                  var3 = var3 + org.apache.commons.lang.StringUtils.replace(var9.toString(), " ", "");
                }
+            } else {
+               var3 = var4.getMotd() + "§" + var2.getCurrentPlayerCount() + "§" + var4.getMaxPlayers();
             }
-         } else {
-            var3 = this.mcServer.getMOTD() + "§" + var2.getCurrentPlayerCount() + "§" + var2.getMaxPlayers();
-         }
 
-         InetAddress var8 = null;
-         if(this.myTCPConnection.getSocket() != null) {
-            var8 = this.myTCPConnection.getSocket().getInetAddress();
-         }
+            InetAddress var11 = null;
+            if(this.myTCPConnection.getSocket() != null) {
+               var11 = this.myTCPConnection.getSocket().getInetAddress();
+            }
 
-         this.myTCPConnection.addToSendQueue(new Packet255KickDisconnect(var3));
-         this.myTCPConnection.serverShutdown();
-         if(var8 != null && this.mcServer.getNetworkThread() instanceof DedicatedServerListenThread) {
-            ((DedicatedServerListenThread)this.mcServer.getNetworkThread()).func_71761_a(var8);
+            this.myTCPConnection.addToSendQueue(new Packet255KickDisconnect(var3));
+            this.myTCPConnection.serverShutdown();
+            if(var11 != null && this.mcServer.getNetworkThread() instanceof DedicatedServerListenThread) {
+               ((DedicatedServerListenThread)this.mcServer.getNetworkThread()).func_71761_a(var11);
+            }
+
+            this.finishedProcessing = true;
+         } catch (Exception var10) {
+            var10.printStackTrace();
          }
 
-         this.finishedProcessing = true;
-      } catch (Exception var7) {
-         var7.printStackTrace();
       }
-
    }
 
    public void unexpectedPacket(Packet var1) {
@@ -188,27 +209,22 @@
       return true;
    }
 
-   // $FF: synthetic method
    static String getServerId(NetLoginHandler var0) {
       return var0.loginServerId;
    }
 
-   // $FF: synthetic method
    static MinecraftServer getLoginMinecraftServer(NetLoginHandler var0) {
       return var0.mcServer;
    }
 
-   // $FF: synthetic method
    static SecretKey func_72525_c(NetLoginHandler var0) {
       return var0.field_72542_k;
    }
 
-   // $FF: synthetic method
    static String getClientUsername(NetLoginHandler var0) {
       return var0.clientUsername;
    }
 
-   // $FF: synthetic method
    static boolean func_72531_a(NetLoginHandler var0, boolean var1) {
       return var0.field_72544_i = var1;
    }
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: NetServerHandler$1.class
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: NetServerHandler$2.class
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: NetServerHandler$3.class
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: NetServerHandler$4.class
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: NetServerHandler$5.class
Binary files mcp-mcdev/net/minecraft/src/NetServerHandler.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/NetServerHandler.class differ
Only in mcp-mcdev/net/minecraft/src: NetServerHandler.java
Binary files mcp-mcdev/net/minecraft/src/Packet.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet.class differ
diff -ur mcp-mcdev/net/minecraft/src/Packet.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet.java
--- mcp-mcdev/net/minecraft/src/Packet.java	2012-11-29 21:14:42.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet.java	2012-11-29 21:41:12.000000000 -0800
@@ -5,6 +5,8 @@
 import java.io.EOFException;
 import java.io.IOException;
 import java.net.Socket;
+import java.net.SocketException;
+import java.net.SocketTimeoutException;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
@@ -103,8 +105,13 @@
    public static long sentID;
    public static long sentSize;
    public boolean isChunkDataPacket = false;
+   private int packetID;
 
 
+   public Packet() {
+      this.packetID = ((Integer)packetClassToIdMap.get(this.getClass())).intValue();
+   }
+
    static void addIdClassMapping(int var0, boolean var1, boolean var2, Class var3) {
       if(packetIdToClassMap.containsItem(var0)) {
          throw new IllegalArgumentException("Duplicate packet id:" + var0);
@@ -135,12 +142,12 @@
       }
    }
 
-   public static void writeByteArray(DataOutputStream var0, byte[] var1) {
+   public static void writeByteArray(DataOutputStream var0, byte[] var1) throws IOException {
       var0.writeShort(var1.length);
       var0.write(var1);
    }
 
-   public static byte[] readBytesFromStream(DataInputStream var0) {
+   public static byte[] readBytesFromStream(DataInputStream var0) throws IOException {
       short var1 = var0.readShort();
       if(var1 < 0) {
          throw new IOException("Key was smaller than nothing!  Weird key!");
@@ -152,28 +159,28 @@
    }
 
    public final int getPacketId() {
-      return ((Integer)packetClassToIdMap.get(this.getClass())).intValue();
+      return this.packetID;
    }
 
-   public static Packet readPacket(DataInputStream var0, boolean var1, Socket var2) {
+   public static Packet readPacket(DataInputStream var0, boolean var1, Socket var2) throws IOException {
       boolean var3 = false;
       Packet var4 = null;
       int var5 = var2.getSoTimeout();
 
-      int var8;
+      int var6;
       try {
-         var8 = var0.read();
-         if(var8 == -1) {
+         var6 = var0.read();
+         if(var6 == -1) {
             return null;
          }
 
-         if(var1 && !serverPacketIdList.contains(Integer.valueOf(var8)) || !var1 && !clientPacketIdList.contains(Integer.valueOf(var8))) {
-            throw new IOException("Bad packet id " + var8);
+         if(var1 && !serverPacketIdList.contains(Integer.valueOf(var6)) || !var1 && !clientPacketIdList.contains(Integer.valueOf(var6))) {
+            throw new IOException("Bad packet id " + var6);
          }
 
-         var4 = getNewPacket(var8);
+         var4 = getNewPacket(var6);
          if(var4 == null) {
-            throw new IOException("Bad packet id " + var8);
+            throw new IOException("Bad packet id " + var6);
          }
 
          if(var4 instanceof Packet254ServerPing) {
@@ -183,26 +190,32 @@
          var4.readPacketData(var0);
          ++receivedID;
          receivedSize += (long)var4.getPacketSize();
-      } catch (EOFException var7) {
+      } catch (EOFException var8) {
          System.out.println("Reached end of stream");
          return null;
+      } catch (SocketTimeoutException var9) {
+         System.out.println("Read timed out");
+         return null;
+      } catch (SocketException var10) {
+         System.out.println("Connection reset");
+         return null;
       }
 
-      PacketCount.countPacket(var8, (long)var4.getPacketSize());
+      PacketCount.countPacket(var6, (long)var4.getPacketSize());
       ++receivedID;
       receivedSize += (long)var4.getPacketSize();
       var2.setSoTimeout(var5);
       return var4;
    }
 
-   public static void writePacket(Packet var0, DataOutputStream var1) {
+   public static void writePacket(Packet var0, DataOutputStream var1) throws IOException {
       var1.write(var0.getPacketId());
       var0.writePacketData(var1);
       ++sentID;
       sentSize += (long)var0.getPacketSize();
    }
 
-   public static void writeString(String var0, DataOutputStream var1) {
+   public static void writeString(String var0, DataOutputStream var1) throws IOException {
       if(var0.length() > 32767) {
          throw new IOException("String too big");
       } else {
@@ -211,7 +224,7 @@
       }
    }
 
-   public static String readString(DataInputStream var0, int var1) {
+   public static String readString(DataInputStream var0, int var1) throws IOException {
       short var2 = var0.readShort();
       if(var2 > var1) {
          throw new IOException("Received string length longer than maximum allowed (" + var2 + " > " + var1 + ")");
@@ -228,9 +241,9 @@
       }
    }
 
-   public abstract void readPacketData(DataInputStream var1);
+   public abstract void readPacketData(DataInputStream var1) throws IOException;
 
-   public abstract void writePacketData(DataOutputStream var1);
+   public abstract void writePacketData(DataOutputStream var1) throws IOException;
 
    public abstract void processPacket(NetHandler var1);
 
@@ -253,7 +266,7 @@
       return var1;
    }
 
-   public static ItemStack readItemStack(DataInputStream var0) {
+   public static ItemStack readItemStack(DataInputStream var0) throws IOException {
       ItemStack var1 = null;
       short var2 = var0.readShort();
       if(var2 >= 0) {
@@ -266,7 +279,7 @@
       return var1;
    }
 
-   public static void writeItemStack(ItemStack var0, DataOutputStream var1) {
+   public static void writeItemStack(ItemStack var0, DataOutputStream var1) throws IOException {
       if(var0 == null) {
          var1.writeShort(-1);
       } else {
@@ -283,7 +296,7 @@
 
    }
 
-   public static NBTTagCompound readNBTTagCompound(DataInputStream var0) {
+   public static NBTTagCompound readNBTTagCompound(DataInputStream var0) throws IOException {
       short var1 = var0.readShort();
       if(var1 < 0) {
          return null;
@@ -294,7 +307,7 @@
       }
    }
 
-   protected static void writeNBTTagCompound(NBTTagCompound var0, DataOutputStream var1) {
+   protected static void writeNBTTagCompound(NBTTagCompound var0, DataOutputStream var1) throws IOException {
       if(var0 == null) {
          var1.writeShort(-1);
       } else {
Binary files mcp-mcdev/net/minecraft/src/Packet20NamedEntitySpawn.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet20NamedEntitySpawn.class differ
diff -ur mcp-mcdev/net/minecraft/src/Packet20NamedEntitySpawn.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet20NamedEntitySpawn.java
--- mcp-mcdev/net/minecraft/src/Packet20NamedEntitySpawn.java	2012-11-29 21:14:42.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet20NamedEntitySpawn.java	2012-11-29 21:41:11.000000000 -0800
@@ -2,6 +2,7 @@
 
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
+import java.io.IOException;
 import java.util.List;
 import net.minecraft.src.DataWatcher;
 import net.minecraft.src.EntityPlayer;
@@ -28,7 +29,12 @@
 
    public Packet20NamedEntitySpawn(EntityPlayer var1) {
       this.entityId = var1.entityId;
-      this.name = var1.username;
+      if(var1.username.length() > 16) {
+         this.name = var1.username.substring(0, 16);
+      } else {
+         this.name = var1.username;
+      }
+
       this.xPosition = MathHelper.floor_double(var1.posX * 32.0D);
       this.yPosition = MathHelper.floor_double(var1.posY * 32.0D);
       this.zPosition = MathHelper.floor_double(var1.posZ * 32.0D);
@@ -39,7 +45,7 @@
       this.metadata = var1.getDataWatcher();
    }
 
-   public void readPacketData(DataInputStream var1) {
+   public void readPacketData(DataInputStream var1) throws IOException {
       this.entityId = var1.readInt();
       this.name = readString(var1, 16);
       this.xPosition = var1.readInt();
@@ -51,7 +57,7 @@
       this.field_73517_j = DataWatcher.readWatchableObjects(var1);
    }
 
-   public void writePacketData(DataOutputStream var1) {
+   public void writePacketData(DataOutputStream var1) throws IOException {
       var1.writeInt(this.entityId);
       writeString(this.name, var1);
       var1.writeInt(this.xPosition);
Binary files mcp-mcdev/net/minecraft/src/Packet2ClientProtocol.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet2ClientProtocol.class differ
diff -ur mcp-mcdev/net/minecraft/src/Packet2ClientProtocol.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet2ClientProtocol.java
--- mcp-mcdev/net/minecraft/src/Packet2ClientProtocol.java	2012-11-29 21:14:41.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet2ClientProtocol.java	2012-11-29 21:41:11.000000000 -0800
@@ -2,6 +2,7 @@
 
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
+import java.io.IOException;
 import net.minecraft.src.NetHandler;
 import net.minecraft.src.Packet;
 
@@ -9,18 +10,18 @@
 
    private int protocolVersion;
    private String username;
-   private String serverHost;
-   private int serverPort;
+   public String serverHost;
+   public int serverPort;
 
 
-   public void readPacketData(DataInputStream var1) {
+   public void readPacketData(DataInputStream var1) throws IOException {
       this.protocolVersion = var1.readByte();
       this.username = readString(var1, 16);
       this.serverHost = readString(var1, 255);
       this.serverPort = var1.readInt();
    }
 
-   public void writePacketData(DataOutputStream var1) {
+   public void writePacketData(DataOutputStream var1) throws IOException {
       var1.writeByte(this.protocolVersion);
       writeString(this.username, var1);
       writeString(this.serverHost, var1);
Binary files mcp-mcdev/net/minecraft/src/Packet3Chat.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet3Chat.class differ
diff -ur mcp-mcdev/net/minecraft/src/Packet3Chat.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet3Chat.java
--- mcp-mcdev/net/minecraft/src/Packet3Chat.java	2012-11-29 21:14:41.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet3Chat.java	2012-11-29 21:41:11.000000000 -0800
@@ -2,6 +2,7 @@
 
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
+import java.io.IOException;
 import net.minecraft.src.NetHandler;
 import net.minecraft.src.Packet;
 
@@ -22,19 +23,15 @@
 
    public Packet3Chat(String var1, boolean var2) {
       this.field_73477_c = true;
-      if(var1.length() > maxChatLength) {
-         var1 = var1.substring(0, maxChatLength);
-      }
-
       this.message = var1;
       this.field_73477_c = var2;
    }
 
-   public void readPacketData(DataInputStream var1) {
+   public void readPacketData(DataInputStream var1) throws IOException {
       this.message = readString(var1, maxChatLength);
    }
 
-   public void writePacketData(DataOutputStream var1) {
+   public void writePacketData(DataOutputStream var1) throws IOException {
       writeString(this.message, var1);
    }
 
Binary files mcp-mcdev/net/minecraft/src/Packet51MapChunk.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet51MapChunk.class differ
diff -ur mcp-mcdev/net/minecraft/src/Packet51MapChunk.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet51MapChunk.java
--- mcp-mcdev/net/minecraft/src/Packet51MapChunk.java	2012-11-29 21:14:41.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet51MapChunk.java	2012-11-29 21:41:11.000000000 -0800
@@ -3,6 +3,7 @@
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
+import java.util.Arrays;
 import java.util.zip.DataFormatException;
 import java.util.zip.Deflater;
 import java.util.zip.Inflater;
@@ -52,7 +53,7 @@
 
    }
 
-   public void readPacketData(DataInputStream var1) {
+   public void readPacketData(DataInputStream var1) throws IOException {
       this.xCh = var1.readInt();
       this.zCh = var1.readInt();
       this.includeInitialize = var1.readBoolean();
@@ -82,7 +83,7 @@
 
       try {
          var4.inflate(this.field_73596_g);
-      } catch (DataFormatException var9) {
+      } catch (DataFormatException var10) {
          throw new IOException("Bad compressed data format");
       } finally {
          var4.end();
@@ -90,7 +91,7 @@
 
    }
 
-   public void writePacketData(DataOutputStream var1) {
+   public void writePacketData(DataOutputStream var1) throws IOException {
       var1.writeInt(this.xCh);
       var1.writeInt(this.zCh);
       var1.writeBoolean(this.includeInitialize);
@@ -137,45 +138,51 @@
          }
       }
 
-      NibbleArray var10;
+      NibbleArray var11;
       for(var8 = 0; var8 < var4.length; ++var8) {
          if(var4[var8] != null && (!var1 || !var4[var8].isEmpty()) && (var2 & 1 << var8) != 0) {
-            var10 = var4[var8].getMetadataArray();
-            System.arraycopy(var10.data, 0, var7, var3, var10.data.length);
-            var3 += var10.data.length;
+            var11 = var4[var8].getMetadataArray();
+            System.arraycopy(var11.data, 0, var7, var3, var11.data.length);
+            var3 += var11.data.length;
          }
       }
 
       for(var8 = 0; var8 < var4.length; ++var8) {
          if(var4[var8] != null && (!var1 || !var4[var8].isEmpty()) && (var2 & 1 << var8) != 0) {
-            var10 = var4[var8].getBlocklightArray();
-            System.arraycopy(var10.data, 0, var7, var3, var10.data.length);
-            var3 += var10.data.length;
+            var11 = var4[var8].getBlocklightArray();
+            System.arraycopy(var11.data, 0, var7, var3, var11.data.length);
+            var3 += var11.data.length;
          }
       }
 
       for(var8 = 0; var8 < var4.length; ++var8) {
          if(var4[var8] != null && (!var1 || !var4[var8].isEmpty()) && (var2 & 1 << var8) != 0) {
-            var10 = var4[var8].getSkylightArray();
-            System.arraycopy(var10.data, 0, var7, var3, var10.data.length);
-            var3 += var10.data.length;
+            var11 = var4[var8].getSkylightArray();
+            System.arraycopy(var11.data, 0, var7, var3, var11.data.length);
+            var3 += var11.data.length;
          }
       }
 
       if(var5 > 0) {
          for(var8 = 0; var8 < var4.length; ++var8) {
             if(var4[var8] != null && (!var1 || !var4[var8].isEmpty()) && var4[var8].getBlockMSBArray() != null && (var2 & 1 << var8) != 0) {
-               var10 = var4[var8].getBlockMSBArray();
-               System.arraycopy(var10.data, 0, var7, var3, var10.data.length);
-               var3 += var10.data.length;
+               var11 = var4[var8].getBlockMSBArray();
+               System.arraycopy(var11.data, 0, var7, var3, var11.data.length);
+               var3 += var11.data.length;
             }
          }
       }
 
+      if(var1 && var2 == '\uffff' && var3 == 0 && var6.field_74580_b == 0 && var6.field_74581_c == 0) {
+         var6.field_74580_b = 1;
+         var3 = 10240;
+         Arrays.fill(var7, 0, var3, (byte)0);
+      }
+
       if(var1) {
-         byte[] var11 = var0.getBiomeArray();
-         System.arraycopy(var11, 0, var7, var3, var11.length);
-         var3 += var11.length;
+         byte[] var10 = var0.getBiomeArray();
+         System.arraycopy(var10, 0, var7, var3, var10.length);
+         var3 += var10.length;
       }
 
       var6.field_74582_a = new byte[var3];
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: Packet56MapChunks$1.class
Binary files mcp-mcdev/net/minecraft/src/Packet56MapChunks.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet56MapChunks.class differ
diff -ur mcp-mcdev/net/minecraft/src/Packet56MapChunks.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet56MapChunks.java
--- mcp-mcdev/net/minecraft/src/Packet56MapChunks.java	2012-11-29 21:14:40.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Packet56MapChunks.java	2012-11-29 21:41:11.000000000 -0800
@@ -22,7 +22,12 @@
    private byte[] field_73587_e;
    private byte[][] field_73584_f;
    private int field_73585_g;
-   private static byte[] field_73591_h = new byte[0];
+   private byte[] field_73591_h = new byte[0];
+   static final ThreadLocal localDeflater = new ThreadLocal() {
+      protected Deflater initialValue() {
+         return new Deflater(6);
+      }
+   };
 
 
    public Packet56MapChunks() {}
@@ -39,13 +44,13 @@
       for(int var4 = 0; var4 < var2; ++var4) {
          Chunk var5 = (Chunk)var1.get(var4);
          Packet51MapChunkData var6 = Packet51MapChunk.getMapChunkData(var5, true, '\uffff');
-         if(field_73591_h.length < var3 + var6.field_74582_a.length) {
+         if(this.field_73591_h.length < var3 + var6.field_74582_a.length) {
             byte[] var7 = new byte[var3 + var6.field_74582_a.length];
-            System.arraycopy(field_73591_h, 0, var7, 0, field_73591_h.length);
-            field_73591_h = var7;
+            System.arraycopy(this.field_73591_h, 0, var7, 0, this.field_73591_h.length);
+            this.field_73591_h = var7;
          }
 
-         System.arraycopy(var6.field_74582_a, 0, field_73591_h, var3, var6.field_74582_a.length);
+         System.arraycopy(var6.field_74582_a, 0, this.field_73591_h, var3, var6.field_74582_a.length);
          var3 += var6.field_74582_a.length;
          this.field_73589_c[var4] = var5.xPosition;
          this.field_73586_d[var4] = var5.zPosition;
@@ -54,20 +59,20 @@
          this.field_73584_f[var4] = var6.field_74582_a;
       }
 
-      Deflater var11 = new Deflater(-1);
-
-      try {
-         var11.setInput(field_73591_h, 0, var3);
-         var11.finish();
-         this.field_73587_e = new byte[var3];
-         this.field_73585_g = var11.deflate(this.field_73587_e);
-      } finally {
-         var11.end();
+   }
+
+   public void compress() {
+      if(this.field_73587_e == null) {
+         Deflater var1 = (Deflater)localDeflater.get();
+         var1.reset();
+         var1.setInput(this.field_73591_h);
+         var1.finish();
+         this.field_73587_e = new byte[this.field_73591_h.length + 100];
+         this.field_73585_g = var1.deflate(this.field_73587_e);
       }
-
    }
 
-   public void readPacketData(DataInputStream var1) {
+   public void readPacketData(DataInputStream var1) throws IOException {
       short var2 = var1.readShort();
       this.field_73585_g = var1.readInt();
       this.field_73589_c = new int[var2];
@@ -75,14 +80,14 @@
       this.field_73590_a = new int[var2];
       this.field_73588_b = new int[var2];
       this.field_73584_f = new byte[var2][];
-      if(field_73591_h.length < this.field_73585_g) {
-         field_73591_h = new byte[this.field_73585_g];
+      if(this.field_73591_h.length < this.field_73585_g) {
+         this.field_73591_h = new byte[this.field_73585_g];
       }
 
-      var1.readFully(field_73591_h, 0, this.field_73585_g);
+      var1.readFully(this.field_73591_h, 0, this.field_73585_g);
       byte[] var3 = new byte[196864 * var2];
       Inflater var4 = new Inflater();
-      var4.setInput(field_73591_h, 0, this.field_73585_g);
+      var4.setInput(this.field_73591_h, 0, this.field_73585_g);
 
       try {
          var4.inflate(var3);
@@ -106,7 +111,7 @@
             var7 += this.field_73590_a[var6] >> var8 & 1;
          }
 
-         var8 = 2048 * 5 * var7 + 256;
+         var8 = 10240 * var7 + 256;
          this.field_73584_f[var6] = new byte[var8];
          System.arraycopy(var3, var5, this.field_73584_f[var6], 0, var8);
          var5 += var8;
@@ -114,7 +119,8 @@
 
    }
 
-   public void writePacketData(DataOutputStream var1) {
+   public void writePacketData(DataOutputStream var1) throws IOException {
+      this.compress();
       var1.writeShort(this.field_73589_c.length);
       var1.writeInt(this.field_73585_g);
       var1.write(this.field_73587_e, 0, this.field_73585_g);
Binary files mcp-mcdev/net/minecraft/src/Path.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Path.class differ
diff -ur mcp-mcdev/net/minecraft/src/Path.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Path.java
--- mcp-mcdev/net/minecraft/src/Path.java	2012-11-29 21:14:40.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Path.java	2012-11-29 21:41:10.000000000 -0800
@@ -4,7 +4,7 @@
 
 public class Path {
 
-   private PathPoint[] pathPoints = new PathPoint[1024];
+   private PathPoint[] pathPoints = new PathPoint[128];
    private int count = 0;
 
 
Binary files mcp-mcdev/net/minecraft/src/PlayerCapabilities.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerCapabilities.class differ
diff -ur mcp-mcdev/net/minecraft/src/PlayerCapabilities.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerCapabilities.java
--- mcp-mcdev/net/minecraft/src/PlayerCapabilities.java	2012-11-29 21:14:39.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerCapabilities.java	2012-11-29 21:41:10.000000000 -0800
@@ -9,8 +9,8 @@
    public boolean allowFlying = false;
    public boolean isCreativeMode = false;
    public boolean allowEdit = true;
-   private float flySpeed = 0.05F;
-   private float walkSpeed = 0.1F;
+   public float flySpeed = 0.05F;
+   public float walkSpeed = 0.1F;
 
 
    public void writeCapabilitiesToNBT(NBTTagCompound var1) {
Binary files mcp-mcdev/net/minecraft/src/PlayerInstance.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerInstance.class differ
diff -ur mcp-mcdev/net/minecraft/src/PlayerInstance.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerInstance.java
--- mcp-mcdev/net/minecraft/src/PlayerInstance.java	2012-11-29 21:14:39.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerInstance.java	2012-11-29 21:41:10.000000000 -0800
@@ -18,7 +18,6 @@
    private short[] blocksToUpdate;
    private int numBlocksToUpdate;
    private int field_73260_f;
-   // $FF: synthetic field
    final PlayerManager playerManager;
 
 
@@ -49,18 +48,18 @@
             long var2 = (long)this.currentChunk.chunkXPos + 2147483647L | (long)this.currentChunk.chunkZPos + 2147483647L << 32;
             PlayerManager.getChunkWatchers(this.playerManager).remove(var2);
             if(this.numBlocksToUpdate > 0) {
-               PlayerManager.getChunkWatchersWithPlayers(this.playerManager).remove(this);
+               PlayerManager.c(this.playerManager).remove(this);
             }
 
             this.playerManager.getMinecraftServer().theChunkProviderServer.dropChunk(this.currentChunk.chunkXPos, this.currentChunk.chunkZPos);
          }
-
       }
+
    }
 
    public void markBlockNeedsUpdate(int var1, int var2, int var3) {
       if(this.numBlocksToUpdate == 0) {
-         PlayerManager.getChunkWatchersWithPlayers(this.playerManager).add(this);
+         PlayerManager.c(this.playerManager).add(this);
       }
 
       this.field_73260_f |= 1 << (var2 >> 4);
@@ -99,14 +98,14 @@
             var3 = this.currentChunk.chunkZPos * 16 + (this.blocksToUpdate[0] >> 8 & 15);
             this.sendPacketToPlayersInInstance(new Packet53BlockChange(var1, var2, var3, PlayerManager.getWorldServer(this.playerManager)));
             if(PlayerManager.getWorldServer(this.playerManager).blockHasTileEntity(var1, var2, var3)) {
-               this.updateTileEntity(PlayerManager.getWorldServer(this.playerManager).getBlockTileEntity(var1, var2, var3));
+               this.updateTileEntity(PlayerManager.getWorldServer(this.playerManager).getTileEntity(var1, var2, var3));
             }
          } else {
             int var4;
             if(this.numBlocksToUpdate == 64) {
                var1 = this.currentChunk.chunkXPos * 16;
                var2 = this.currentChunk.chunkZPos * 16;
-               this.sendPacketToPlayersInInstance(new Packet51MapChunk(PlayerManager.getWorldServer(this.playerManager).getChunkFromChunkCoords(this.currentChunk.chunkXPos, this.currentChunk.chunkZPos), false, this.field_73260_f));
+               this.sendPacketToPlayersInInstance(new Packet51MapChunk(PlayerManager.getWorldServer(this.playerManager).getChunkFromChunkCoords(this.currentChunk.chunkXPos, this.currentChunk.chunkZPos), this.field_73260_f == '\uffff', this.field_73260_f));
 
                for(var3 = 0; var3 < 16; ++var3) {
                   if((this.field_73260_f & 1 << var3) != 0) {
@@ -126,7 +125,7 @@
                   var3 = this.blocksToUpdate[var1] & 255;
                   var4 = this.currentChunk.chunkZPos * 16 + (this.blocksToUpdate[var1] >> 8 & 15);
                   if(PlayerManager.getWorldServer(this.playerManager).blockHasTileEntity(var2, var3, var4)) {
-                     this.updateTileEntity(PlayerManager.getWorldServer(this.playerManager).getBlockTileEntity(var2, var3, var4));
+                     this.updateTileEntity(PlayerManager.getWorldServer(this.playerManager).getTileEntity(var2, var3, var4));
                   }
                }
             }
@@ -135,6 +134,7 @@
          this.numBlocksToUpdate = 0;
          this.field_73260_f = 0;
       }
+
    }
 
    private void updateTileEntity(TileEntity var1) {
@@ -147,12 +147,10 @@
 
    }
 
-   // $FF: synthetic method
    static ChunkCoordIntPair getChunkLocation(PlayerInstance var0) {
       return var0.currentChunk;
    }
 
-   // $FF: synthetic method
    static List getPlayersInChunk(PlayerInstance var0) {
       return var0.players;
    }
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: PlayerManager$1.class
Binary files mcp-mcdev/net/minecraft/src/PlayerManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/PlayerManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerManager.java
--- mcp-mcdev/net/minecraft/src/PlayerManager.java	2012-11-29 21:14:38.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PlayerManager.java	2012-11-29 21:41:09.000000000 -0800
@@ -1,7 +1,12 @@
 package net.minecraft.src;
 
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.Iterator;
 import java.util.List;
+import java.util.Queue;
+import java.util.concurrent.ConcurrentLinkedQueue;
 import net.minecraft.src.ChunkCoordIntPair;
 import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.LongHashMap;
@@ -14,9 +19,10 @@
    private final WorldServer theWorldServer;
    private final List players = new ArrayList();
    private final LongHashMap playerInstances = new LongHashMap();
-   private final List playerInstancesToUpdate = new ArrayList();
+   private final Queue playerInstancesToUpdate = new ConcurrentLinkedQueue();
    private final int playerViewRadius;
    private final int[][] xzDirectionsConst = new int[][]{{1, 0}, {0, 1}, {-1, 0}, {0, -1}};
+   private boolean wasNotEmpty;
 
 
    public PlayerManager(WorldServer var1, int var2) {
@@ -35,16 +41,27 @@
    }
 
    public void updatePlayerInstances() {
-      for(int var1 = 0; var1 < this.playerInstancesToUpdate.size(); ++var1) {
-         ((PlayerInstance)this.playerInstancesToUpdate.get(var1)).onUpdate();
+      Iterator var1 = this.playerInstancesToUpdate.iterator();
+
+      while(var1.hasNext()) {
+         PlayerInstance var2 = (PlayerInstance)var1.next();
+         var2.onUpdate();
+         var1.remove();
       }
 
-      this.playerInstancesToUpdate.clear();
       if(this.players.isEmpty()) {
-         WorldProvider var2 = this.theWorldServer.provider;
-         if(!var2.canRespawnHere()) {
+         if(!this.wasNotEmpty) {
+            return;
+         }
+
+         WorldProvider var3 = this.theWorldServer.provider;
+         if(!var3.canRespawnHere()) {
             this.theWorldServer.theChunkProviderServer.unloadAllChunks();
          }
+
+         this.wasNotEmpty = false;
+      } else {
+         this.wasNotEmpty = true;
       }
 
    }
@@ -60,6 +77,11 @@
       return var6;
    }
 
+   public final boolean isChunkInUse(int var1, int var2) {
+      PlayerInstance var3 = this.getPlayerInstance(var1, var2, false);
+      return var3 != null?PlayerInstance.getPlayersInChunk(var3).size() > 0:false;
+   }
+
    public void markBlockNeedsUpdate(int var1, int var2, int var3) {
       int var4 = var1 >> 4;
       int var5 = var3 >> 4;
@@ -152,8 +174,8 @@
    }
 
    public void updateMountedMovingPlayer(EntityPlayerMP var1) {
-      int var2 = (int)var1.posX >> 4;
-      int var3 = (int)var1.posZ >> 4;
+      final int var2 = (int)var1.posX >> 4;
+      final int var3 = (int)var1.posZ >> 4;
       double var4 = var1.managedPosX - var1.posX;
       double var6 = var1.managedPosZ - var1.posZ;
       double var8 = var4 * var4 + var6 * var6;
@@ -182,8 +204,17 @@
             this.filterChunkLoadQueue(var1);
             var1.managedPosX = var1.posX;
             var1.managedPosZ = var1.posZ;
+            if(var12 > 1 || var12 < -1 || var13 > 1 || var13 < -1) {
+               List var18 = var1.loadedChunks;
+               Collections.sort(var18, new Comparator() {
+                  public int compare(ChunkCoordIntPair var1, ChunkCoordIntPair var2x) {
+                     return Math.max(Math.abs(var1.chunkXPos - var2), Math.abs(var1.chunkZPos - var3)) - Math.max(Math.abs(var2x.chunkXPos - var2), Math.abs(var2x.chunkZPos - var3));
+                  }
+               });
+            }
          }
       }
+
    }
 
    public boolean isPlayerWatchingChunk(EntityPlayerMP var1, int var2, int var3) {
@@ -195,18 +226,15 @@
       return var0 * 16 - 16;
    }
 
-   // $FF: synthetic method
    static WorldServer getWorldServer(PlayerManager var0) {
       return var0.theWorldServer;
    }
 
-   // $FF: synthetic method
    static LongHashMap getChunkWatchers(PlayerManager var0) {
       return var0.playerInstances;
    }
 
-   // $FF: synthetic method
-   static List getChunkWatchersWithPlayers(PlayerManager var0) {
+   static Queue c(PlayerManager var0) {
       return var0.playerInstancesToUpdate;
    }
 }
Binary files mcp-mcdev/net/minecraft/src/Potion.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Potion.class differ
diff -ur mcp-mcdev/net/minecraft/src/Potion.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Potion.java
--- mcp-mcdev/net/minecraft/src/Potion.java	2012-11-29 21:14:37.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Potion.java	2012-11-29 21:41:09.000000000 -0800
@@ -1,9 +1,17 @@
 package net.minecraft.src;
 
 import net.minecraft.src.DamageSource;
+import net.minecraft.src.Entity;
 import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPotion;
 import net.minecraft.src.PotionHealth;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.potion.CraftPotionEffectType;
+import org.bukkit.event.entity.EntityDamageEvent;
+import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
+import org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason;
+import org.bukkit.potion.PotionEffectType;
 
 public class Potion {
 
@@ -60,6 +68,7 @@
       }
 
       this.liquidColor = var3;
+      PotionEffectType.registerPotionEffectType(new CraftPotionEffectType(this));
    }
 
    protected Potion setIconIndex(int var1, int var2) {
@@ -74,40 +83,56 @@
    public void performEffect(EntityLiving var1, int var2) {
       if(this.id == regeneration.id) {
          if(var1.getHealth() < var1.getMaxHealth()) {
-            var1.heal(1);
-         }
-      } else if(this.id == poison.id) {
-         if(var1.getHealth() > 1) {
-            var1.attackEntityFrom(DamageSource.magic, 1);
-         }
-      } else if(this.id == wither.id) {
-         var1.attackEntityFrom(DamageSource.wither, 1);
-      } else if(this.id == hunger.id && var1 instanceof EntityPlayer) {
-         ((EntityPlayer)var1).addExhaustion(0.025F * (float)(var2 + 1));
-      } else if((this.id != heal.id || var1.isEntityUndead()) && (this.id != harm.id || !var1.isEntityUndead())) {
-         if(this.id == harm.id && !var1.isEntityUndead() || this.id == heal.id && var1.isEntityUndead()) {
-            var1.attackEntityFrom(DamageSource.magic, 6 << var2);
+            var1.heal(1, RegainReason.MAGIC_REGEN);
          }
       } else {
-         var1.heal(6 << var2);
+         EntityDamageEvent var3;
+         if(this.id == poison.id) {
+            if(var1.getHealth() > 1) {
+               var3 = CraftEventFactory.callEntityDamageEvent((Entity)null, var1, DamageCause.POISON, 1);
+               if(!var3.isCancelled() && var3.getDamage() > 0) {
+                  var1.attackEntityFrom(DamageSource.magic, var3.getDamage());
+               }
+            }
+         } else if(this.id == wither.id) {
+            var3 = CraftEventFactory.callEntityDamageEvent((Entity)null, var1, DamageCause.WITHER, 1);
+            if(!var3.isCancelled() && var3.getDamage() > 0) {
+               var1.attackEntityFrom(DamageSource.wither, var3.getDamage());
+            }
+         } else if(this.id == hunger.id && var1 instanceof EntityPlayer) {
+            ((EntityPlayer)var1).addExhaustion(0.025F * (float)(var2 + 1));
+         } else if((this.id != heal.id || var1.isEntityUndead()) && (this.id != harm.id || !var1.isEntityUndead())) {
+            if(this.id == harm.id && !var1.isEntityUndead() || this.id == heal.id && var1.isEntityUndead()) {
+               var3 = CraftEventFactory.callEntityDamageEvent((Entity)null, var1, DamageCause.MAGIC, 6 << var2);
+               if(!var3.isCancelled() && var3.getDamage() > 0) {
+                  var1.attackEntityFrom(DamageSource.magic, var3.getDamage());
+               }
+            }
+         } else {
+            var1.heal(6 << var2, RegainReason.MAGIC);
+         }
       }
 
    }
 
    public void affectEntity(EntityLiving var1, EntityLiving var2, int var3, double var4) {
-      int var6;
+      this.applyInstantEffect(var1, var2, var3, var4, (EntityPotion)null);
+   }
+
+   public void applyInstantEffect(EntityLiving var1, EntityLiving var2, int var3, double var4, EntityPotion var6) {
+      int var7;
       if((this.id != heal.id || var2.isEntityUndead()) && (this.id != harm.id || !var2.isEntityUndead())) {
          if(this.id == harm.id && !var2.isEntityUndead() || this.id == heal.id && var2.isEntityUndead()) {
-            var6 = (int)(var4 * (double)(6 << var3) + 0.5D);
+            var7 = (int)(var4 * (double)(6 << var3) + 0.5D);
             if(var1 == null) {
-               var2.attackEntityFrom(DamageSource.magic, var6);
+               var2.attackEntityFrom(DamageSource.magic, var7);
             } else {
-               var2.attackEntityFrom(DamageSource.causeIndirectMagicDamage(var2, var1), var6);
+               var2.attackEntityFrom(DamageSource.causeIndirectMagicDamage((Entity)(var6 != null?var6:var2), var1), var7);
             }
          }
       } else {
-         var6 = (int)(var4 * (double)(6 << var3) + 0.5D);
-         var2.heal(var6);
+         var7 = (int)(var4 * (double)(6 << var3) + 0.5D);
+         var2.heal(var7, RegainReason.MAGIC);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/Profiler.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Profiler.class differ
diff -ur mcp-mcdev/net/minecraft/src/Profiler.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Profiler.java
--- mcp-mcdev/net/minecraft/src/Profiler.java	2012-11-29 21:14:36.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Profiler.java	2012-11-29 21:41:08.000000000 -0800
@@ -1,127 +1,25 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.Iterator;
 import java.util.List;
-import java.util.Map;
-import net.minecraft.src.ProfilerResult;
 
 public class Profiler {
 
-   private final List sectionList = new ArrayList();
-   private final List timestampList = new ArrayList();
    public boolean profilingEnabled = false;
-   private String profilingSection = "";
-   private final Map profilingMap = new HashMap();
 
 
-   public void clearProfiling() {
-      this.profilingMap.clear();
-      this.profilingSection = "";
-      this.sectionList.clear();
-   }
+   public final void clearProfiling() {}
 
-   public void startSection(String var1) {
-      if(this.profilingEnabled) {
-         if(this.profilingSection.length() > 0) {
-            this.profilingSection = this.profilingSection + ".";
-         }
-
-         this.profilingSection = this.profilingSection + var1;
-         this.sectionList.add(this.profilingSection);
-         this.timestampList.add(Long.valueOf(System.nanoTime()));
-      }
-   }
+   public final void startSection(String var1) {}
 
-   public void endSection() {
-      if(this.profilingEnabled) {
-         long var1 = System.nanoTime();
-         long var3 = ((Long)this.timestampList.remove(this.timestampList.size() - 1)).longValue();
-         this.sectionList.remove(this.sectionList.size() - 1);
-         long var5 = var1 - var3;
-         if(this.profilingMap.containsKey(this.profilingSection)) {
-            this.profilingMap.put(this.profilingSection, Long.valueOf(((Long)this.profilingMap.get(this.profilingSection)).longValue() + var5));
-         } else {
-            this.profilingMap.put(this.profilingSection, Long.valueOf(var5));
-         }
-
-         if(var5 > 100000000L) {
-            System.out.println("Something\'s taking too long! \'" + this.profilingSection + "\' took aprox " + (double)var5 / 1000000.0D + " ms");
-         }
-
-         this.profilingSection = !this.sectionList.isEmpty()?(String)this.sectionList.get(this.sectionList.size() - 1):"";
-      }
-   }
+   public final void endSection() {}
 
-   public List getProfilingData(String var1) {
-      if(!this.profilingEnabled) {
-         return null;
-      } else {
-         long var3 = this.profilingMap.containsKey("root")?((Long)this.profilingMap.get("root")).longValue():0L;
-         long var5 = this.profilingMap.containsKey(var1)?((Long)this.profilingMap.get(var1)).longValue():-1L;
-         ArrayList var7 = new ArrayList();
-         if(var1.length() > 0) {
-            var1 = var1 + ".";
-         }
-
-         long var8 = 0L;
-         Iterator var10 = this.profilingMap.keySet().iterator();
-
-         while(var10.hasNext()) {
-            String var11 = (String)var10.next();
-            if(var11.length() > var1.length() && var11.startsWith(var1) && var11.indexOf(".", var1.length() + 1) < 0) {
-               var8 += ((Long)this.profilingMap.get(var11)).longValue();
-            }
-         }
-
-         float var21 = (float)var8;
-         if(var8 < var5) {
-            var8 = var5;
-         }
-
-         if(var3 < var8) {
-            var3 = var8;
-         }
-
-         Iterator var20 = this.profilingMap.keySet().iterator();
-
-         String var12;
-         while(var20.hasNext()) {
-            var12 = (String)var20.next();
-            if(var12.length() > var1.length() && var12.startsWith(var1) && var12.indexOf(".", var1.length() + 1) < 0) {
-               long var13 = ((Long)this.profilingMap.get(var12)).longValue();
-               double var15 = (double)var13 * 100.0D / (double)var8;
-               double var17 = (double)var13 * 100.0D / (double)var3;
-               String var19 = var12.substring(var1.length());
-               var7.add(new ProfilerResult(var19, var15, var17));
-            }
-         }
-
-         var20 = this.profilingMap.keySet().iterator();
-
-         while(var20.hasNext()) {
-            var12 = (String)var20.next();
-            this.profilingMap.put(var12, Long.valueOf(((Long)this.profilingMap.get(var12)).longValue() * 999L / 1000L));
-         }
-
-         if((float)var8 > var21) {
-            var7.add(new ProfilerResult("unspecified", (double)((float)var8 - var21) * 100.0D / (double)var8, (double)((float)var8 - var21) * 100.0D / (double)var3));
-         }
-
-         Collections.sort(var7);
-         var7.add(0, new ProfilerResult(var1, 100.0D, (double)var8 * 100.0D / (double)var3));
-         return var7;
-      }
+   public final List getProfilingData(String var1) {
+      return null;
    }
 
-   public void endStartSection(String var1) {
-      this.endSection();
-      this.startSection(var1);
-   }
+   public final void endStartSection(String var1) {}
 
-   public String getNameOfLastSection() {
-      return this.sectionList.size() == 0?"[UNKNOWN]":(String)this.sectionList.get(this.sectionList.size() - 1);
+   public final String getNameOfLastSection() {
+      return null;
    }
 }
Binary files mcp-mcdev/net/minecraft/src/PropertyManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PropertyManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/PropertyManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PropertyManager.java
--- mcp-mcdev/net/minecraft/src/PropertyManager.java	2012-11-29 21:14:36.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/PropertyManager.java	2012-11-29 21:41:08.000000000 -0800
@@ -7,15 +7,19 @@
 import java.util.Properties;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+import org.bukkit.craftbukkit.libs.joptsimple.OptionSet;
 
 public class PropertyManager {
 
    public static Logger logger = Logger.getLogger("Minecraft");
-   private Properties serverProperties = new Properties();
+   public Properties serverProperties;
    private File serverPropertiesFile;
+   private OptionSet options;
 
 
    public PropertyManager(File var1) {
+      this.serverProperties = new Properties();
+      this.options = null;
       this.serverPropertiesFile = var1;
       if(var1.exists()) {
          FileInputStream var2 = null;
@@ -43,6 +47,15 @@
 
    }
 
+   public PropertyManager(OptionSet var1) {
+      this((File)var1.valueOf("config"));
+      this.options = var1;
+   }
+
+   private Object getOverride(String var1, Object var2) {
+      return this.options != null && this.options.has(var1)?this.options.valueOf(var1):var2;
+   }
+
    public void generateNewProperties() {
       logger.log(Level.INFO, "Generating new properties file");
       this.saveProperties();
@@ -76,17 +89,19 @@
 
    public String getStringProperty(String var1, String var2) {
       if(!this.serverProperties.containsKey(var1)) {
+         var2 = (String)this.getOverride(var1, var2);
          this.serverProperties.setProperty(var1, var2);
          this.saveProperties();
       }
 
-      return this.serverProperties.getProperty(var1, var2);
+      return (String)this.getOverride(var1, this.serverProperties.getProperty(var1, var2));
    }
 
    public int getIntProperty(String var1, int var2) {
       try {
-         return Integer.parseInt(this.getStringProperty(var1, "" + var2));
+         return ((Integer)this.getOverride(var1, Integer.valueOf(Integer.parseInt(this.getStringProperty(var1, "" + var2))))).intValue();
       } catch (Exception var4) {
+         var2 = ((Integer)this.getOverride(var1, Integer.valueOf(var2))).intValue();
          this.serverProperties.setProperty(var1, "" + var2);
          return var2;
       }
@@ -94,8 +109,9 @@
 
    public boolean getBooleanProperty(String var1, boolean var2) {
       try {
-         return Boolean.parseBoolean(this.getStringProperty(var1, "" + var2));
+         return ((Boolean)this.getOverride(var1, Boolean.valueOf(Boolean.parseBoolean(this.getStringProperty(var1, "" + var2))))).booleanValue();
       } catch (Exception var4) {
+         var2 = ((Boolean)this.getOverride(var1, Boolean.valueOf(var2))).booleanValue();
          this.serverProperties.setProperty(var1, "" + var2);
          return var2;
       }
diff -ur mcp-mcdev/net/minecraft/src/RConThreadClient.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RConThreadClient.java
--- mcp-mcdev/net/minecraft/src/RConThreadClient.java	2012-11-29 21:14:35.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RConThreadClient.java	2012-11-29 21:41:07.000000000 -0800
@@ -41,13 +41,13 @@
 
             BufferedInputStream var1 = new BufferedInputStream(this.clientSocket.getInputStream());
             int var2 = var1.read(this.buffer, 0, 1460);
-            if(10 <= var2) {
-               byte var3 = 0;
-               int var4 = RConUtils.getBytesAsLEInt(this.buffer, 0, var2);
-               if(var4 != var2 - 4) {
-                  return;
-               }
+            if(10 > var2) {
+               return;
+            }
 
+            byte var3 = 0;
+            int var4 = RConUtils.getBytesAsLEInt(this.buffer, 0, var2);
+            if(var4 == var2 - 4) {
                int var21 = var3 + 4;
                int var5 = RConUtils.getBytesAsLEInt(this.buffer, var21, var2);
                var21 += 4;
Binary files mcp-mcdev/net/minecraft/src/RecipesArmorDyes.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RecipesArmorDyes.class differ
diff -ur mcp-mcdev/net/minecraft/src/RecipesArmorDyes.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RecipesArmorDyes.java
--- mcp-mcdev/net/minecraft/src/RecipesArmorDyes.java	2012-11-29 21:14:35.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RecipesArmorDyes.java	2012-11-29 21:41:07.000000000 -0800
@@ -1,6 +1,7 @@
 package net.minecraft.src;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import net.minecraft.src.BlockCloth;
 import net.minecraft.src.EntitySheep;
 import net.minecraft.src.EnumArmorMaterial;
@@ -9,9 +10,14 @@
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemArmor;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.ShapelessRecipes;
 import net.minecraft.src.World;
 
-public class RecipesArmorDyes implements IRecipe {
+public class RecipesArmorDyes extends ShapelessRecipes implements IRecipe {
+
+   public RecipesArmorDyes() {
+      super(new ItemStack(Item.helmetLeather, 0, 0), Arrays.asList(new ItemStack[]{new ItemStack(Item.dyePowder, 0, 5)}));
+   }
 
    public boolean matches(InventoryCrafting var1, World var2) {
       ItemStack var3 = null;
@@ -51,7 +57,7 @@
       int var9;
       float var10;
       float var11;
-      int var17;
+      int var15;
       for(var7 = 0; var7 < var1.getSizeInventory(); ++var7) {
          ItemStack var8 = var1.getStackInSlot(var7);
          if(var8 != null) {
@@ -78,14 +84,14 @@
                   return null;
                }
 
-               float[] var14 = EntitySheep.fleeceColorTable[BlockCloth.getBlockFromDye(var8.getItemDamage())];
-               int var16 = (int)(var14[0] * 255.0F);
-               int var15 = (int)(var14[1] * 255.0F);
-               var17 = (int)(var14[2] * 255.0F);
-               var4 += Math.max(var16, Math.max(var15, var17));
-               var3[0] += var16;
-               var3[1] += var15;
-               var3[2] += var17;
+               float[] var17 = EntitySheep.fleeceColorTable[BlockCloth.getBlockFromDye(var8.getItemDamage())];
+               int var13 = (int)(var17[0] * 255.0F);
+               int var14 = (int)(var17[1] * 255.0F);
+               var15 = (int)(var17[2] * 255.0F);
+               var4 += Math.max(var13, Math.max(var14, var15));
+               var3[0] += var13;
+               var3[1] += var14;
+               var3[2] += var15;
                ++var5;
             }
          }
@@ -95,16 +101,16 @@
          return null;
       } else {
          var7 = var3[0] / var5;
-         int var13 = var3[1] / var5;
+         int var16 = var3[1] / var5;
          var9 = var3[2] / var5;
          var10 = (float)var4 / (float)var5;
-         var11 = (float)Math.max(var7, Math.max(var13, var9));
+         var11 = (float)Math.max(var7, Math.max(var16, var9));
          var7 = (int)((float)var7 * var10 / var11);
-         var13 = (int)((float)var13 * var10 / var11);
+         var16 = (int)((float)var16 * var10 / var11);
          var9 = (int)((float)var9 * var10 / var11);
-         var17 = (var7 << 8) + var13;
-         var17 = (var17 << 8) + var9;
-         var6.func_82813_b(var2, var17);
+         var15 = (var7 << 8) + var16;
+         var15 = (var15 << 8) + var9;
+         var6.func_82813_b(var2, var15);
          return var2;
       }
    }
Binary files mcp-mcdev/net/minecraft/src/RecipesMapCloning.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RecipesMapCloning.class differ
diff -ur mcp-mcdev/net/minecraft/src/RecipesMapCloning.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RecipesMapCloning.java
--- mcp-mcdev/net/minecraft/src/RecipesMapCloning.java	2012-11-29 21:14:34.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/RecipesMapCloning.java	2012-11-29 21:41:06.000000000 -0800
@@ -1,12 +1,18 @@
 package net.minecraft.src;
 
+import java.util.Arrays;
 import net.minecraft.src.IRecipe;
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.Item;
 import net.minecraft.src.ItemStack;
+import net.minecraft.src.ShapelessRecipes;
 import net.minecraft.src.World;
 
-public class RecipesMapCloning implements IRecipe {
+public class RecipesMapCloning extends ShapelessRecipes implements IRecipe {
+
+   public RecipesMapCloning() {
+      super(new ItemStack(Item.map, 0, -1), Arrays.asList(new ItemStack[]{new ItemStack(Item.emptyMap, 0, 0)}));
+   }
 
    public boolean matches(InventoryCrafting var1, World var2) {
       int var3 = 0;
Binary files mcp-mcdev/net/minecraft/src/SaveHandler.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SaveHandler.class differ
diff -ur mcp-mcdev/net/minecraft/src/SaveHandler.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SaveHandler.java
--- mcp-mcdev/net/minecraft/src/SaveHandler.java	2012-11-29 21:14:33.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SaveHandler.java	2012-11-29 21:41:06.000000000 -0800
@@ -6,9 +6,11 @@
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.IOException;
+import java.util.UUID;
 import java.util.logging.Logger;
 import net.minecraft.src.CompressedStreamTools;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.IChunkLoader;
 import net.minecraft.src.IPlayerFileData;
 import net.minecraft.src.ISaveHandler;
@@ -16,6 +18,7 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.WorldInfo;
 import net.minecraft.src.WorldProvider;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
 
 public class SaveHandler implements ISaveHandler, IPlayerFileData {
 
@@ -25,6 +28,7 @@
    private final File mapDataDir;
    private final long initializationTime = System.currentTimeMillis();
    private final String saveDirectoryName;
+   private UUID uuid = null;
 
 
    public SaveHandler(File var1, String var2, boolean var3) {
@@ -52,17 +56,17 @@
             var2.close();
          }
 
-      } catch (IOException var7) {
-         var7.printStackTrace();
+      } catch (IOException var8) {
+         var8.printStackTrace();
          throw new RuntimeException("Failed to check session lock, aborting");
       }
    }
 
-   protected File getWorldDirectory() {
+   public File getWorldDirectory() {
       return this.worldDirectory;
    }
 
-   public void checkSessionLock() {
+   public void checkSessionLock() throws MinecraftException {
       try {
          File var1 = new File(this.worldDirectory, "session.lock");
          DataInputStream var2 = new DataInputStream(new FileInputStream(var1));
@@ -75,7 +79,7 @@
             var2.close();
          }
 
-      } catch (IOException var7) {
+      } catch (IOException var8) {
          throw new MinecraftException("Failed to check session lock, aborting");
       }
    }
@@ -93,8 +97,8 @@
             var2 = CompressedStreamTools.readCompressed(new FileInputStream(var1));
             var3 = var2.getCompoundTag("Data");
             return new WorldInfo(var3);
-         } catch (Exception var5) {
-            var5.printStackTrace();
+         } catch (Exception var6) {
+            var6.printStackTrace();
          }
       }
 
@@ -104,8 +108,8 @@
             var2 = CompressedStreamTools.readCompressed(new FileInputStream(var1));
             var3 = var2.getCompoundTag("Data");
             return new WorldInfo(var3);
-         } catch (Exception var4) {
-            var4.printStackTrace();
+         } catch (Exception var5) {
+            var5.printStackTrace();
          }
       }
 
@@ -191,6 +195,11 @@
    public void readPlayerData(EntityPlayer var1) {
       NBTTagCompound var2 = this.getPlayerData(var1.username);
       if(var2 != null) {
+         if(var1 instanceof EntityPlayerMP) {
+            CraftPlayer var3 = (CraftPlayer)var1.bukkitEntity;
+            var3.setFirstPlayed((new File(this.playersDirectory, var1.username + ".dat")).lastModified());
+         }
+
          var1.readFromNBT(var2);
       }
 
@@ -235,4 +244,33 @@
       return this.saveDirectoryName;
    }
 
+   public UUID getUUID() {
+      if(this.uuid != null) {
+         return this.uuid;
+      } else {
+         try {
+            File var1 = new File(this.worldDirectory, "uid.dat");
+            if(!var1.exists()) {
+               DataOutputStream var2 = new DataOutputStream(new FileOutputStream(var1));
+               this.uuid = UUID.randomUUID();
+               var2.writeLong(this.uuid.getMostSignificantBits());
+               var2.writeLong(this.uuid.getLeastSignificantBits());
+               var2.close();
+            } else {
+               DataInputStream var4 = new DataInputStream(new FileInputStream(var1));
+               this.uuid = new UUID(var4.readLong(), var4.readLong());
+               var4.close();
+            }
+
+            return this.uuid;
+         } catch (IOException var3) {
+            return null;
+         }
+      }
+   }
+
+   public File getPlayerDir() {
+      return this.playersDirectory;
+   }
+
 }
Binary files mcp-mcdev/net/minecraft/src/ServerBlockEventList.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerBlockEventList.class differ
diff -ur mcp-mcdev/net/minecraft/src/ServerBlockEventList.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerBlockEventList.java
--- mcp-mcdev/net/minecraft/src/ServerBlockEventList.java	2012-11-29 21:14:33.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerBlockEventList.java	2012-11-29 21:41:06.000000000 -0800
@@ -7,7 +7,6 @@
 
    private ServerBlockEventList() {}
 
-   // $FF: synthetic method
    ServerBlockEventList(Empty3 var1) {
       this();
    }
Binary files mcp-mcdev/net/minecraft/src/ServerConfigurationManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerConfigurationManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/ServerConfigurationManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerConfigurationManager.java
--- mcp-mcdev/net/minecraft/src/ServerConfigurationManager.java	2012-11-29 21:14:33.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerConfigurationManager.java	2012-11-29 21:41:06.000000000 -0800
@@ -7,8 +7,10 @@
 import java.util.Collections;
 import java.util.HashSet;
 import java.util.Iterator;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Set;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.logging.Logger;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BanEntry;
@@ -24,6 +26,7 @@
 import net.minecraft.src.ItemInWorldManager;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.NBTTagCompound;
+import net.minecraft.src.NetLoginHandler;
 import net.minecraft.src.NetServerHandler;
 import net.minecraft.src.Packet;
 import net.minecraft.src.Packet1Login;
@@ -41,27 +44,47 @@
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldServer;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.PortalTravelAgent;
+import org.bukkit.craftbukkit.command.ColouredConsoleSender;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerChangedWorldEvent;
+import org.bukkit.event.player.PlayerJoinEvent;
+import org.bukkit.event.player.PlayerLoginEvent;
+import org.bukkit.event.player.PlayerPortalEvent;
+import org.bukkit.event.player.PlayerQuitEvent;
+import org.bukkit.event.player.PlayerRespawnEvent;
+import org.bukkit.event.player.PlayerLoginEvent.Result;
+import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 
 public abstract class ServerConfigurationManager {
 
    private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd \'at\' HH:mm:ss z");
    public static final Logger logger = Logger.getLogger("Minecraft");
    private final MinecraftServer mcServer;
-   public final List playerEntityList = new ArrayList();
+   public final List playerEntityList = new CopyOnWriteArrayList();
    private final BanList bannedPlayers = new BanList(new File("banned-players.txt"));
    private final BanList bannedIPs = new BanList(new File("banned-ips.txt"));
    private Set ops = new HashSet();
-   private Set whiteListedPlayers = new HashSet();
-   private IPlayerFileData playerNBTManagerObj;
-   private boolean whiteListEnforced;
+   private Set whiteListedPlayers = new LinkedHashSet();
+   public IPlayerFileData playerNBTManagerObj;
+   public boolean whiteListEnforced;
    protected int maxPlayers;
    protected int viewDistance;
    private EnumGameType gameType;
    private boolean commandsAllowedForAll;
    private int playerPingIndex = 0;
+   private CraftServer cserver;
 
 
    public ServerConfigurationManager(MinecraftServer var1) {
+      var1.server = new CraftServer(var1, this);
+      var1.console = ColouredConsoleSender.getInstance();
+      this.cserver = var1.server;
       this.mcServer = var1;
       this.bannedPlayers.setListActive(false);
       this.bannedIPs.setListActive(false);
@@ -70,23 +93,28 @@
 
    public void initializeConnectionToPlayer(INetworkManager var1, EntityPlayerMP var2) {
       this.readPlayerDataFromFile(var2);
-      var2.setWorld(this.mcServer.worldServerForDimension(var2.dimension));
+      var2.spawnIn(this.mcServer.worldServerForDimension(var2.dimension));
       var2.theItemInWorldManager.setWorld((WorldServer)var2.worldObj);
       String var3 = "local";
       if(var1.getRemoteAddress() != null) {
          var3 = var1.getRemoteAddress().toString();
       }
 
-      logger.info(var2.username + "[" + var3 + "] logged in with entity id " + var2.entityId + " at (" + var2.posX + ", " + var2.posY + ", " + var2.posZ + ")");
+      logger.info(var2.username + "[" + var3 + "] logged in with entity id " + var2.entityId + " at ([" + var2.worldObj.worldInfo.getWorldName() + "] " + var2.posX + ", " + var2.posY + ", " + var2.posZ + ")");
       WorldServer var4 = this.mcServer.worldServerForDimension(var2.dimension);
       ChunkCoordinates var5 = var4.getSpawnPoint();
       this.func_72381_a(var2, (EntityPlayerMP)null, var4);
       NetServerHandler var6 = new NetServerHandler(this.mcServer, var1, var2);
-      var6.sendPacket(new Packet1Login(var2.entityId, var4.getWorldInfo().getTerrainType(), var2.theItemInWorldManager.getGameType(), var4.getWorldInfo().isHardcoreModeEnabled(), var4.provider.dimensionId, var4.difficultySetting, var4.getHeight(), this.getMaxPlayers()));
+      int var7 = this.getMaxPlayers();
+      if(var7 > 60) {
+         var7 = 60;
+      }
+
+      var6.sendPacket(new Packet1Login(var2.entityId, var4.getWorldInfo().getTerrainType(), var2.theItemInWorldManager.getGameType(), var4.getWorldInfo().isHardcoreModeEnabled(), var4.provider.dimensionId, var4.difficultySetting, var4.getHeight(), var7));
+      var2.getBukkitEntity().sendSupportedChannels();
       var6.sendPacket(new Packet6SpawnPosition(var5.posX, var5.posY, var5.posZ));
       var6.sendPacket(new Packet202PlayerAbilities(var2.capabilities));
       this.updateTimeAndWeatherForPlayer(var2, var4);
-      this.sendPacketToAllPlayers(new Packet3Chat("§e" + var2.username + " joined the game."));
       this.playerLoggedIn(var2);
       var6.setPlayerLocation(var2.posX, var2.posY, var2.posZ, var2.rotationYaw, var2.rotationPitch);
       this.mcServer.getNetworkThread().addPlayer(var6);
@@ -95,18 +123,20 @@
          var2.requestTexturePackLoad(this.mcServer.getTexturePack(), this.mcServer.textureSize());
       }
 
-      Iterator var7 = var2.getActivePotionEffects().iterator();
+      Iterator var8 = var2.getActivePotionEffects().iterator();
 
-      while(var7.hasNext()) {
-         PotionEffect var8 = (PotionEffect)var7.next();
-         var6.sendPacket(new Packet41EntityEffect(var2.entityId, var8));
+      while(var8.hasNext()) {
+         PotionEffect var9 = (PotionEffect)var8.next();
+         var6.sendPacket(new Packet41EntityEffect(var2.entityId, var9));
       }
 
       var2.addSelfToInternalCraftingInventory();
    }
 
    public void setPlayerManager(WorldServer[] var1) {
-      this.playerNBTManagerObj = var1[0].getSaveHandler().getPlayerNBTManager();
+      if(this.playerNBTManagerObj == null) {
+         this.playerNBTManagerObj = var1[0].getSaveHandler().getPlayerNBTManager();
+      }
    }
 
    public void func_72375_a(EntityPlayerMP var1, WorldServer var2) {
@@ -124,7 +154,7 @@
    }
 
    public void readPlayerDataFromFile(EntityPlayerMP var1) {
-      NBTTagCompound var2 = this.mcServer.worldServers[0].getWorldInfo().getPlayerNBTTagCompound();
+      NBTTagCompound var2 = ((WorldServer)this.mcServer.worlds.get(0)).getWorldInfo().getPlayerNBTTagCompound();
       if(var1.getCommandSenderName().equals(this.mcServer.getServerOwner()) && var2 != null) {
          var1.readFromNBT(var2);
       } else {
@@ -138,15 +168,38 @@
    }
 
    public void playerLoggedIn(EntityPlayerMP var1) {
-      this.sendPacketToAllPlayers(new Packet201PlayerInfo(var1.username, true, 1000));
+      this.cserver.detectListNameConflict(var1);
       this.playerEntityList.add(var1);
       WorldServer var2 = this.mcServer.worldServerForDimension(var1.dimension);
-      var2.spawnEntityInWorld(var1);
-      this.func_72375_a(var1, (WorldServer)null);
+      PlayerJoinEvent var3 = new PlayerJoinEvent(this.cserver.getPlayer(var1), "§e" + var1.username + " joined the game.");
+      this.cserver.getPluginManager().callEvent(var3);
+      String var4 = var3.getJoinMessage();
+      if(var4 != null && var4.length() > 0) {
+         this.mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet3Chat(var4));
+      }
 
-      for(int var3 = 0; var3 < this.playerEntityList.size(); ++var3) {
-         EntityPlayerMP var4 = (EntityPlayerMP)this.playerEntityList.get(var3);
-         var1.playerNetServerHandler.sendPacket(new Packet201PlayerInfo(var4.username, true, var4.ping));
+      this.cserver.onPlayerJoin(var3.getPlayer());
+      if(var1.worldObj == var2 && !var2.playerEntities.contains(var1)) {
+         var2.spawnEntityInWorld(var1);
+         this.func_72375_a(var1, (WorldServer)null);
+      }
+
+      Packet201PlayerInfo var5 = new Packet201PlayerInfo(var1.listName, true, 1000);
+
+      int var6;
+      EntityPlayerMP var7;
+      for(var6 = 0; var6 < this.playerEntityList.size(); ++var6) {
+         var7 = (EntityPlayerMP)this.playerEntityList.get(var6);
+         if(var7.getBukkitEntity().canSee(var1.getBukkitEntity())) {
+            var7.playerNetServerHandler.sendPacket(var5);
+         }
+      }
+
+      for(var6 = 0; var6 < this.playerEntityList.size(); ++var6) {
+         var7 = (EntityPlayerMP)this.playerEntityList.get(var6);
+         if(var1.getBukkitEntity().canSee(var7.getBukkitEntity())) {
+            var1.playerNetServerHandler.sendPacket(new Packet201PlayerInfo(var7.listName, true, var7.ping));
+         }
       }
 
    }
@@ -155,145 +208,241 @@
       var1.getServerForPlayer().getPlayerManager().updateMountedMovingPlayer(var1);
    }
 
-   public void playerLoggedOut(EntityPlayerMP var1) {
-      this.writePlayerData(var1);
-      WorldServer var2 = var1.getServerForPlayer();
-      var2.setEntityDead(var1);
-      var2.getPlayerManager().removePlayer(var1);
-      this.playerEntityList.remove(var1);
-      this.sendPacketToAllPlayers(new Packet201PlayerInfo(var1.username, false, 9999));
+   public String disconnect(EntityPlayerMP var1) {
+      if(var1.playerNetServerHandler.connectionClosed) {
+         return null;
+      } else {
+         PlayerQuitEvent var2 = new PlayerQuitEvent(this.cserver.getPlayer(var1), "§e" + var1.username + " left the game.");
+         this.cserver.getPluginManager().callEvent(var2);
+         this.writePlayerData(var1);
+         WorldServer var3 = var1.getServerForPlayer();
+         var3.setEntityDead(var1);
+         var3.getPlayerManager().removePlayer(var1);
+         this.playerEntityList.remove(var1);
+         Packet201PlayerInfo var4 = new Packet201PlayerInfo(var1.listName, false, 9999);
+
+         for(int var5 = 0; var5 < this.playerEntityList.size(); ++var5) {
+            EntityPlayerMP var6 = (EntityPlayerMP)this.playerEntityList.get(var5);
+            if(var6.getBukkitEntity().canSee(var1.getBukkitEntity())) {
+               var6.playerNetServerHandler.sendPacket(var4);
+            }
+         }
+
+         return var2.getQuitMessage();
+      }
    }
 
-   public String allowUserToConnect(SocketAddress var1, String var2) {
+   public EntityPlayerMP attemptLogin(NetLoginHandler var1, String var2, String var3) {
+      EntityPlayerMP var4 = new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(0), var2, (ItemInWorldManager)(this.mcServer.isDemo()?new DemoWorldManager(this.mcServer.worldServerForDimension(0)):new ItemInWorldManager(this.mcServer.worldServerForDimension(0))));
+      CraftPlayer var5 = var4.getBukkitEntity();
+      PlayerLoginEvent var6 = new PlayerLoginEvent(var5, var3, var1.getSocket().getInetAddress());
+      SocketAddress var7 = var1.myTCPConnection.getRemoteAddress();
       if(this.bannedPlayers.isBanned(var2)) {
-         BanEntry var6 = (BanEntry)this.bannedPlayers.getBannedList().get(var2);
-         String var7 = "You are banned from this server!\nReason: " + var6.getBanReason();
-         if(var6.getBanEndDate() != null) {
-            var7 = var7 + "\nYour ban will be removed on " + dateFormat.format(var6.getBanEndDate());
+         BanEntry var8 = (BanEntry)this.bannedPlayers.getBannedList().get(var2);
+         String var9 = "You are banned from this server!\nReason: " + var8.getBanReason();
+         if(var8.getBanEndDate() != null) {
+            var9 = var9 + "\nYour ban will be removed on " + dateFormat.format(var8.getBanEndDate());
          }
 
-         return var7;
+         var6.disallow(Result.KICK_BANNED, var9);
       } else if(!this.isAllowedToLogin(var2)) {
-         return "You are not white-listed on this server!";
+         var6.disallow(Result.KICK_WHITELIST, "You are not white-listed on this server!");
       } else {
-         String var3 = var1.toString();
-         var3 = var3.substring(var3.indexOf("/") + 1);
-         var3 = var3.substring(0, var3.indexOf(":"));
-         if(this.bannedIPs.isBanned(var3)) {
-            BanEntry var4 = (BanEntry)this.bannedIPs.getBannedList().get(var3);
-            String var5 = "Your IP address is banned from this server!\nReason: " + var4.getBanReason();
-            if(var4.getBanEndDate() != null) {
-               var5 = var5 + "\nYour ban will be removed on " + dateFormat.format(var4.getBanEndDate());
+         String var11 = var7.toString();
+         var11 = var11.substring(var11.indexOf("/") + 1);
+         var11 = var11.substring(0, var11.indexOf(":"));
+         if(this.bannedIPs.isBanned(var11)) {
+            BanEntry var12 = (BanEntry)this.bannedIPs.getBannedList().get(var11);
+            String var10 = "Your IP address is banned from this server!\nReason: " + var12.getBanReason();
+            if(var12.getBanEndDate() != null) {
+               var10 = var10 + "\nYour ban will be removed on " + dateFormat.format(var12.getBanEndDate());
             }
 
-            return var5;
+            var6.disallow(Result.KICK_BANNED, var10);
+         } else if(this.playerEntityList.size() >= this.maxPlayers) {
+            var6.disallow(Result.KICK_FULL, "The server is full!");
          } else {
-            return this.playerEntityList.size() >= this.maxPlayers?"The server is full!":null;
+            var6.disallow(Result.ALLOWED, var11);
          }
       }
+
+      this.cserver.getPluginManager().callEvent(var6);
+      if(var6.getResult() != Result.ALLOWED) {
+         var1.kickUser(var6.getKickMessage());
+         return null;
+      } else {
+         return var4;
+      }
    }
 
-   public EntityPlayerMP createPlayerForUser(String var1) {
-      ArrayList var2 = new ArrayList();
+   public EntityPlayerMP processLogin(EntityPlayerMP var1) {
+      String var2 = var1.username;
+      ArrayList var3 = new ArrayList();
 
-      EntityPlayerMP var4;
-      for(int var3 = 0; var3 < this.playerEntityList.size(); ++var3) {
-         var4 = (EntityPlayerMP)this.playerEntityList.get(var3);
-         if(var4.username.equalsIgnoreCase(var1)) {
-            var2.add(var4);
+      EntityPlayerMP var5;
+      for(int var4 = 0; var4 < this.playerEntityList.size(); ++var4) {
+         var5 = (EntityPlayerMP)this.playerEntityList.get(var4);
+         if(var5.username.equalsIgnoreCase(var2)) {
+            var3.add(var5);
          }
       }
 
-      Iterator var5 = var2.iterator();
+      Iterator var6 = var3.iterator();
 
-      while(var5.hasNext()) {
-         var4 = (EntityPlayerMP)var5.next();
-         var4.playerNetServerHandler.kickPlayer("You logged in from another location");
-      }
-
-      Object var6;
-      if(this.mcServer.isDemo()) {
-         var6 = new DemoWorldManager(this.mcServer.worldServerForDimension(0));
-      } else {
-         var6 = new ItemInWorldManager(this.mcServer.worldServerForDimension(0));
+      while(var6.hasNext()) {
+         var5 = (EntityPlayerMP)var6.next();
+         var5.playerNetServerHandler.kickPlayer("You logged in from another location");
       }
 
-      return new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(0), var1, (ItemInWorldManager)var6);
+      return var1;
    }
 
    public EntityPlayerMP recreatePlayerEntity(EntityPlayerMP var1, int var2, boolean var3) {
+      return this.moveToWorld(var1, var2, var3, (Location)null);
+   }
+
+   public EntityPlayerMP moveToWorld(EntityPlayerMP var1, int var2, boolean var3, Location var4) {
       var1.getServerForPlayer().getEntityTracker().removeTrackedPlayerSymmetric(var1);
-      var1.getServerForPlayer().getEntityTracker().untrackEntity(var1);
       var1.getServerForPlayer().getPlayerManager().removePlayer(var1);
       this.playerEntityList.remove(var1);
       this.mcServer.worldServerForDimension(var1.dimension).removeEntity(var1);
-      ChunkCoordinates var4 = var1.getBedLocation();
-      boolean var5 = var1.isSpawnForced();
-      var1.dimension = var2;
-      Object var6;
-      if(this.mcServer.isDemo()) {
-         var6 = new DemoWorldManager(this.mcServer.worldServerForDimension(var1.dimension));
-      } else {
-         var6 = new ItemInWorldManager(this.mcServer.worldServerForDimension(var1.dimension));
-      }
+      ChunkCoordinates var5 = var1.getBedLocation();
+      boolean var6 = var1.isSpawnForced();
+      EntityPlayerMP var7 = var1;
+      org.bukkit.World var8 = var1.getBukkitEntity().getWorld();
+      var1.playerConqueredTheEnd = false;
+      var1.clonePlayer(var1, var3);
+      ChunkCoordinates var11;
+      if(var4 == null) {
+         boolean var9 = false;
+         CraftWorld var10 = (CraftWorld)this.mcServer.server.getWorld(var1.spawnWorld);
+         if(var10 != null && var5 != null) {
+            var11 = EntityPlayer.verifyRespawnCoordinates(var10.getHandle(), var5, var6);
+            if(var11 != null) {
+               var9 = true;
+               var4 = new Location(var10, (double)var11.posX + 0.5D, (double)var11.posY, (double)var11.posZ + 0.5D);
+            } else {
+               var1.setSpawnChunk((ChunkCoordinates)null, true);
+               var1.playerNetServerHandler.sendPacket(new Packet70GameEvent(0, 0));
+            }
+         }
 
-      EntityPlayerMP var7 = new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(var1.dimension), var1.username, (ItemInWorldManager)var6);
-      var7.playerNetServerHandler = var1.playerNetServerHandler;
-      var7.clonePlayer(var1, var3);
-      var7.entityId = var1.entityId;
-      WorldServer var8 = this.mcServer.worldServerForDimension(var1.dimension);
-      this.func_72381_a(var7, var1, var8);
-      ChunkCoordinates var9;
-      if(var4 != null) {
-         var9 = EntityPlayer.verifyRespawnCoordinates(this.mcServer.worldServerForDimension(var1.dimension), var4, var5);
-         if(var9 != null) {
-            var7.setLocationAndAngles((double)((float)var9.posX + 0.5F), (double)((float)var9.posY + 0.1F), (double)((float)var9.posZ + 0.5F), 0.0F, 0.0F);
-            var7.setSpawnChunk(var4, var5);
-         } else {
-            var7.playerNetServerHandler.sendPacket(new Packet70GameEvent(0, 0));
+         if(var4 == null) {
+            var10 = (CraftWorld)this.mcServer.server.getWorlds().get(0);
+            var5 = var10.getHandle().getSpawnPoint();
+            var4 = new Location(var10, (double)var5.posX + 0.5D, (double)var5.posY, (double)var5.posZ + 0.5D);
          }
+
+         Player var12 = this.cserver.getPlayer(var1);
+         PlayerRespawnEvent var13 = new PlayerRespawnEvent(var12, var4, var9);
+         this.cserver.getPluginManager().callEvent(var13);
+         var4 = var13.getRespawnLocation();
+         var1.reset();
+      } else {
+         var4.setWorld(this.mcServer.worldServerForDimension(var2).getWorld());
       }
 
-      var8.theChunkProviderServer.loadChunk((int)var7.posX >> 4, (int)var7.posZ >> 4);
+      WorldServer var14 = ((CraftWorld)var4.getWorld()).getHandle();
+      var1.setPositionAndRotation(var4.getX(), var4.getY(), var4.getZ(), var4.getYaw(), var4.getPitch());
+      var14.theChunkProviderServer.loadChunk((int)var1.posX >> 4, (int)var1.posZ >> 4);
 
-      while(!var8.getCollidingBoundingBoxes(var7, var7.boundingBox).isEmpty()) {
+      while(!var14.getCollidingBoundingBoxes(var7, var7.boundingBox).isEmpty()) {
          var7.setPosition(var7.posX, var7.posY + 1.0D, var7.posZ);
       }
 
-      var7.playerNetServerHandler.sendPacket(new Packet9Respawn(var7.dimension, (byte)var7.worldObj.difficultySetting, var7.worldObj.getWorldInfo().getTerrainType(), var7.worldObj.getHeight(), var7.theItemInWorldManager.getGameType()));
-      var9 = var8.getSpawnPoint();
-      var7.playerNetServerHandler.setPlayerLocation(var7.posX, var7.posY, var7.posZ, var7.rotationYaw, var7.rotationPitch);
-      var7.playerNetServerHandler.sendPacket(new Packet6SpawnPosition(var9.posX, var9.posY, var9.posZ));
+      byte var15 = (byte)var14.getWorld().getEnvironment().getId();
+      var7.playerNetServerHandler.sendPacket(new Packet9Respawn((byte)(var15 >= 0?-1:0), (byte)var14.difficultySetting, var14.getWorldInfo().getTerrainType(), var14.getHeight(), var1.theItemInWorldManager.getGameType()));
+      var7.playerNetServerHandler.sendPacket(new Packet9Respawn(var15, (byte)var14.difficultySetting, var14.getWorldInfo().getTerrainType(), var14.getHeight(), var1.theItemInWorldManager.getGameType()));
+      var7.spawnIn(var14);
+      var7.isDead = false;
+      var7.playerNetServerHandler.teleport(new Location(var14.getWorld(), var7.posX, var7.posY, var7.posZ, var7.rotationYaw, var7.rotationPitch));
+      var7.setSneaking(false);
+      var11 = var14.getSpawnPoint();
+      var7.playerNetServerHandler.sendPacket(new Packet6SpawnPosition(var11.posX, var11.posY, var11.posZ));
       var7.playerNetServerHandler.sendPacket(new Packet43Experience(var7.experience, var7.experienceTotal, var7.experienceLevel));
-      this.updateTimeAndWeatherForPlayer(var7, var8);
-      var8.getPlayerManager().addPlayer(var7);
-      var8.spawnEntityInWorld(var7);
+      this.updateTimeAndWeatherForPlayer(var7, var14);
+      var14.getPlayerManager().addPlayer(var7);
+      var14.spawnEntityInWorld(var7);
       this.playerEntityList.add(var7);
-      var7.addSelfToInternalCraftingInventory();
+      this.syncPlayerInventory(var7);
+      var7.sendPlayerAbilities();
+      Iterator var16 = var7.getActivePotionEffects().iterator();
+
+      while(var16.hasNext()) {
+         PotionEffect var18 = (PotionEffect)var16.next();
+         var7.playerNetServerHandler.sendPacket(new Packet41EntityEffect(var7.entityId, var18));
+      }
+
+      if(var8 != var4.getWorld()) {
+         PlayerChangedWorldEvent var17 = new PlayerChangedWorldEvent(var7.getBukkitEntity(), var8);
+         Bukkit.getServer().getPluginManager().callEvent(var17);
+      }
+
       return var7;
    }
 
    public void sendPlayerToOtherDimension(EntityPlayerMP var1, int var2) {
-      int var3 = var1.dimension;
+      int var3 = var2;
       WorldServer var4 = this.mcServer.worldServerForDimension(var1.dimension);
-      var1.dimension = var2;
-      WorldServer var5 = this.mcServer.worldServerForDimension(var1.dimension);
-      var1.playerNetServerHandler.sendPacket(new Packet9Respawn(var1.dimension, (byte)var1.worldObj.difficultySetting, var5.getWorldInfo().getTerrainType(), var5.getHeight(), var1.theItemInWorldManager.getGameType()));
-      var4.removeEntity(var1);
-      var1.isDead = false;
-      this.transferEntityToWorld(var1, var3, var4, var5);
-      this.func_72375_a(var1, var4);
-      var1.playerNetServerHandler.setPlayerLocation(var1.posX, var1.posY, var1.posZ, var1.rotationYaw, var1.rotationPitch);
-      var1.theItemInWorldManager.setWorld(var5);
-      this.updateTimeAndWeatherForPlayer(var1, var5);
-      this.syncPlayerInventory(var1);
-      Iterator var6 = var1.getActivePotionEffects().iterator();
+      WorldServer var5 = null;
+      if(var1.dimension < 10) {
+         Iterator var6 = this.mcServer.worlds.iterator();
+
+         while(var6.hasNext()) {
+            WorldServer var7 = (WorldServer)var6.next();
+            if(var7.dimension == var3) {
+               var5 = var7;
+            }
+         }
+      }
 
-      while(var6.hasNext()) {
-         PotionEffect var7 = (PotionEffect)var6.next();
-         var1.playerNetServerHandler.sendPacket(new Packet41EntityEffect(var1.entityId, var7));
+      Location var15 = new Location(var4.getWorld(), var1.posX, var1.posY, var1.posZ, var1.rotationYaw, var1.rotationPitch);
+      Location var16 = null;
+      if(var5 != null) {
+         if((var3 == -1 || var3 == 0) && (var1.dimension == -1 || var1.dimension == 0)) {
+            double var8 = var3 == 0?8.0D:0.125D;
+            var16 = var5 == null?null:new Location(var5.getWorld(), var1.posX * var8, var1.posY, var1.posZ * var8, var1.rotationYaw, var1.rotationPitch);
+         } else {
+            ChunkCoordinates var10 = var5.getEntrancePortalLocation();
+            if(var10 != null) {
+               var16 = new Location(var5.getWorld(), (double)var10.posX, (double)var10.posY, (double)var10.posZ, 90.0F, 0.0F);
+            }
+         }
       }
 
+      TeleportCause var17 = TeleportCause.UNKNOWN;
+      int var11 = var1.getBukkitEntity().getWorld().getEnvironment().getId();
+      switch(var3) {
+      case -1:
+         var17 = TeleportCause.NETHER_PORTAL;
+         break;
+      case 0:
+         if(var11 == -1) {
+            var17 = TeleportCause.NETHER_PORTAL;
+         } else if(var11 == 1) {
+            var17 = TeleportCause.END_PORTAL;
+         }
+         break;
+      case 1:
+         var17 = TeleportCause.END_PORTAL;
+      }
+
+      PortalTravelAgent var12 = new PortalTravelAgent();
+      PlayerPortalEvent var13 = new PlayerPortalEvent(var1.getBukkitEntity(), var15, var16, var12, var17);
+      if(var1.dimension == 1) {
+         var13.useTravelAgent(false);
+      }
+
+      Bukkit.getServer().getPluginManager().callEvent(var13);
+      if(!var13.isCancelled() && var13.getTo() != null) {
+         Location var14 = var13.getTo();
+         if(var13.useTravelAgent()) {
+            var14 = var13.getPortalTravelAgent().findOrCreate(var14);
+         }
+
+         var5 = ((CraftWorld)var14.getWorld()).getHandle();
+         this.moveToWorld(var1, var5.dimension, true, var14);
+      }
    }
 
    public void transferEntityToWorld(Entity var1, int var2, WorldServer var3, WorldServer var4) {
@@ -359,11 +508,6 @@
          this.playerPingIndex = 0;
       }
 
-      if(this.playerPingIndex < this.playerEntityList.size()) {
-         EntityPlayerMP var1 = (EntityPlayerMP)this.playerEntityList.get(this.playerPingIndex);
-         this.sendPacketToAllPlayers(new Packet201PlayerInfo(var1.username, true, var1.ping));
-      }
-
    }
 
    public void sendPacketToAllPlayers(Packet var1) {
@@ -417,10 +561,20 @@
 
    public void addOp(String var1) {
       this.ops.add(var1.toLowerCase());
+      Player var2 = this.mcServer.server.getPlayer(var1);
+      if(var2 != null) {
+         var2.recalculatePermissions();
+      }
+
    }
 
    public void removeOp(String var1) {
       this.ops.remove(var1.toLowerCase());
+      Player var2 = this.mcServer.server.getPlayer(var1);
+      if(var2 != null) {
+         var2.recalculatePermissions();
+      }
+
    }
 
    public boolean isAllowedToLogin(String var1) {
@@ -429,22 +583,20 @@
    }
 
    public boolean areCommandsAllowed(String var1) {
-      return this.ops.contains(var1.trim().toLowerCase()) || this.mcServer.isSinglePlayer() && this.mcServer.worldServers[0].getWorldInfo().areCommandsAllowed() && this.mcServer.getServerOwner().equalsIgnoreCase(var1) || this.commandsAllowedForAll;
+      return this.ops.contains(var1.trim().toLowerCase()) || this.mcServer.isSinglePlayer() && ((WorldServer)this.mcServer.worlds.get(0)).getWorldInfo().areCommandsAllowed() && this.mcServer.getServerOwner().equalsIgnoreCase(var1) || this.commandsAllowedForAll;
    }
 
    public EntityPlayerMP getPlayerEntity(String var1) {
       Iterator var2 = this.playerEntityList.iterator();
 
-      EntityPlayerMP var3;
-      do {
-         if(!var2.hasNext()) {
-            return null;
+      while(var2.hasNext()) {
+         EntityPlayerMP var3 = (EntityPlayerMP)var2.next();
+         if(var3.username.equalsIgnoreCase(var1)) {
+            return var3;
          }
+      }
 
-         var3 = (EntityPlayerMP)var2.next();
-      } while(!var3.username.equalsIgnoreCase(var1));
-
-      return var3;
+      return null;
    }
 
    public List findPlayers(ChunkCoordinates var1, int var2, int var3, int var4, int var5, int var6, int var7) {
@@ -488,18 +640,26 @@
    }
 
    public void sendPacketToPlayersAroundPoint(double var1, double var3, double var5, double var7, int var9, Packet var10) {
-      this.sendToAllNearExcept((EntityPlayer)null, var1, var3, var5, var7, var9, var10);
+      this.sendPacketNearby(var1, var3, var5, var7, var9, var10, (Entity)null);
    }
 
    public void sendToAllNearExcept(EntityPlayer var1, double var2, double var4, double var6, double var8, int var10, Packet var11) {
-      for(int var12 = 0; var12 < this.playerEntityList.size(); ++var12) {
-         EntityPlayerMP var13 = (EntityPlayerMP)this.playerEntityList.get(var12);
-         if(var13 != var1 && var13.dimension == var10) {
-            double var14 = var2 - var13.posX;
-            double var16 = var4 - var13.posY;
-            double var18 = var6 - var13.posZ;
-            if(var14 * var14 + var16 * var16 + var18 * var18 < var8 * var8) {
-               var13.playerNetServerHandler.sendPacket(var11);
+      this.sendPacketNearby(var1, var2, var4, var6, var8, var10, var11, (Entity)null);
+   }
+
+   public void sendPacketNearby(double var1, double var3, double var5, double var7, int var9, Packet var10, Entity var11) {
+      this.sendPacketNearby((EntityPlayer)null, var1, var3, var5, var7, var9, var10, var11);
+   }
+
+   public void sendPacketNearby(EntityPlayer var1, double var2, double var4, double var6, double var8, int var10, Packet var11, Entity var12) {
+      for(int var13 = 0; var13 < this.playerEntityList.size(); ++var13) {
+         EntityPlayerMP var14 = (EntityPlayerMP)this.playerEntityList.get(var13);
+         if((var12 == null || !(var12 instanceof EntityPlayerMP) || var14.getBukkitEntity().canSee(((EntityPlayerMP)var12).getBukkitEntity())) && var14 != var1 && var14.dimension == var10) {
+            double var15 = var2 - var14.posX;
+            double var17 = var4 - var14.posY;
+            double var19 = var6 - var14.posZ;
+            if(var15 * var15 + var17 * var17 + var19 * var19 < var8 * var8) {
+               var14.playerNetServerHandler.sendPacket(var11);
             }
          }
       }
@@ -553,7 +713,7 @@
    }
 
    public String[] getAvailablePlayerDat() {
-      return this.mcServer.worldServers[0].getSaveHandler().getPlayerNBTManager().getAvailablePlayerDat();
+      return ((WorldServer)this.mcServer.worlds.get(0)).getSaveHandler().getPlayerNBTManager().getAvailablePlayerDat();
    }
 
    public boolean isWhiteListEnabled() {
Binary files mcp-mcdev/net/minecraft/src/ServerListenThread.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerListenThread.class differ
diff -ur mcp-mcdev/net/minecraft/src/ServerListenThread.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerListenThread.java
--- mcp-mcdev/net/minecraft/src/ServerListenThread.java	2012-11-29 21:14:32.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ServerListenThread.java	2012-11-29 21:41:05.000000000 -0800
@@ -23,9 +23,10 @@
    private NetworkListenThread myNetworkListenThread;
    private final InetAddress myServerAddress;
    private final int myPort;
+   long connectionThrottle;
 
 
-   public ServerListenThread(NetworkListenThread var1, InetAddress var2, int var3) {
+   public ServerListenThread(NetworkListenThread var1, InetAddress var2, int var3) throws IOException {
       super("Listen thread");
       this.myNetworkListenThread = var1;
       this.myPort = var3;
@@ -36,22 +37,23 @@
 
    public void processPendingConnections() {
       List var1 = this.pendingConnections;
+      List var2 = this.pendingConnections;
       synchronized(this.pendingConnections) {
-         for(int var2 = 0; var2 < this.pendingConnections.size(); ++var2) {
-            NetLoginHandler var3 = (NetLoginHandler)this.pendingConnections.get(var2);
+         for(int var3 = 0; var3 < this.pendingConnections.size(); ++var3) {
+            NetLoginHandler var4 = (NetLoginHandler)this.pendingConnections.get(var3);
 
             try {
-               var3.tryLogin();
-            } catch (Exception var6) {
-               var3.kickUser("Internal server error");
-               logger.log(Level.WARNING, "Failed to handle packet for " + var3.getUsernameAndAddress() + ": " + var6, var6);
+               var4.tryLogin();
+            } catch (Exception var7) {
+               var4.kickUser("Internal server error");
+               logger.log(Level.WARNING, "Failed to handle packet for " + var4.getUsernameAndAddress() + ": " + var7, var7);
             }
 
-            if(var3.finishedProcessing) {
-               this.pendingConnections.remove(var2--);
+            if(var4.finishedProcessing) {
+               this.pendingConnections.remove(var3--);
             }
 
-            var3.myTCPConnection.wakeThreads();
+            var4.myTCPConnection.wakeThreads();
          }
 
       }
@@ -64,20 +66,26 @@
             InetAddress var2 = var1.getInetAddress();
             long var3 = System.currentTimeMillis();
             HashMap var5 = this.recentConnections;
-            synchronized(this.recentConnections) {
-               if(this.recentConnections.containsKey(var2) && !isLocalHost(var2) && var3 - ((Long)this.recentConnections.get(var2)).longValue() < 4000L) {
+            if(this.myNetworkListenThread.getServer().server == null) {
+               var1.close();
+            } else {
+               this.connectionThrottle = this.myNetworkListenThread.getServer().server.getConnectionThrottle();
+               HashMap var6 = this.recentConnections;
+               synchronized(this.recentConnections) {
+                  if(this.recentConnections.containsKey(var2) && !isLocalHost(var2) && var3 - ((Long)this.recentConnections.get(var2)).longValue() < this.connectionThrottle) {
+                     this.recentConnections.put(var2, Long.valueOf(var3));
+                     var1.close();
+                     continue;
+                  }
+
                   this.recentConnections.put(var2, Long.valueOf(var3));
-                  var1.close();
-                  continue;
                }
 
-               this.recentConnections.put(var2, Long.valueOf(var3));
+               NetLoginHandler var10 = new NetLoginHandler(this.myNetworkListenThread.getServer(), var1, "Connection #" + this.connectionCounter++);
+               this.addPendingConnection(var10);
             }
-
-            NetLoginHandler var9 = new NetLoginHandler(this.myNetworkListenThread.getServer(), var1, "Connection #" + this.connectionCounter++);
-            this.addPendingConnection(var9);
-         } catch (IOException var8) {
-            var8.printStackTrace();
+         } catch (IOException var9) {
+            logger.warning("DSCT: " + var9.getMessage());
          }
       }
 
@@ -89,6 +97,7 @@
          throw new IllegalArgumentException("Got null pendingconnection!");
       } else {
          List var2 = this.pendingConnections;
+         List var3 = this.pendingConnections;
          synchronized(this.pendingConnections) {
             this.pendingConnections.add(var1);
          }
@@ -102,6 +111,7 @@
    public void func_71769_a(InetAddress var1) {
       if(var1 != null) {
          HashMap var2 = this.recentConnections;
+         HashMap var3 = this.recentConnections;
          synchronized(this.recentConnections) {
             this.recentConnections.remove(var1);
          }
Binary files mcp-mcdev/net/minecraft/src/ShapedRecipes.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ShapedRecipes.class differ
diff -ur mcp-mcdev/net/minecraft/src/ShapedRecipes.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ShapedRecipes.java
--- mcp-mcdev/net/minecraft/src/ShapedRecipes.java	2012-11-29 21:14:32.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ShapedRecipes.java	2012-11-29 21:41:05.000000000 -0800
@@ -4,6 +4,9 @@
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftShapedRecipe;
+import org.bukkit.inventory.ShapedRecipe;
 
 public class ShapedRecipes implements IRecipe {
 
@@ -22,6 +25,67 @@
       this.recipeOutput = var4;
    }
 
+   public ShapedRecipe toBukkitRecipe() {
+      CraftShapedRecipe var2;
+      CraftItemStack var1 = new CraftItemStack(this.recipeOutput);
+      var2 = new CraftShapedRecipe(var1, this);
+      label40:
+      switch(this.recipeHeight) {
+      case 1:
+         switch(this.recipeWidth) {
+         case 1:
+            var2.shape(new String[]{"a"});
+            break label40;
+         case 2:
+            var2.shape(new String[]{"ab"});
+            break label40;
+         case 3:
+            var2.shape(new String[]{"abc"});
+         default:
+            break label40;
+         }
+      case 2:
+         switch(this.recipeWidth) {
+         case 1:
+            var2.shape(new String[]{"a", "b"});
+            break label40;
+         case 2:
+            var2.shape(new String[]{"ab", "cd"});
+            break label40;
+         case 3:
+            var2.shape(new String[]{"abc", "def"});
+         default:
+            break label40;
+         }
+      case 3:
+         switch(this.recipeWidth) {
+         case 1:
+            var2.shape(new String[]{"a", "b", "c"});
+            break;
+         case 2:
+            var2.shape(new String[]{"ab", "cd", "ef"});
+            break;
+         case 3:
+            var2.shape(new String[]{"abc", "def", "ghi"});
+         }
+      }
+
+      char var3 = 97;
+      ItemStack[] var4 = this.recipeItems;
+      int var5 = var4.length;
+
+      for(int var6 = 0; var6 < var5; ++var6) {
+         ItemStack var7 = var4[var6];
+         if(var7 != null) {
+            var2.setIngredient(var3, org.bukkit.Material.getMaterial(var7.itemID), var7.getItemDamage());
+         }
+
+         ++var3;
+      }
+
+      return var2;
+   }
+
    public ItemStack getRecipeOutput() {
       return this.recipeOutput;
    }
Binary files mcp-mcdev/net/minecraft/src/ShapelessRecipes.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ShapelessRecipes.class differ
diff -ur mcp-mcdev/net/minecraft/src/ShapelessRecipes.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ShapelessRecipes.java
--- mcp-mcdev/net/minecraft/src/ShapelessRecipes.java	2012-11-29 21:14:31.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ShapelessRecipes.java	2012-11-29 21:41:05.000000000 -0800
@@ -7,6 +7,9 @@
 import net.minecraft.src.InventoryCrafting;
 import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftShapelessRecipe;
+import org.bukkit.inventory.ShapelessRecipe;
 
 public class ShapelessRecipes implements IRecipe {
 
@@ -19,6 +22,21 @@
       this.recipeItems = var2;
    }
 
+   public ShapelessRecipe toBukkitRecipe() {
+      CraftItemStack var1 = new CraftItemStack(this.recipeOutput);
+      CraftShapelessRecipe var2 = new CraftShapelessRecipe(var1, this);
+      Iterator var3 = this.recipeItems.iterator();
+
+      while(var3.hasNext()) {
+         ItemStack var4 = (ItemStack)var3.next();
+         if(var4 != null) {
+            var2.addIngredient(org.bukkit.Material.getMaterial(var4.itemID), var4.getItemDamage());
+         }
+      }
+
+      return var2;
+   }
+
    public ItemStack getRecipeOutput() {
       return this.recipeOutput;
    }
Binary files mcp-mcdev/net/minecraft/src/Slot.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Slot.class differ
diff -ur mcp-mcdev/net/minecraft/src/Slot.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Slot.java
--- mcp-mcdev/net/minecraft/src/Slot.java	2012-11-29 21:14:31.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Slot.java	2012-11-29 21:41:05.000000000 -0800
@@ -6,7 +6,7 @@
 
 public class Slot {
 
-   private final int slotIndex;
+   public final int slotIndex;
    public final IInventory inventory;
    public int slotNumber;
    public int xDisplayPosition;
@@ -21,15 +21,13 @@
    }
 
    public void onSlotChange(ItemStack var1, ItemStack var2) {
-      if(var1 != null && var2 != null) {
-         if(var1.itemID == var2.itemID) {
-            int var3 = var2.stackSize - var1.stackSize;
-            if(var3 > 0) {
-               this.onCrafting(var1, var3);
-            }
-
+      if(var1 != null && var2 != null && var1.itemID == var2.itemID) {
+         int var3 = var2.stackSize - var1.stackSize;
+         if(var3 > 0) {
+            this.onCrafting(var1, var3);
          }
       }
+
    }
 
    protected void onCrafting(ItemStack var1, int var2) {}
Binary files mcp-mcdev/net/minecraft/src/SlotEnchantmentTable.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SlotEnchantmentTable.class differ
diff -ur mcp-mcdev/net/minecraft/src/SlotEnchantmentTable.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SlotEnchantmentTable.java
--- mcp-mcdev/net/minecraft/src/SlotEnchantmentTable.java	2012-11-29 21:14:31.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SlotEnchantmentTable.java	2012-11-29 21:41:05.000000000 -0800
@@ -1,21 +1,54 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.ContainerEnchantment;
 import net.minecraft.src.InventoryBasic;
+import net.minecraft.src.ItemStack;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.inventory.InventoryHolder;
 
-class SlotEnchantmentTable extends InventoryBasic {
+public class SlotEnchantmentTable extends InventoryBasic {
 
-   // $FF: synthetic field
-   final ContainerEnchantment container;
+   private final ContainerEnchantment container;
+   public List transaction = new ArrayList();
+   public Player player;
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.inventoryContents;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public InventoryHolder getOwner() {
+      return this.player;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    SlotEnchantmentTable(ContainerEnchantment var1, String var2, int var3) {
       super(var2, var3);
       this.container = var1;
+      this.setMaxStackSize(1);
    }
 
    public int getInventoryStackLimit() {
-      return 1;
+      return this.maxStack;
    }
 
    public void onInventoryChanged() {
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: SpawnerAnimals$1.class
Binary files mcp-mcdev/net/minecraft/src/SpawnerAnimals.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/SpawnerAnimals.class differ
Only in mcp-mcdev/net/minecraft/src: SpawnerAnimals.java
Binary files mcp-mcdev/net/minecraft/src/TcpConnection.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TcpConnection.class differ
diff -ur mcp-mcdev/net/minecraft/src/TcpConnection.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TcpConnection.java
--- mcp-mcdev/net/minecraft/src/TcpConnection.java	2012-11-29 21:14:26.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TcpConnection.java	2012-11-29 21:41:01.000000000 -0800
@@ -3,6 +3,7 @@
 import java.io.BufferedOutputStream;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
+import java.io.IOException;
 import java.io.InputStream;
 import java.net.Socket;
 import java.net.SocketAddress;
@@ -12,11 +13,15 @@
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Queue;
+import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.atomic.AtomicInteger;
 import javax.crypto.SecretKey;
 import net.minecraft.src.CryptManager;
 import net.minecraft.src.INetworkManager;
 import net.minecraft.src.NetHandler;
+import net.minecraft.src.NetLoginHandler;
+import net.minecraft.src.NetServerHandler;
 import net.minecraft.src.Packet;
 import net.minecraft.src.Packet252SharedKey;
 import net.minecraft.src.TcpMasterThread;
@@ -29,13 +34,13 @@
    public static AtomicInteger field_74471_a = new AtomicInteger();
    public static AtomicInteger field_74469_b = new AtomicInteger();
    private Object sendQueueLock = new Object();
-   private Socket networkSocket;
+   public Socket networkSocket;
    private final SocketAddress remoteSocketAddress;
    private volatile DataInputStream socketInputStream;
    private volatile DataOutputStream socketOutputStream;
    private volatile boolean isRunning = true;
    private volatile boolean isTerminating = false;
-   private List readPackets = Collections.synchronizedList(new ArrayList());
+   private Queue readPackets = new ConcurrentLinkedQueue();
    private List dataPackets = Collections.synchronizedList(new ArrayList());
    private List chunkDataPackets = Collections.synchronizedList(new ArrayList());
    private NetHandler theNetHandler;
@@ -56,7 +61,7 @@
    private int field_74464_B = 50;
 
 
-   public TcpConnection(Socket var1, String var2, NetHandler var3, PrivateKey var4) {
+   public TcpConnection(Socket var1, String var2, NetHandler var3, PrivateKey var4) throws IOException {
       this.field_74463_A = var4;
       this.networkSocket = var1;
       this.remoteSocketAddress = var1.getRemoteSocketAddress();
@@ -84,11 +89,13 @@
    public void addToSendQueue(Packet var1) {
       if(!this.isServerTerminating) {
          Object var2 = this.sendQueueLock;
+         Object var3 = this.sendQueueLock;
          synchronized(this.sendQueueLock) {
             this.sendQueueByteLength += var1.getPacketSize() + 1;
             this.dataPackets.add(var1);
          }
       }
+
    }
 
    private boolean sendPacket() {
@@ -96,8 +103,8 @@
 
       try {
          Packet var2;
-         int var10001;
-         int[] var10000;
+         int[] var3;
+         int var4;
          if(this.field_74468_e == 0 || !this.dataPackets.isEmpty() && System.currentTimeMillis() - ((Packet)this.dataPackets.get(0)).creationTimeMillis >= (long)this.field_74468_e) {
             var2 = this.func_74460_a(false);
             if(var2 != null) {
@@ -110,29 +117,29 @@
                   this.encryptOuputStream();
                }
 
-               var10000 = field_74467_d;
-               var10001 = var2.getPacketId();
-               var10000[var10001] += var2.getPacketSize() + 1;
+               var3 = field_74467_d;
+               var4 = var2.getPacketId();
+               var3[var4] += var2.getPacketSize() + 1;
                var1 = true;
             }
          }
 
-         if(this.field_74464_B-- <= 0 && (this.field_74468_e == 0 || !this.chunkDataPackets.isEmpty() && System.currentTimeMillis() - ((Packet)this.chunkDataPackets.get(0)).creationTimeMillis >= (long)this.field_74468_e)) {
+         if((var1 || this.field_74464_B-- <= 0) && !this.chunkDataPackets.isEmpty() && (this.dataPackets.isEmpty() || ((Packet)this.dataPackets.get(0)).creationTimeMillis > ((Packet)this.chunkDataPackets.get(0)).creationTimeMillis)) {
             var2 = this.func_74460_a(true);
             if(var2 != null) {
                Packet.writePacket(var2, this.socketOutputStream);
-               var10000 = field_74467_d;
-               var10001 = var2.getPacketId();
-               var10000[var10001] += var2.getPacketSize() + 1;
+               var3 = field_74467_d;
+               var4 = var2.getPacketId();
+               var3[var4] += var2.getPacketSize() + 1;
                this.field_74464_B = 0;
                var1 = true;
             }
          }
 
          return var1;
-      } catch (Exception var3) {
+      } catch (Exception var5) {
          if(!this.isTerminating) {
-            this.onNetworkError(var3);
+            this.onNetworkError(var5);
          }
 
          return false;
@@ -143,6 +150,7 @@
       Packet var2 = null;
       List var3 = var1?this.chunkDataPackets:this.dataPackets;
       Object var4 = this.sendQueueLock;
+      Object var5 = this.sendQueueLock;
       synchronized(this.sendQueueLock) {
          while(!var3.isEmpty() && var2 == null) {
             var2 = (Packet)var3.remove(0);
@@ -163,16 +171,14 @@
          List var3 = var2?this.chunkDataPackets:this.dataPackets;
          Iterator var4 = var3.iterator();
 
-         Packet var5;
-         do {
-            if(!var4.hasNext()) {
-               return false;
+         while(var4.hasNext()) {
+            Packet var5 = (Packet)var4.next();
+            if(var5.getPacketId() == var1.getPacketId()) {
+               return var1.containsSameEntityIDAs(var5);
             }
+         }
 
-            var5 = (Packet)var4.next();
-         } while(var5.getPacketId() != var1.getPacketId());
-
-         return var1.containsSameEntityIDAs(var5);
+         return false;
       }
    }
 
@@ -201,9 +207,9 @@
                this.decryptInputStream();
             }
 
-            int[] var10000 = field_74470_c;
-            int var10001 = var2.getPacketId();
-            var10000[var10001] += var2.getPacketSize() + 1;
+            int[] var3 = field_74470_c;
+            int var4 = var2.getPacketId();
+            var3[var4] += var2.getPacketSize() + 1;
             if(!this.isServerTerminating) {
                if(var2.isWritePacket() && this.theNetHandler.canProcessPackets()) {
                   this.field_74490_x = 0;
@@ -219,9 +225,9 @@
          }
 
          return var1;
-      } catch (Exception var3) {
+      } catch (Exception var5) {
          if(!this.isTerminating) {
-            this.onNetworkError(var3);
+            this.onNetworkError(var5);
          }
 
          return false;
@@ -229,7 +235,6 @@
    }
 
    private void onNetworkError(Exception var1) {
-      var1.printStackTrace();
       this.networkShutdown("disconnect.genericReason", new Object[]{"Internal exception: " + var1.toString()});
    }
 
@@ -263,6 +268,7 @@
          this.socketOutputStream = null;
          this.networkSocket = null;
       }
+
    }
 
    public void processReadPackets() {
@@ -281,7 +287,15 @@
       int var1 = 1000;
 
       while(!this.readPackets.isEmpty() && var1-- >= 0) {
-         Packet var2 = (Packet)this.readPackets.remove(0);
+         Packet var2 = (Packet)this.readPackets.poll();
+         if(this.theNetHandler instanceof NetLoginHandler) {
+            if(((NetLoginHandler)this.theNetHandler).finishedProcessing) {
+               continue;
+            }
+         } else if(((NetServerHandler)this.theNetHandler).connectionClosed) {
+            continue;
+         }
+
          var2.processPacket(this.theNetHandler);
       }
 
@@ -303,15 +317,16 @@
          this.readThread.interrupt();
          (new TcpMonitorThread(this)).start();
       }
+
    }
 
-   private void decryptInputStream() {
+   private void decryptInputStream() throws IOException {
       this.isInputBeingDecrypted = true;
       InputStream var1 = this.networkSocket.getInputStream();
       this.socketInputStream = new DataInputStream(CryptManager.decryptInputStream(this.sharedKeyForEncryption, var1));
    }
 
-   private void encryptOuputStream() {
+   private void encryptOuputStream() throws IOException {
       this.socketOutputStream.flush();
       this.isOutputEncrypted = true;
       BufferedOutputStream var1 = new BufferedOutputStream(CryptManager.encryptOuputStream(this.sharedKeyForEncryption, this.networkSocket.getOutputStream()), 5120);
@@ -326,47 +341,38 @@
       return this.networkSocket;
    }
 
-   // $FF: synthetic method
    static boolean isRunning(TcpConnection var0) {
       return var0.isRunning;
    }
 
-   // $FF: synthetic method
    static boolean isServerTerminating(TcpConnection var0) {
       return var0.isServerTerminating;
    }
 
-   // $FF: synthetic method
    static boolean readNetworkPacket(TcpConnection var0) {
       return var0.readPacket();
    }
 
-   // $FF: synthetic method
    static boolean sendNetworkPacket(TcpConnection var0) {
       return var0.sendPacket();
    }
 
-   // $FF: synthetic method
    static DataOutputStream getOutputStream(TcpConnection var0) {
       return var0.socketOutputStream;
    }
 
-   // $FF: synthetic method
    static boolean isTerminating(TcpConnection var0) {
       return var0.isTerminating;
    }
 
-   // $FF: synthetic method
    static void sendError(TcpConnection var0, Exception var1) {
       var0.onNetworkError(var1);
    }
 
-   // $FF: synthetic method
    static Thread getReadThread(TcpConnection var0) {
       return var0.readThread;
    }
 
-   // $FF: synthetic method
    static Thread getWriteThread(TcpConnection var0) {
       return var0.writeThread;
    }
Binary files mcp-mcdev/net/minecraft/src/TcpWriterThread.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TcpWriterThread.class differ
diff -ur mcp-mcdev/net/minecraft/src/TcpWriterThread.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TcpWriterThread.java
--- mcp-mcdev/net/minecraft/src/TcpWriterThread.java	2012-11-29 21:14:26.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TcpWriterThread.java	2012-11-29 21:41:01.000000000 -0800
@@ -5,7 +5,6 @@
 
 class TcpWriterThread extends Thread {
 
-   // $FF: synthetic field
    final TcpConnection theTcpConnection;
 
 
@@ -32,8 +31,6 @@
                if(!TcpConnection.isTerminating(this.theTcpConnection)) {
                   TcpConnection.sendError(this.theTcpConnection, var8);
                }
-
-               var8.printStackTrace();
             }
 
             try {
Binary files mcp-mcdev/net/minecraft/src/Teleporter.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Teleporter.class differ
diff -ur mcp-mcdev/net/minecraft/src/Teleporter.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Teleporter.java
--- mcp-mcdev/net/minecraft/src/Teleporter.java	2012-11-29 21:14:26.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Teleporter.java	2012-11-29 21:41:01.000000000 -0800
@@ -54,6 +54,7 @@
          var1.setLocationAndAngles((double)var9, (double)var10, (double)var11, var1.rotationYaw, 0.0F);
          var1.motionX = var1.motionY = var1.motionZ = 0.0D;
       }
+
    }
 
    public boolean placeInExistingPortal(Entity var1, double var2, double var4, double var6, float var8) {
@@ -66,8 +67,10 @@
       int var16 = MathHelper.floor_double(var1.posZ);
       long var17 = ChunkCoordIntPair.chunkXZ2Int(var15, var16);
       boolean var19 = true;
-      double var27;
-      int var56;
+      int var21;
+      double var22;
+      int var27;
+      double var28;
       if(this.field_85191_c.containsItem(var17)) {
          PortalPosition var20 = (PortalPosition)this.field_85191_c.getValueByKey(var17);
          var10 = 0.0D;
@@ -77,25 +80,25 @@
          var20.field_85087_d = this.field_85192_a.getTotalWorldTime();
          var19 = false;
       } else {
-         for(var56 = var15 - var9; var56 <= var15 + var9; ++var56) {
-            double var21 = (double)var56 + 0.5D - var1.posX;
+         for(var21 = var15 - var9; var21 <= var15 + var9; ++var21) {
+            var22 = (double)var21 + 0.5D - var1.posX;
 
-            for(int var23 = var16 - var9; var23 <= var16 + var9; ++var23) {
-               double var24 = (double)var23 + 0.5D - var1.posZ;
+            for(int var24 = var16 - var9; var24 <= var16 + var9; ++var24) {
+               double var25 = (double)var24 + 0.5D - var1.posZ;
 
-               for(int var26 = this.field_85192_a.getActualHeight() - 1; var26 >= 0; --var26) {
-                  if(this.field_85192_a.getBlockId(var56, var26, var23) == Block.portal.blockID) {
-                     while(this.field_85192_a.getBlockId(var56, var26 - 1, var23) == Block.portal.blockID) {
-                        --var26;
+               for(var27 = this.field_85192_a.getActualHeight() - 1; var27 >= 0; --var27) {
+                  if(this.field_85192_a.getBlockId(var21, var27, var24) == Block.portal.blockID) {
+                     while(this.field_85192_a.getBlockId(var21, var27 - 1, var24) == Block.portal.blockID) {
+                        --var27;
                      }
 
-                     var27 = (double)var26 + 0.5D - var1.posY;
-                     double var29 = var21 * var21 + var27 * var27 + var24 * var24;
-                     if(var10 < 0.0D || var29 < var10) {
-                        var10 = var29;
-                        var12 = var56;
-                        var13 = var26;
-                        var14 = var23;
+                     var28 = (double)var27 + 0.5D - var1.posY;
+                     double var30 = var22 * var22 + var28 * var28 + var25 * var25;
+                     if(var10 < 0.0D || var30 < var10) {
+                        var10 = var30;
+                        var12 = var21;
+                        var13 = var27;
+                        var14 = var24;
                      }
                   }
                }
@@ -109,90 +112,90 @@
             this.field_85190_d.add(Long.valueOf(var17));
          }
 
-         double var33 = (double)var12 + 0.5D;
-         double var35 = (double)var13 + 0.5D;
-         var27 = (double)var14 + 0.5D;
-         int var37 = -1;
+         var22 = (double)var12 + 0.5D;
+         double var32 = (double)var13 + 0.5D;
+         var28 = (double)var14 + 0.5D;
+         int var34 = -1;
          if(this.field_85192_a.getBlockId(var12 - 1, var13, var14) == Block.portal.blockID) {
-            var37 = 2;
+            var34 = 2;
          }
 
          if(this.field_85192_a.getBlockId(var12 + 1, var13, var14) == Block.portal.blockID) {
-            var37 = 0;
+            var34 = 0;
          }
 
          if(this.field_85192_a.getBlockId(var12, var13, var14 - 1) == Block.portal.blockID) {
-            var37 = 3;
+            var34 = 3;
          }
 
          if(this.field_85192_a.getBlockId(var12, var13, var14 + 1) == Block.portal.blockID) {
-            var37 = 1;
+            var34 = 1;
          }
 
-         int var38 = var1.func_82148_at();
-         if(var37 > -1) {
-            int var39 = Direction.field_71578_g[var37];
-            int var40 = Direction.offsetX[var37];
-            int var41 = Direction.offsetZ[var37];
-            int var42 = Direction.offsetX[var39];
-            int var43 = Direction.offsetZ[var39];
-            boolean var44 = !this.field_85192_a.isAirBlock(var12 + var40 + var42, var13, var14 + var41 + var43) || !this.field_85192_a.isAirBlock(var12 + var40 + var42, var13 + 1, var14 + var41 + var43);
-            boolean var45 = !this.field_85192_a.isAirBlock(var12 + var40, var13, var14 + var41) || !this.field_85192_a.isAirBlock(var12 + var40, var13 + 1, var14 + var41);
-            if(var44 && var45) {
-               var37 = Direction.footInvisibleFaceRemap[var37];
-               var39 = Direction.footInvisibleFaceRemap[var39];
-               var40 = Direction.offsetX[var37];
-               var41 = Direction.offsetZ[var37];
-               var42 = Direction.offsetX[var39];
-               var43 = Direction.offsetZ[var39];
-               var56 = var12 - var42;
-               var33 -= (double)var42;
-               int var32 = var14 - var43;
-               var27 -= (double)var43;
-               var44 = !this.field_85192_a.isAirBlock(var56 + var40 + var42, var13, var32 + var41 + var43) || !this.field_85192_a.isAirBlock(var56 + var40 + var42, var13 + 1, var32 + var41 + var43);
-               var45 = !this.field_85192_a.isAirBlock(var56 + var40, var13, var32 + var41) || !this.field_85192_a.isAirBlock(var56 + var40, var13 + 1, var32 + var41);
+         var27 = var1.func_82148_at();
+         if(var34 > -1) {
+            int var35 = Direction.field_71578_g[var34];
+            int var36 = Direction.offsetX[var34];
+            int var37 = Direction.offsetZ[var34];
+            int var38 = Direction.offsetX[var35];
+            int var39 = Direction.offsetZ[var35];
+            boolean var40 = !this.field_85192_a.isAirBlock(var12 + var36 + var38, var13, var14 + var37 + var39) || !this.field_85192_a.isAirBlock(var12 + var36 + var38, var13 + 1, var14 + var37 + var39);
+            boolean var41 = !this.field_85192_a.isAirBlock(var12 + var36, var13, var14 + var37) || !this.field_85192_a.isAirBlock(var12 + var36, var13 + 1, var14 + var37);
+            if(var40 && var41) {
+               var34 = Direction.footInvisibleFaceRemap[var34];
+               var35 = Direction.footInvisibleFaceRemap[var35];
+               var36 = Direction.offsetX[var34];
+               var37 = Direction.offsetZ[var34];
+               var38 = Direction.offsetX[var35];
+               var39 = Direction.offsetZ[var35];
+               var21 = var12 - var38;
+               var22 -= (double)var38;
+               int var42 = var14 - var39;
+               var28 -= (double)var39;
+               var40 = !this.field_85192_a.isAirBlock(var21 + var36 + var38, var13, var42 + var37 + var39) || !this.field_85192_a.isAirBlock(var21 + var36 + var38, var13 + 1, var42 + var37 + var39);
+               var41 = !this.field_85192_a.isAirBlock(var21 + var36, var13, var42 + var37) || !this.field_85192_a.isAirBlock(var21 + var36, var13 + 1, var42 + var37);
             }
 
-            float var46 = 0.5F;
-            float var47 = 0.5F;
-            if(!var44 && var45) {
-               var46 = 1.0F;
-            } else if(var44 && !var45) {
-               var46 = 0.0F;
-            } else if(var44 && var45) {
-               var47 = 0.0F;
+            float var52 = 0.5F;
+            float var43 = 0.5F;
+            if(!var40 && var41) {
+               var52 = 1.0F;
+            } else if(var40 && !var41) {
+               var52 = 0.0F;
+            } else if(var40 && var41) {
+               var43 = 0.0F;
             }
 
-            var33 += (double)((float)var42 * var46 + var47 * (float)var40);
-            var27 += (double)((float)var43 * var46 + var47 * (float)var41);
-            float var48 = 0.0F;
-            float var49 = 0.0F;
-            float var50 = 0.0F;
-            float var51 = 0.0F;
-            if(var37 == var38) {
-               var48 = 1.0F;
-               var49 = 1.0F;
-            } else if(var37 == Direction.footInvisibleFaceRemap[var38]) {
-               var48 = -1.0F;
-               var49 = -1.0F;
-            } else if(var37 == Direction.enderEyeMetaToDirection[var38]) {
-               var50 = 1.0F;
-               var51 = -1.0F;
+            var22 += (double)((float)var38 * var52 + var43 * (float)var36);
+            var28 += (double)((float)var39 * var52 + var43 * (float)var37);
+            float var44 = 0.0F;
+            float var45 = 0.0F;
+            float var46 = 0.0F;
+            float var47 = 0.0F;
+            if(var34 == var27) {
+               var44 = 1.0F;
+               var45 = 1.0F;
+            } else if(var34 == Direction.footInvisibleFaceRemap[var27]) {
+               var44 = -1.0F;
+               var45 = -1.0F;
+            } else if(var34 == Direction.enderEyeMetaToDirection[var27]) {
+               var46 = 1.0F;
+               var47 = -1.0F;
             } else {
-               var50 = -1.0F;
-               var51 = 1.0F;
+               var46 = -1.0F;
+               var47 = 1.0F;
             }
 
-            double var52 = var1.motionX;
-            double var54 = var1.motionZ;
-            var1.motionX = var52 * (double)var48 + var54 * (double)var51;
-            var1.motionZ = var52 * (double)var50 + var54 * (double)var49;
-            var1.rotationYaw = var8 - (float)(var38 * 90) + (float)(var37 * 90);
+            double var48 = var1.motionX;
+            double var50 = var1.motionZ;
+            var1.motionX = var48 * (double)var44 + var50 * (double)var47;
+            var1.motionZ = var48 * (double)var46 + var50 * (double)var45;
+            var1.rotationYaw = var8 - (float)(var27 * 90) + (float)(var34 * 90);
          } else {
             var1.motionX = var1.motionY = var1.motionZ = 0.0D;
          }
 
-         var1.setLocationAndAngles(var33, var35, var27, var1.rotationYaw, var1.rotationPitch);
+         var1.setLocationAndAngles(var22, var32, var28, var1.rotationYaw, var1.rotationPitch);
          return true;
       } else {
          return false;
@@ -225,6 +228,7 @@
       int var27;
       int var26;
       double var29;
+      int var28;
       double var31;
       for(var13 = var5 - var2; var13 <= var5 + var2; ++var13) {
          var14 = (double)var13 + 0.5D - var1.posX;
@@ -232,7 +236,7 @@
          for(var16 = var7 - var2; var16 <= var7 + var2; ++var16) {
             var17 = (double)var16 + 0.5D - var1.posZ;
 
-            label274:
+            label272:
             for(var19 = this.field_85192_a.getActualHeight() - 1; var19 >= 0; --var19) {
                if(this.field_85192_a.isAirBlock(var13, var19, var16)) {
                   while(var19 > 0 && this.field_85192_a.isAirBlock(var13, var19 - 1, var16)) {
@@ -252,9 +256,9 @@
                            for(var25 = -1; var25 < 4; ++var25) {
                               var26 = var13 + (var24 - 1) * var21 + var23 * var22;
                               var27 = var19 + var25;
-                              int var28 = var16 + (var24 - 1) * var22 - var23 * var21;
+                              var28 = var16 + (var24 - 1) * var22 - var23 * var21;
                               if(var25 < 0 && !this.field_85192_a.getBlockMaterial(var26, var27, var28).isSolid() || var25 >= 0 && !this.field_85192_a.isAirBlock(var26, var27, var28)) {
-                                 continue label274;
+                                 continue label272;
                               }
                            }
                         }
@@ -282,7 +286,7 @@
             for(var16 = var7 - var2; var16 <= var7 + var2; ++var16) {
                var17 = (double)var16 + 0.5D - var1.posZ;
 
-               label222:
+               label220:
                for(var19 = this.field_85192_a.getActualHeight() - 1; var19 >= 0; --var19) {
                   if(this.field_85192_a.isAirBlock(var13, var19, var16)) {
                      while(var19 > 0 && this.field_85192_a.isAirBlock(var13, var19 - 1, var16)) {
@@ -299,7 +303,7 @@
                               var26 = var19 + var24;
                               var27 = var16 + (var23 - 1) * var22;
                               if(var24 < 0 && !this.field_85192_a.getBlockMaterial(var25, var26, var27).isSolid() || var24 >= 0 && !this.field_85192_a.isAirBlock(var25, var26, var27)) {
-                                 continue label222;
+                                 continue label220;
                               }
                            }
                         }
@@ -320,17 +324,17 @@
          }
       }
 
-      int var33 = var8;
-      int var34 = var9;
+      var28 = var8;
+      int var33 = var9;
       var16 = var10;
-      int var35 = var11 % 2;
-      int var36 = 1 - var35;
+      int var34 = var11 % 2;
+      int var35 = 1 - var34;
       if(var11 % 4 >= 2) {
+         var34 = -var34;
          var35 = -var35;
-         var36 = -var36;
       }
 
-      boolean var37;
+      boolean var36;
       if(var3 < 0.0D) {
          if(var9 < 70) {
             var9 = 70;
@@ -340,16 +344,16 @@
             var9 = this.field_85192_a.getActualHeight() - 10;
          }
 
-         var34 = var9;
+         var33 = var9;
 
          for(var19 = -1; var19 <= 1; ++var19) {
             for(var20 = 1; var20 < 3; ++var20) {
                for(var21 = -1; var21 < 3; ++var21) {
-                  var22 = var33 + (var20 - 1) * var35 + var19 * var36;
-                  var23 = var34 + var21;
-                  var24 = var16 + (var20 - 1) * var36 - var19 * var35;
-                  var37 = var21 < 0;
-                  this.field_85192_a.setBlockWithNotify(var22, var23, var24, var37?Block.obsidian.blockID:0);
+                  var22 = var28 + (var20 - 1) * var34 + var19 * var35;
+                  var23 = var33 + var21;
+                  var24 = var16 + (var20 - 1) * var35 - var19 * var34;
+                  var36 = var21 < 0;
+                  this.field_85192_a.setBlockWithNotify(var22, var23, var24, var36?Block.obsidian.blockID:0);
                }
             }
          }
@@ -360,11 +364,11 @@
 
          for(var20 = 0; var20 < 4; ++var20) {
             for(var21 = -1; var21 < 4; ++var21) {
-               var22 = var33 + (var20 - 1) * var35;
-               var23 = var34 + var21;
-               var24 = var16 + (var20 - 1) * var36;
-               var37 = var20 == 0 || var20 == 3 || var21 == -1 || var21 == 3;
-               this.field_85192_a.setBlockWithNotify(var22, var23, var24, var37?Block.obsidian.blockID:Block.portal.blockID);
+               var22 = var28 + (var20 - 1) * var34;
+               var23 = var33 + var21;
+               var24 = var16 + (var20 - 1) * var35;
+               var36 = var20 == 0 || var20 == 3 || var21 == -1 || var21 == 3;
+               this.field_85192_a.setBlockWithNotify(var22, var23, var24, var36?Block.obsidian.blockID:Block.portal.blockID);
             }
          }
 
@@ -372,9 +376,9 @@
 
          for(var20 = 0; var20 < 4; ++var20) {
             for(var21 = -1; var21 < 4; ++var21) {
-               var22 = var33 + (var20 - 1) * var35;
-               var23 = var34 + var21;
-               var24 = var16 + (var20 - 1) * var36;
+               var22 = var28 + (var20 - 1) * var34;
+               var23 = var33 + var21;
+               var24 = var16 + (var20 - 1) * var35;
                this.field_85192_a.notifyBlocksOfNeighborChange(var22, var23, var24, this.field_85192_a.getBlockId(var22, var23, var24));
             }
          }
Only in mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src: ThreadLoginVerifier$1.class
Binary files mcp-mcdev/net/minecraft/src/ThreadLoginVerifier.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/ThreadLoginVerifier.class differ
Only in mcp-mcdev/net/minecraft/src: ThreadLoginVerifier.java
Binary files mcp-mcdev/net/minecraft/src/TileEntity.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntity.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntity.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntity.java
--- mcp-mcdev/net/minecraft/src/TileEntity.java	2012-11-29 21:14:23.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntity.java	2012-11-29 21:40:59.000000000 -0800
@@ -23,12 +23,14 @@
 import net.minecraft.src.TileEntitySign;
 import net.minecraft.src.TileEntitySkull;
 import net.minecraft.src.World;
+import org.bukkit.block.BlockState;
+import org.bukkit.inventory.InventoryHolder;
 
 public class TileEntity {
 
    private static Map nameToClassMap = new HashMap();
    private static Map classToNameMap = new HashMap();
-   protected World worldObj;
+   public World worldObj;
    public int xCoord;
    public int yCoord;
    public int zCoord;
@@ -147,11 +149,15 @@
       CrashReportCategory.func_85068_a(var1, this.xCoord, this.yCoord, this.zCoord, this.blockType.blockID, this.blockMetadata);
    }
 
-   // $FF: synthetic method
    static Map func_85028_t() {
       return classToNameMap;
    }
 
+   public InventoryHolder getOwner() {
+      BlockState var1 = this.worldObj.getWorld().getBlockAt(this.xCoord, this.yCoord, this.zCoord).getState();
+      return var1 instanceof InventoryHolder?(InventoryHolder)var1:null;
+   }
+
    static {
       addMapping(TileEntityFurnace.class, "Furnace");
       addMapping(TileEntityChest.class, "Chest");
Binary files mcp-mcdev/net/minecraft/src/TileEntityBeacon.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityBeacon.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityBeacon.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityBeacon.java
--- mcp-mcdev/net/minecraft/src/TileEntityBeacon.java	2012-11-29 21:14:23.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityBeacon.java	2012-11-29 21:40:59.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.src.AxisAlignedBB;
@@ -13,6 +14,7 @@
 import net.minecraft.src.Potion;
 import net.minecraft.src.PotionEffect;
 import net.minecraft.src.TileEntity;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 
 public class TileEntityBeacon extends TileEntity implements IInventory {
 
@@ -22,8 +24,30 @@
    private int primaryEffect;
    private int secondaryEffect;
    private ItemStack payment;
+   public List transaction = new ArrayList();
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return null;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public void updateEntity() {
       if(this.worldObj.getTotalWorldTime() % 80L == 0L) {
          this.func_82131_u();
@@ -214,7 +238,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 1;
+      return this.maxStack;
    }
 
    public boolean isUseableByPlayer(EntityPlayer var1) {
Binary files mcp-mcdev/net/minecraft/src/TileEntityBrewingStand.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityBrewingStand.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityBrewingStand.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityBrewingStand.java
--- mcp-mcdev/net/minecraft/src/TileEntityBrewingStand.java	2012-11-29 21:14:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityBrewingStand.java	2012-11-29 21:40:58.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.List;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
@@ -10,15 +11,41 @@
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.PotionHelper;
 import net.minecraft.src.TileEntity;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.event.inventory.BrewEvent;
+import org.bukkit.inventory.BrewerInventory;
 
 public class TileEntityBrewingStand extends TileEntity implements IInventory {
 
-   private ItemStack[] brewingItemStacks = new ItemStack[4];
-   private int brewTime;
+   public ItemStack[] brewingItemStacks = new ItemStack[4];
+   public int brewTime;
    private int filledSlots;
    private int ingredientID;
+   public List transaction = new ArrayList();
+   private int maxStack = 1;
 
 
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public ItemStack[] getContents() {
+      return this.brewingItemStacks;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public String getInvName() {
       return "container.brewing";
    }
@@ -94,19 +121,26 @@
    private void brewPotions() {
       if(this.canBrew()) {
          ItemStack var1 = this.brewingItemStacks[3];
+         if(this.getOwner() != null) {
+            BrewEvent var2 = new BrewEvent(this.worldObj.getWorld().getBlockAt(this.xCoord, this.yCoord, this.zCoord), (BrewerInventory)this.getOwner().getInventory());
+            Bukkit.getPluginManager().callEvent(var2);
+            if(var2.isCancelled()) {
+               return;
+            }
+         }
 
-         for(int var2 = 0; var2 < 3; ++var2) {
-            if(this.brewingItemStacks[var2] != null && this.brewingItemStacks[var2].itemID == Item.potion.shiftedIndex) {
-               int var3 = this.brewingItemStacks[var2].getItemDamage();
+         for(int var7 = 0; var7 < 3; ++var7) {
+            if(this.brewingItemStacks[var7] != null && this.brewingItemStacks[var7].itemID == Item.potion.shiftedIndex) {
+               int var3 = this.brewingItemStacks[var7].getItemDamage();
                int var4 = this.getPotionResult(var3, var1);
                List var5 = Item.potion.getEffects(var3);
                List var6 = Item.potion.getEffects(var4);
                if((var3 <= 0 || var5 != var6) && (var5 == null || !var5.equals(var6) && var6 != null)) {
                   if(var3 != var4) {
-                     this.brewingItemStacks[var2].setItemDamage(var4);
+                     this.brewingItemStacks[var7].setItemDamage(var4);
                   }
                } else if(!ItemPotion.isSplash(var3) && ItemPotion.isSplash(var4)) {
-                  this.brewingItemStacks[var2].setItemDamage(var4);
+                  this.brewingItemStacks[var7].setItemDamage(var4);
                }
             }
          }
@@ -119,8 +153,8 @@
                this.brewingItemStacks[3] = null;
             }
          }
-
       }
+
    }
 
    private int getPotionResult(int var1, ItemStack var2) {
@@ -192,7 +226,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 1;
+      return this.maxStack;
    }
 
    public boolean isUseableByPlayer(EntityPlayer var1) {
Binary files mcp-mcdev/net/minecraft/src/TileEntityChest.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityChest.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityChest.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityChest.java
--- mcp-mcdev/net/minecraft/src/TileEntityChest.java	2012-11-29 21:14:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityChest.java	2012-11-29 21:40:58.000000000 -0800
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.src.AxisAlignedBB;
@@ -12,10 +13,11 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.TileEntity;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 
 public class TileEntityChest extends TileEntity implements IInventory {
 
-   private ItemStack[] chestContents = new ItemStack[36];
+   private ItemStack[] chestContents = new ItemStack[27];
    public boolean adjacentChestChecked = false;
    public TileEntityChest adjacentChestZNeg;
    public TileEntityChest adjacentChestXPos;
@@ -25,8 +27,30 @@
    public float prevLidAngle;
    public int numUsingPlayers;
    private int ticksSinceSync;
+   public List transaction = new ArrayList();
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.chestContents;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public int getSizeInventory() {
       return 27;
    }
@@ -112,11 +136,11 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public boolean isUseableByPlayer(EntityPlayer var1) {
-      return this.worldObj.getBlockTileEntity(this.xCoord, this.yCoord, this.zCoord) != this?false:var1.getDistanceSq((double)this.xCoord + 0.5D, (double)this.yCoord + 0.5D, (double)this.zCoord + 0.5D) <= 64.0D;
+      return this.worldObj == null?true:(this.worldObj.getBlockTileEntity(this.xCoord, this.yCoord, this.zCoord) != this?false:var1.getDistanceSq((double)this.xCoord + 0.5D, (double)this.yCoord + 0.5D, (double)this.zCoord + 0.5D) <= 64.0D);
    }
 
    public void updateContainingBlockInfo() {
@@ -181,91 +205,93 @@
          }
 
          if(this.adjacentChestZPosition != null) {
-            this.adjacentChestZPosition.func_90009_a(this, 2);
+            this.adjacentChestZPosition.func_90009_a(this, 1);
          }
 
          if(this.adjacentChestXPos != null) {
-            this.adjacentChestXPos.func_90009_a(this, 1);
+            this.adjacentChestXPos.func_90009_a(this, 2);
          }
 
          if(this.adjacentChestXNeg != null) {
             this.adjacentChestXNeg.func_90009_a(this, 3);
          }
-
       }
+
    }
 
    public void updateEntity() {
       super.updateEntity();
-      this.checkForAdjacentChests();
-      ++this.ticksSinceSync;
-      float var1;
-      if(!this.worldObj.isRemote && this.numUsingPlayers != 0 && (this.ticksSinceSync + this.xCoord + this.yCoord + this.zCoord) % 200 == 0) {
-         this.numUsingPlayers = 0;
-         var1 = 5.0F;
-         List var2 = this.worldObj.getEntitiesWithinAABB(EntityPlayer.class, AxisAlignedBB.getAABBPool().addOrModifyAABBInPool((double)((float)this.xCoord - var1), (double)((float)this.yCoord - var1), (double)((float)this.zCoord - var1), (double)((float)(this.xCoord + 1) + var1), (double)((float)(this.yCoord + 1) + var1), (double)((float)(this.zCoord + 1) + var1)));
-         Iterator var3 = var2.iterator();
-
-         while(var3.hasNext()) {
-            EntityPlayer var4 = (EntityPlayer)var3.next();
-            if(var4.openContainer instanceof ContainerChest) {
-               IInventory var5 = ((ContainerChest)var4.openContainer).func_85151_d();
-               if(var5 == this || var5 instanceof InventoryLargeChest && ((InventoryLargeChest)var5).func_90010_a(this)) {
-                  ++this.numUsingPlayers;
+      if(this.worldObj != null) {
+         this.checkForAdjacentChests();
+         ++this.ticksSinceSync;
+         float var1;
+         if(!this.worldObj.isRemote && this.numUsingPlayers != 0 && (this.ticksSinceSync + this.xCoord + this.yCoord + this.zCoord) % 200 == 0) {
+            this.numUsingPlayers = 0;
+            var1 = 5.0F;
+            List var2 = this.worldObj.getEntitiesWithinAABB(EntityPlayer.class, AxisAlignedBB.getAABBPool().addOrModifyAABBInPool((double)((float)this.xCoord - var1), (double)((float)this.yCoord - var1), (double)((float)this.zCoord - var1), (double)((float)(this.xCoord + 1) + var1), (double)((float)(this.yCoord + 1) + var1), (double)((float)(this.zCoord + 1) + var1)));
+            Iterator var3 = var2.iterator();
+
+            while(var3.hasNext()) {
+               EntityPlayer var4 = (EntityPlayer)var3.next();
+               if(var4.openContainer instanceof ContainerChest) {
+                  IInventory var5 = ((ContainerChest)var4.openContainer).func_85151_d();
+                  if(var5 == this || var5 instanceof InventoryLargeChest && ((InventoryLargeChest)var5).func_90010_a(this)) {
+                     ++this.numUsingPlayers;
+                  }
                }
             }
          }
-      }
-
-      this.prevLidAngle = this.lidAngle;
-      var1 = 0.1F;
-      double var8;
-      if(this.numUsingPlayers > 0 && this.lidAngle == 0.0F && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null) {
-         double var6 = (double)this.xCoord + 0.5D;
-         var8 = (double)this.zCoord + 0.5D;
-         if(this.adjacentChestZPosition != null) {
-            var8 += 0.5D;
-         }
 
-         if(this.adjacentChestXPos != null) {
-            var6 += 0.5D;
-         }
+         this.prevLidAngle = this.lidAngle;
+         var1 = 0.1F;
+         double var8;
+         if(this.numUsingPlayers > 0 && this.lidAngle == 0.0F && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null) {
+            double var6 = (double)this.xCoord + 0.5D;
+            var8 = (double)this.zCoord + 0.5D;
+            if(this.adjacentChestZPosition != null) {
+               var8 += 0.5D;
+            }
 
-         this.worldObj.playSoundEffect(var6, (double)this.yCoord + 0.5D, var8, "random.chestopen", 0.5F, this.worldObj.rand.nextFloat() * 0.1F + 0.9F);
-      }
+            if(this.adjacentChestXPos != null) {
+               var6 += 0.5D;
+            }
 
-      if(this.numUsingPlayers == 0 && this.lidAngle > 0.0F || this.numUsingPlayers > 0 && this.lidAngle < 1.0F) {
-         float var12 = this.lidAngle;
-         if(this.numUsingPlayers > 0) {
-            this.lidAngle += var1;
-         } else {
-            this.lidAngle -= var1;
+            this.worldObj.playSoundEffect(var6, (double)this.yCoord + 0.5D, var8, "random.chestopen", 0.5F, this.worldObj.rand.nextFloat() * 0.1F + 0.9F);
          }
 
-         if(this.lidAngle > 1.0F) {
-            this.lidAngle = 1.0F;
-         }
+         if(this.numUsingPlayers == 0 && this.lidAngle > 0.0F || this.numUsingPlayers > 0 && this.lidAngle < 1.0F) {
+            float var12 = this.lidAngle;
+            if(this.numUsingPlayers > 0) {
+               this.lidAngle += var1;
+            } else {
+               this.lidAngle -= var1;
+            }
 
-         float var13 = 0.5F;
-         if(this.lidAngle < var13 && var12 >= var13 && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null) {
-            var8 = (double)this.xCoord + 0.5D;
-            double var10 = (double)this.zCoord + 0.5D;
-            if(this.adjacentChestZPosition != null) {
-               var10 += 0.5D;
+            if(this.lidAngle > 1.0F) {
+               this.lidAngle = 1.0F;
             }
 
-            if(this.adjacentChestXPos != null) {
-               var8 += 0.5D;
+            float var13 = 0.5F;
+            if(this.lidAngle < var13 && var12 >= var13 && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null) {
+               var8 = (double)this.xCoord + 0.5D;
+               double var10 = (double)this.zCoord + 0.5D;
+               if(this.adjacentChestZPosition != null) {
+                  var10 += 0.5D;
+               }
+
+               if(this.adjacentChestXPos != null) {
+                  var8 += 0.5D;
+               }
+
+               this.worldObj.playSoundEffect(var8, (double)this.yCoord + 0.5D, var10, "random.chestclosed", 0.5F, this.worldObj.rand.nextFloat() * 0.1F + 0.9F);
             }
 
-            this.worldObj.playSoundEffect(var8, (double)this.yCoord + 0.5D, var10, "random.chestclosed", 0.5F, this.worldObj.rand.nextFloat() * 0.1F + 0.9F);
+            if(this.lidAngle < 0.0F) {
+               this.lidAngle = 0.0F;
+            }
          }
 
-         if(this.lidAngle < 0.0F) {
-            this.lidAngle = 0.0F;
-         }
       }
-
    }
 
    public void receiveClientEvent(int var1, int var2) {
@@ -277,12 +303,16 @@
 
    public void openChest() {
       ++this.numUsingPlayers;
-      this.worldObj.addBlockEvent(this.xCoord, this.yCoord, this.zCoord, Block.chest.blockID, 1, this.numUsingPlayers);
+      if(this.worldObj != null) {
+         this.worldObj.addBlockEvent(this.xCoord, this.yCoord, this.zCoord, Block.chest.blockID, 1, this.numUsingPlayers);
+      }
    }
 
    public void closeChest() {
       --this.numUsingPlayers;
-      this.worldObj.addBlockEvent(this.xCoord, this.yCoord, this.zCoord, Block.chest.blockID, 1, this.numUsingPlayers);
+      if(this.worldObj != null) {
+         this.worldObj.addBlockEvent(this.xCoord, this.yCoord, this.zCoord, Block.chest.blockID, 1, this.numUsingPlayers);
+      }
    }
 
    public void invalidate() {
Binary files mcp-mcdev/net/minecraft/src/TileEntityCommandBlock.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityCommandBlock.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityCommandBlock.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityCommandBlock.java
--- mcp-mcdev/net/minecraft/src/TileEntityCommandBlock.java	2012-11-29 21:14:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityCommandBlock.java	2012-11-29 21:40:57.000000000 -0800
@@ -1,18 +1,26 @@
 package net.minecraft.src;
 
+import com.google.common.base.Joiner;
+import java.util.ArrayList;
+import java.util.Arrays;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.ChunkCoordinates;
-import net.minecraft.src.ICommandManager;
+import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.ICommandSender;
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.Packet;
 import net.minecraft.src.Packet132TileEntityData;
+import net.minecraft.src.PlayerSelector;
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.World;
+import org.bukkit.command.BlockCommandSender;
+import org.bukkit.command.SimpleCommandMap;
+import org.bukkit.craftbukkit.command.CraftBlockCommandSender;
 
 public class TileEntityCommandBlock extends TileEntity implements ICommandSender {
 
    private String command = "";
+   private final BlockCommandSender sender = new CraftBlockCommandSender(this);
 
 
    public void setCommand(String var1) {
@@ -24,11 +32,64 @@
       if(!var1.isRemote) {
          MinecraftServer var2 = MinecraftServer.getServer();
          if(var2 != null && var2.isCommandBlockEnabled()) {
-            ICommandManager var3 = var2.getCommandManager();
-            var3.executeCommand(this, this.command);
+            SimpleCommandMap var3 = var2.server.getCommandMap();
+            Joiner var4 = Joiner.on(" ");
+            String var5 = this.command;
+            if(this.command.startsWith("/")) {
+               var5 = this.command.substring(1);
+            }
+
+            String[] var6 = var5.split(" ");
+            ArrayList var7 = new ArrayList();
+            if(var6[0].equalsIgnoreCase("stop") || var6[0].equalsIgnoreCase("kick") || var6[0].equalsIgnoreCase("op") || var6[0].equalsIgnoreCase("deop") || var6[0].equalsIgnoreCase("ban") || var6[0].equalsIgnoreCase("ban-ip") || var6[0].equalsIgnoreCase("pardon") || var6[0].equalsIgnoreCase("pardon-ip") || var6[0].equalsIgnoreCase("reload")) {
+               return;
+            }
+
+            if(var3.getCommand(var6[0]) == null) {
+               return;
+            }
+
+            var7.add(var6);
+            ArrayList var8 = new ArrayList();
+
+            int var9;
+            for(var9 = 0; var9 < var6.length; ++var9) {
+               if(PlayerSelector.func_82378_b(var6[var9])) {
+                  for(int var10 = 0; var10 < var7.size(); ++var10) {
+                     var8.addAll(this.buildCommands((String[])var7.get(var10), var9));
+                  }
+
+                  ArrayList var11 = var7;
+                  var7 = var8;
+                  var8 = var11;
+                  var11.clear();
+               }
+            }
+
+            for(var9 = 0; var9 < var7.size(); ++var9) {
+               var3.dispatch(this.sender, var4.join(Arrays.asList((Object[])var7.get(var9))));
+            }
          }
+      }
+
+   }
+
+   private ArrayList buildCommands(String[] var1, int var2) {
+      ArrayList var3 = new ArrayList();
+      EntityPlayerMP[] var4 = PlayerSelector.func_82380_c(this, var1[var2]);
+      if(var4 != null) {
+         EntityPlayerMP[] var5 = var4;
+         int var6 = var4.length;
 
+         for(int var7 = 0; var7 < var6; ++var7) {
+            EntityPlayerMP var8 = var5[var7];
+            String[] var9 = (String[])var1.clone();
+            var9[var2] = var8.getEntityName();
+            var3.add(var9);
+         }
       }
+
+      return var3;
    }
 
    public String getCommandSenderName() {
Binary files mcp-mcdev/net/minecraft/src/TileEntityDispenser.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityDispenser.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityDispenser.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityDispenser.java
--- mcp-mcdev/net/minecraft/src/TileEntityDispenser.java	2012-11-29 21:14:22.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityDispenser.java	2012-11-29 21:40:57.000000000 -0800
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.IInventory;
@@ -7,13 +9,36 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.TileEntity;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 
 public class TileEntityDispenser extends TileEntity implements IInventory {
 
    private ItemStack[] dispenserContents = new ItemStack[9];
    private Random dispenserRandom = new Random();
+   public List transaction = new ArrayList();
+   private int maxStack = 64;
 
 
+   public ItemStack[] getContents() {
+      return this.dispenserContents;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public int getSizeInventory() {
       return 9;
    }
@@ -59,7 +84,7 @@
       int var2 = 1;
 
       for(int var3 = 0; var3 < this.dispenserContents.length; ++var3) {
-         if(this.dispenserContents[var3] != null && this.dispenserRandom.nextInt(var2++) == 0) {
+         if(this.dispenserContents[var3] != null && this.dispenserRandom.nextInt(var2++) == 0 && this.dispenserContents[var3].stackSize != 0) {
             var1 = var3;
          }
       }
@@ -123,7 +148,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public boolean isUseableByPlayer(EntityPlayer var1) {
Binary files mcp-mcdev/net/minecraft/src/TileEntityFurnace.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityFurnace.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityFurnace.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityFurnace.java
--- mcp-mcdev/net/minecraft/src/TileEntityFurnace.java	2012-11-29 21:14:21.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityFurnace.java	2012-11-29 21:40:56.000000000 -0800
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import java.util.ArrayList;
+import java.util.List;
 import net.minecraft.src.Block;
 import net.minecraft.src.BlockFurnace;
 import net.minecraft.src.EntityPlayer;
@@ -14,6 +16,10 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.NBTTagList;
 import net.minecraft.src.TileEntity;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.inventory.FurnaceBurnEvent;
+import org.bukkit.event.inventory.FurnaceSmeltEvent;
 
 public class TileEntityFurnace extends TileEntity implements IInventory {
 
@@ -21,8 +27,31 @@
    public int furnaceBurnTime = 0;
    public int currentItemBurnTime = 0;
    public int furnaceCookTime = 0;
+   private int lastTick = (int)(System.currentTimeMillis() / 50L);
+   private int maxStack = 64;
+   public List transaction = new ArrayList();
 
 
+   public ItemStack[] getContents() {
+      return this.furnaceItemStacks;
+   }
+
+   public void onOpen(CraftHumanEntity var1) {
+      this.transaction.add(var1);
+   }
+
+   public void onClose(CraftHumanEntity var1) {
+      this.transaction.remove(var1);
+   }
+
+   public List getViewers() {
+      return this.transaction;
+   }
+
+   public void setMaxStackSize(int var1) {
+      this.maxStack = var1;
+   }
+
    public int getSizeInventory() {
       return this.furnaceItemStacks.length;
    }
@@ -110,7 +139,7 @@
    }
 
    public int getInventoryStackLimit() {
-      return 64;
+      return this.maxStack;
    }
 
    public boolean isBurning() {
@@ -120,36 +149,47 @@
    public void updateEntity() {
       boolean var1 = this.furnaceBurnTime > 0;
       boolean var2 = false;
+      int var3 = (int)(System.currentTimeMillis() / 50L);
+      int var4 = var3 - this.lastTick;
+      this.lastTick = var3;
+      if(this.isBurning() && this.canSmelt()) {
+         this.furnaceCookTime += var4;
+         if(this.furnaceCookTime >= 200) {
+            this.furnaceCookTime %= 200;
+            this.smeltItem();
+            var2 = true;
+         }
+      } else {
+         this.furnaceCookTime = 0;
+      }
+
       if(this.furnaceBurnTime > 0) {
-         --this.furnaceBurnTime;
+         this.furnaceBurnTime -= var4;
       }
 
       if(!this.worldObj.isRemote) {
-         if(this.furnaceBurnTime == 0 && this.canSmelt()) {
-            this.currentItemBurnTime = this.furnaceBurnTime = getItemBurnTime(this.furnaceItemStacks[1]);
-            if(this.furnaceBurnTime > 0) {
+         if(this.furnaceBurnTime <= 0 && this.canSmelt() && this.furnaceItemStacks[1] != null) {
+            CraftItemStack var5 = new CraftItemStack(this.furnaceItemStacks[1]);
+            FurnaceBurnEvent var6 = new FurnaceBurnEvent(this.worldObj.getWorld().getBlockAt(this.xCoord, this.yCoord, this.zCoord), var5, getItemBurnTime(this.furnaceItemStacks[1]));
+            this.worldObj.getServer().getPluginManager().callEvent(var6);
+            if(var6.isCancelled()) {
+               return;
+            }
+
+            this.currentItemBurnTime = var6.getBurnTime();
+            this.furnaceBurnTime += this.currentItemBurnTime;
+            if(this.furnaceBurnTime > 0 && var6.isBurning()) {
                var2 = true;
                if(this.furnaceItemStacks[1] != null) {
                   --this.furnaceItemStacks[1].stackSize;
                   if(this.furnaceItemStacks[1].stackSize == 0) {
-                     Item var3 = this.furnaceItemStacks[1].getItem().getContainerItem();
-                     this.furnaceItemStacks[1] = var3 != null?new ItemStack(var3):null;
+                     Item var7 = this.furnaceItemStacks[1].getItem().getContainerItem();
+                     this.furnaceItemStacks[1] = var7 != null?new ItemStack(var7):null;
                   }
                }
             }
          }
 
-         if(this.isBurning() && this.canSmelt()) {
-            ++this.furnaceCookTime;
-            if(this.furnaceCookTime == 200) {
-               this.furnaceCookTime = 0;
-               this.smeltItem();
-               var2 = true;
-            }
-         } else {
-            this.furnaceCookTime = 0;
-         }
-
          if(var1 != this.furnaceBurnTime > 0) {
             var2 = true;
             BlockFurnace.updateFurnaceBlockState(this.furnaceBurnTime > 0, this.worldObj, this.xCoord, this.yCoord, this.zCoord);
@@ -167,25 +207,34 @@
          return false;
       } else {
          ItemStack var1 = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0].getItem().shiftedIndex);
-         return var1 == null?false:(this.furnaceItemStacks[2] == null?true:(!this.furnaceItemStacks[2].isItemEqual(var1)?false:(this.furnaceItemStacks[2].stackSize < this.getInventoryStackLimit() && this.furnaceItemStacks[2].stackSize < this.furnaceItemStacks[2].getMaxStackSize()?true:this.furnaceItemStacks[2].stackSize < var1.getMaxStackSize())));
+         return var1 == null?false:(this.furnaceItemStacks[2] == null?true:(!this.furnaceItemStacks[2].isItemEqual(var1)?false:(this.furnaceItemStacks[2].stackSize + var1.stackSize <= this.getInventoryStackLimit() && this.furnaceItemStacks[2].stackSize < this.furnaceItemStacks[2].getMaxStackSize()?true:this.furnaceItemStacks[2].stackSize + var1.stackSize <= var1.getMaxStackSize())));
       }
    }
 
    public void smeltItem() {
       if(this.canSmelt()) {
          ItemStack var1 = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0].getItem().shiftedIndex);
+         CraftItemStack var2 = new CraftItemStack(this.furnaceItemStacks[0]);
+         CraftItemStack var3 = new CraftItemStack(var1.copy());
+         FurnaceSmeltEvent var4 = new FurnaceSmeltEvent(this.worldObj.getWorld().getBlockAt(this.xCoord, this.yCoord, this.zCoord), var2, var3);
+         this.worldObj.getServer().getPluginManager().callEvent(var4);
+         if(var4.isCancelled()) {
+            return;
+         }
+
+         var1 = CraftItemStack.createNMSItemStack(var4.getResult());
          if(this.furnaceItemStacks[2] == null) {
             this.furnaceItemStacks[2] = var1.copy();
-         } else if(this.furnaceItemStacks[2].itemID == var1.itemID) {
-            ++this.furnaceItemStacks[2].stackSize;
+         } else if(this.furnaceItemStacks[2].itemID == var1.itemID && this.furnaceItemStacks[2].getItemDamage() == var1.getItemDamage()) {
+            this.furnaceItemStacks[2].stackSize += var1.stackSize;
          }
 
          --this.furnaceItemStacks[0].stackSize;
          if(this.furnaceItemStacks[0].stackSize <= 0) {
             this.furnaceItemStacks[0] = null;
          }
-
       }
+
    }
 
    public static int getItemBurnTime(ItemStack var0) {
Binary files mcp-mcdev/net/minecraft/src/TileEntityMobSpawner.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityMobSpawner.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityMobSpawner.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityMobSpawner.java
--- mcp-mcdev/net/minecraft/src/TileEntityMobSpawner.java	2012-11-29 21:14:21.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityMobSpawner.java	2012-11-29 21:40:56.000000000 -0800
@@ -10,11 +10,12 @@
 import net.minecraft.src.Packet;
 import net.minecraft.src.Packet132TileEntityData;
 import net.minecraft.src.TileEntity;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class TileEntityMobSpawner extends TileEntity {
 
    public int delay = -1;
-   private String mobID = "Pig";
+   public String mobID = "Pig";
    private NBTTagCompound spawnerTags = null;
    public double yaw;
    public double yaw2 = 0.0D;
@@ -82,7 +83,7 @@
                   var8.setLocationAndAngles(var10, var12, var14, this.worldObj.rand.nextFloat() * 360.0F, 0.0F);
                   if(var16 == null || var16.getCanSpawnHere()) {
                      this.writeNBTTagsTo(var8);
-                     this.worldObj.spawnEntityInWorld(var8);
+                     this.worldObj.addEntity(var8, SpawnReason.SPAWNER);
                      this.worldObj.playAuxSFX(2004, this.xCoord, this.yCoord, this.zCoord, 0);
                      if(var16 != null) {
                         var16.spawnExplosionParticle();
@@ -96,6 +97,7 @@
 
          super.updateEntity();
       }
+
    }
 
    public void writeNBTTagsTo(Entity var1) {
Binary files mcp-mcdev/net/minecraft/src/TileEntityNote.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityNote.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityNote.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityNote.java
--- mcp-mcdev/net/minecraft/src/TileEntityNote.java	2012-11-29 21:14:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityNote.java	2012-11-29 21:40:56.000000000 -0800
@@ -5,6 +5,8 @@
 import net.minecraft.src.NBTTagCompound;
 import net.minecraft.src.TileEntity;
 import net.minecraft.src.World;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.NotePlayEvent;
 
 public class TileEntityNote extends TileEntity {
 
@@ -55,7 +57,11 @@
             var6 = 4;
          }
 
-         var1.addBlockEvent(var2, var3, var4, Block.music.blockID, var6, this.note);
+         NotePlayEvent var7 = CraftEventFactory.callNotePlayEvent(this.worldObj, var2, var3, var4, var6, this.note);
+         if(!var7.isCancelled()) {
+            this.worldObj.addBlockEvent(var2, var3, var4, Block.music.blockID, var7.getInstrument().getType(), var7.getNote().getId());
+         }
       }
+
    }
 }
Binary files mcp-mcdev/net/minecraft/src/TileEntityPiston.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityPiston.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntityPiston.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityPiston.java
--- mcp-mcdev/net/minecraft/src/TileEntityPiston.java	2012-11-29 21:14:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntityPiston.java	2012-11-29 21:40:55.000000000 -0800
@@ -94,23 +94,24 @@
    }
 
    public void updateEntity() {
-      this.lastProgress = this.progress;
-      if(this.lastProgress >= 1.0F) {
-         this.updatePushedObjects(1.0F, 0.25F);
-         this.worldObj.removeBlockTileEntity(this.xCoord, this.yCoord, this.zCoord);
-         this.invalidate();
-         if(this.worldObj.getBlockId(this.xCoord, this.yCoord, this.zCoord) == Block.pistonMoving.blockID) {
-            this.worldObj.setBlockAndMetadataWithNotify(this.xCoord, this.yCoord, this.zCoord, this.storedBlockID, this.storedMetadata);
-         }
-
-      } else {
-         this.progress += 0.5F;
-         if(this.progress >= 1.0F) {
-            this.progress = 1.0F;
-         }
+      if(this.worldObj != null) {
+         this.lastProgress = this.progress;
+         if(this.lastProgress >= 1.0F) {
+            this.updatePushedObjects(1.0F, 0.25F);
+            this.worldObj.removeBlockTileEntity(this.xCoord, this.yCoord, this.zCoord);
+            this.invalidate();
+            if(this.worldObj.getBlockId(this.xCoord, this.yCoord, this.zCoord) == Block.pistonMoving.blockID) {
+               this.worldObj.setBlockAndMetadataWithNotify(this.xCoord, this.yCoord, this.zCoord, this.storedBlockID, this.storedMetadata);
+            }
+         } else {
+            this.progress += 0.5F;
+            if(this.progress >= 1.0F) {
+               this.progress = 1.0F;
+            }
 
-         if(this.extending) {
-            this.updatePushedObjects(this.progress, this.progress - this.lastProgress + 0.0625F);
+            if(this.extending) {
+               this.updatePushedObjects(this.progress, this.progress - this.lastProgress + 0.0625F);
+            }
          }
 
       }
Binary files mcp-mcdev/net/minecraft/src/TileEntitySign.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntitySign.class differ
diff -ur mcp-mcdev/net/minecraft/src/TileEntitySign.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntitySign.java
--- mcp-mcdev/net/minecraft/src/TileEntitySign.java	2012-11-29 21:14:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/TileEntitySign.java	2012-11-29 21:40:55.000000000 -0800
@@ -9,7 +9,7 @@
 
    public String[] signText = new String[]{"", "", "", ""};
    public int lineBeingEdited = -1;
-   private boolean isEditable = true;
+   public boolean isEditable = true;
 
 
    public void writeToNBT(NBTTagCompound var1) {
@@ -35,7 +35,14 @@
 
    public Packet getDescriptionPacket() {
       String[] var1 = new String[4];
-      System.arraycopy(this.signText, 0, var1, 0, 4);
+
+      for(int var2 = 0; var2 < 4; ++var2) {
+         var1[var2] = this.signText[var2];
+         if(this.signText[var2].length() > 15) {
+            var1[var2] = this.signText[var2].substring(0, 15);
+         }
+      }
+
       return new Packet130UpdateSign(this.xCoord, this.yCoord, this.zCoord, var1);
    }
 
Binary files mcp-mcdev/net/minecraft/src/Vec3.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Vec3.class differ
diff -ur mcp-mcdev/net/minecraft/src/Vec3.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Vec3.java
--- mcp-mcdev/net/minecraft/src/Vec3.java	2012-11-29 21:14:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Vec3.java	2012-11-29 21:40:55.000000000 -0800
@@ -10,6 +10,7 @@
    public double xCoord;
    public double yCoord;
    public double zCoord;
+   public Vec3 next;
 
 
    public static Vec3 createVectorHelper(double var0, double var2, double var4) {
Binary files mcp-mcdev/net/minecraft/src/Vec3Pool.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Vec3Pool.class differ
diff -ur mcp-mcdev/net/minecraft/src/Vec3Pool.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Vec3Pool.java
--- mcp-mcdev/net/minecraft/src/Vec3Pool.java	2012-11-29 21:14:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Vec3Pool.java	2012-11-29 21:40:55.000000000 -0800
@@ -1,14 +1,16 @@
 package net.minecraft.src;
 
-import java.util.ArrayList;
-import java.util.List;
 import net.minecraft.src.Vec3;
 
 public class Vec3Pool {
 
    private final int truncateArrayResetThreshold;
    private final int minimumSize;
-   private final List vec3Cache = new ArrayList();
+   private Vec3 freelist = null;
+   private Vec3 alloclist = null;
+   private Vec3 freelisthead = null;
+   private Vec3 alloclisthead = null;
+   private int total_size = 0;
    private int nextFreeSpace = 0;
    private int maximumSizeSinceLastTruncation = 0;
    private int resetCount = 0;
@@ -19,47 +21,81 @@
       this.minimumSize = var2;
    }
 
-   public Vec3 getVecFromPool(double var1, double var3, double var5) {
-      if(this.func_82589_e()) {
-         return new Vec3(this, var1, var3, var5);
+   public final Vec3 getVecFromPool(double var1, double var3, double var5) {
+      if(this.resetCount == 0) {
+         return Vec3.createVectorHelper(var1, var3, var5);
       } else {
          Vec3 var7;
-         if(this.nextFreeSpace >= this.vec3Cache.size()) {
+         if(this.freelist == null) {
             var7 = new Vec3(this, var1, var3, var5);
-            this.vec3Cache.add(var7);
+            ++this.total_size;
          } else {
-            var7 = (Vec3)this.vec3Cache.get(this.nextFreeSpace);
+            var7 = this.freelist;
+            this.freelist = var7.next;
             var7.setComponents(var1, var3, var5);
          }
 
+         if(this.alloclist == null) {
+            this.alloclisthead = var7;
+         }
+
+         var7.next = this.alloclist;
+         this.alloclist = var7;
          ++this.nextFreeSpace;
          return var7;
       }
    }
 
+   public void release(Vec3 var1) {
+      if(this.alloclist == var1) {
+         this.alloclist = var1.next;
+         if(this.freelist == null) {
+            this.freelisthead = var1;
+         }
+
+         var1.next = this.freelist;
+         this.freelist = var1;
+         --this.nextFreeSpace;
+      }
+
+   }
+
    public void clear() {
-      if(!this.func_82589_e()) {
-         if(this.nextFreeSpace > this.maximumSizeSinceLastTruncation) {
-            this.maximumSizeSinceLastTruncation = this.nextFreeSpace;
+      if(this.nextFreeSpace > this.maximumSizeSinceLastTruncation) {
+         this.maximumSizeSinceLastTruncation = this.nextFreeSpace;
+      }
+
+      if(this.alloclist != null) {
+         if(this.freelist == null) {
+            this.freelist = this.alloclist;
+            this.freelisthead = this.alloclisthead;
+         } else {
+            this.alloclisthead.next = this.freelist;
+            this.freelist = this.alloclist;
+            this.freelisthead = this.alloclisthead;
          }
 
-         if(this.resetCount++ == this.truncateArrayResetThreshold) {
-            int var1 = Math.max(this.maximumSizeSinceLastTruncation, this.vec3Cache.size() - this.minimumSize);
+         this.alloclist = null;
+      }
 
-            while(this.vec3Cache.size() > var1) {
-               this.vec3Cache.remove(var1);
+      if((this.resetCount++ & 255) == 0) {
+         int var1 = this.total_size - (this.total_size >> 3);
+         if(var1 > this.maximumSizeSinceLastTruncation) {
+            for(int var2 = this.total_size; var2 > var1; --var2) {
+               this.freelist = this.freelist.next;
             }
 
-            this.maximumSizeSinceLastTruncation = 0;
-            this.resetCount = 0;
+            this.total_size = var1;
          }
 
-         this.nextFreeSpace = 0;
+         this.maximumSizeSinceLastTruncation = 0;
       }
+
+      this.nextFreeSpace = 0;
    }
 
    public int getPoolSize() {
-      return this.vec3Cache.size();
+      return this.total_size;
    }
 
    public int func_82590_d() {
Binary files mcp-mcdev/net/minecraft/src/Village.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Village.class differ
diff -ur mcp-mcdev/net/minecraft/src/Village.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Village.java
--- mcp-mcdev/net/minecraft/src/Village.java	2012-11-29 21:14:20.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/Village.java	2012-11-29 21:40:55.000000000 -0800
@@ -18,6 +18,7 @@
 import net.minecraft.src.VillageAgressor;
 import net.minecraft.src.VillageDoorInfo;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class Village {
 
@@ -63,7 +64,7 @@
          if(var3 != null) {
             EntityIronGolem var4 = new EntityIronGolem(this.worldObj);
             var4.setPosition(var3.xCoord, var3.yCoord, var3.zCoord);
-            this.worldObj.spawnEntityInWorld(var4);
+            this.worldObj.addEntity(var4, SpawnReason.VILLAGE_DEFENSE);
             ++this.numIronGolems;
          }
       }
@@ -221,17 +222,15 @@
    public void addOrRenewAgressor(EntityLiving var1) {
       Iterator var2 = this.villageAgressors.iterator();
 
-      VillageAgressor var3;
-      do {
-         if(!var2.hasNext()) {
-            this.villageAgressors.add(new VillageAgressor(this, var1, this.tickCounter));
+      while(var2.hasNext()) {
+         VillageAgressor var3 = (VillageAgressor)var2.next();
+         if(var3.agressor == var1) {
+            var3.agressionTime = this.tickCounter;
             return;
          }
+      }
 
-         var3 = (VillageAgressor)var2.next();
-      } while(var3.agressor != var1);
-
-      var3.agressionTime = this.tickCounter;
+      this.villageAgressors.add(new VillageAgressor(this, var1, this.tickCounter));
    }
 
    public EntityLiving findNearestVillageAggressor(EntityLiving var1) {
@@ -332,6 +331,7 @@
 
          this.villageRadius = Math.max(32, (int)Math.sqrt((double)var2) + 1);
       }
+
    }
 
    public int getReputationForPlayer(String var1) {
@@ -409,18 +409,18 @@
       }
 
       var1.setTag("Doors", var2);
-      NBTTagList var7 = new NBTTagList("Players");
-      Iterator var8 = this.playerReputation.keySet().iterator();
+      NBTTagList var8 = new NBTTagList("Players");
+      Iterator var9 = this.playerReputation.keySet().iterator();
 
-      while(var8.hasNext()) {
-         String var9 = (String)var8.next();
-         NBTTagCompound var6 = new NBTTagCompound(var9);
-         var6.setString("Name", var9);
-         var6.setInteger("S", ((Integer)this.playerReputation.get(var9)).intValue());
-         var7.appendTag(var6);
+      while(var9.hasNext()) {
+         String var6 = (String)var9.next();
+         NBTTagCompound var7 = new NBTTagCompound(var6);
+         var7.setString("Name", var6);
+         var7.setInteger("S", ((Integer)this.playerReputation.get(var6)).intValue());
+         var8.appendTag(var7);
       }
 
-      var1.setTag("Players", var7);
+      var1.setTag("Players", var8);
    }
 
    public void func_82692_h() {
Binary files mcp-mcdev/net/minecraft/src/VillageSiege.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/VillageSiege.class differ
diff -ur mcp-mcdev/net/minecraft/src/VillageSiege.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/VillageSiege.java
--- mcp-mcdev/net/minecraft/src/VillageSiege.java	2012-11-29 21:14:19.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/VillageSiege.java	2012-11-29 21:40:54.000000000 -0800
@@ -11,6 +11,7 @@
 import net.minecraft.src.Vec3;
 import net.minecraft.src.Village;
 import net.minecraft.src.World;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
 
 public class VillageSiege {
 
@@ -78,8 +79,8 @@
          } else {
             this.field_75536_c = 2;
          }
-
       }
+
    }
 
    private boolean func_75529_b() {
@@ -151,7 +152,7 @@
          }
 
          var2.setLocationAndAngles(var1.xCoord, var1.yCoord, var1.zCoord, this.worldObj.rand.nextFloat() * 360.0F, 0.0F);
-         this.worldObj.spawnEntityInWorld(var2);
+         this.worldObj.addEntity(var2, SpawnReason.VILLAGE_INVASION);
          ChunkCoordinates var3 = this.theVillage.getCenter();
          var2.setHomeArea(var3.posX, var3.posY, var3.posZ, this.theVillage.getVillageRadius());
          return true;
@@ -164,7 +165,7 @@
          int var6 = var2 + this.worldObj.rand.nextInt(6) - 3;
          int var7 = var3 + this.worldObj.rand.nextInt(16) - 8;
          if(this.theVillage.isInRange(var5, var6, var7) && SpawnerAnimals.canCreatureTypeSpawnAtLocation(EnumCreatureType.monster, this.worldObj, var5, var6, var7)) {
-            this.worldObj.getWorldVec3Pool().getVecFromPool((double)var5, (double)var6, (double)var7);
+            return this.worldObj.getWorldVec3Pool().getVecFromPool((double)var5, (double)var6, (double)var7);
          }
       }
 
Binary files mcp-mcdev/net/minecraft/src/World.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/World.class differ
diff -ur mcp-mcdev/net/minecraft/src/World.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/World.java
--- mcp-mcdev/net/minecraft/src/World.java	2012-11-29 21:14:18.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/World.java	2012-11-29 21:40:53.000000000 -0800
@@ -3,11 +3,9 @@
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collection;
-import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
-import java.util.Set;
 import net.minecraft.src.AxisAlignedBB;
 import net.minecraft.src.BiomeGenBase;
 import net.minecraft.src.Block;
@@ -19,14 +17,23 @@
 import net.minecraft.src.CallableLvl3;
 import net.minecraft.src.Chunk;
 import net.minecraft.src.ChunkCache;
-import net.minecraft.src.ChunkCoordIntPair;
 import net.minecraft.src.ChunkCoordinates;
 import net.minecraft.src.ChunkPosition;
+import net.minecraft.src.ChunkProviderServer;
 import net.minecraft.src.CrashReport;
 import net.minecraft.src.CrashReportCategory;
 import net.minecraft.src.Entity;
+import net.minecraft.src.EntityAnimal;
+import net.minecraft.src.EntityGhast;
+import net.minecraft.src.EntityGolem;
+import net.minecraft.src.EntityItem;
+import net.minecraft.src.EntityLiving;
 import net.minecraft.src.EntityMinecart;
+import net.minecraft.src.EntityMob;
 import net.minecraft.src.EntityPlayer;
+import net.minecraft.src.EntityPlayerMP;
+import net.minecraft.src.EntitySlime;
+import net.minecraft.src.EntityWaterMob;
 import net.minecraft.src.EnumSkyBlock;
 import net.minecraft.src.Explosion;
 import net.minecraft.src.GameRules;
@@ -39,6 +46,7 @@
 import net.minecraft.src.MapStorage;
 import net.minecraft.src.Material;
 import net.minecraft.src.MathHelper;
+import net.minecraft.src.MinecraftException;
 import net.minecraft.src.MovingObjectPosition;
 import net.minecraft.src.PathEntity;
 import net.minecraft.src.PathFinder;
@@ -53,7 +61,24 @@
 import net.minecraft.src.WorldInfo;
 import net.minecraft.src.WorldProvider;
 import net.minecraft.src.WorldSavedData;
+import net.minecraft.src.WorldServer;
 import net.minecraft.src.WorldSettings;
+import org.bukkit.Bukkit;
+import org.bukkit.World.Environment;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.util.LongHash;
+import org.bukkit.craftbukkit.util.LongHashSet;
+import org.bukkit.craftbukkit.util.UnsafeList;
+import org.bukkit.entity.Projectile;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.block.BlockCanBuildEvent;
+import org.bukkit.event.block.BlockPhysicsEvent;
+import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
+import org.bukkit.generator.ChunkGenerator;
 
 public abstract class World implements IBlockAccess {
 
@@ -78,11 +103,11 @@
    public boolean editingBlocks = false;
    public int difficultySetting;
    public Random rand = new Random();
-   public final WorldProvider provider;
+   public WorldProvider provider;
    protected List worldAccesses = new ArrayList();
-   protected IChunkProvider chunkProvider;
+   public IChunkProvider chunkProvider;
    protected final ISaveHandler saveHandler;
-   protected WorldInfo worldInfo;
+   public WorldInfo worldInfo;
    public boolean findingSpawnPoint;
    public MapStorage mapStorage;
    public final VillageCollection villageCollectionObj;
@@ -90,15 +115,25 @@
    public final Profiler theProfiler;
    private final Vec3Pool vecPool = new Vec3Pool(300, 2000);
    private final Calendar theCalendar = Calendar.getInstance();
-   private ArrayList collidingBoundingBoxes = new ArrayList();
+   private UnsafeList collidingBoundingBoxes = new UnsafeList();
    private boolean scanningTileEntities;
-   protected boolean spawnHostileMobs = true;
-   protected boolean spawnPeacefulMobs = true;
-   protected Set activeChunkSet = new HashSet();
+   public boolean spawnHostileMobs = true;
+   public boolean spawnPeacefulMobs = true;
+   protected LongHashSet activeChunkSet = new LongHashSet();
+   public long ticksPerAnimalSpawns;
+   public long ticksPerMonsterSpawns;
    private int ambientTickCountdown;
    int[] lightUpdateBlockList;
    private List entitiesWithinAABBExcludingEntity;
    public boolean isRemote;
+   private final CraftWorld world;
+   public boolean pvpMode;
+   public boolean keepSpawnInMemory = true;
+   public ChunkGenerator generator;
+   Chunk lastChunkAccessed;
+   int lastXAccessed = Integer.MIN_VALUE;
+   int lastZAccessed = Integer.MIN_VALUE;
+   final Object chunkLock = new Object();
 
 
    public BiomeGenBase getBiomeGenForCoords(int var1, int var2) {
@@ -116,10 +151,22 @@
       return this.provider.worldChunkMgr;
    }
 
-   public World(ISaveHandler var1, String var2, WorldSettings var3, WorldProvider var4, Profiler var5) {
+   public CraftWorld getWorld() {
+      return this.world;
+   }
+
+   public CraftServer getServer() {
+      return (CraftServer)Bukkit.getServer();
+   }
+
+   public World(ISaveHandler var1, String var2, WorldSettings var3, WorldProvider var4, Profiler var5, ChunkGenerator var6, Environment var7) {
+      this.generator = var6;
+      this.world = new CraftWorld((WorldServer)this, var6, var7);
+      this.ticksPerAnimalSpawns = (long)this.getServer().getTicksPerAnimalSpawns();
+      this.ticksPerMonsterSpawns = (long)this.getServer().getTicksPerMonsterSpawns();
       this.ambientTickCountdown = this.rand.nextInt(12000);
       this.lightUpdateBlockList = new int['\u8000'];
-      this.entitiesWithinAABBExcludingEntity = new ArrayList();
+      this.entitiesWithinAABBExcludingEntity = new UnsafeList();
       this.isRemote = false;
       this.saveHandler = var1;
       this.theProfiler = var5;
@@ -144,32 +191,33 @@
       if(!this.worldInfo.isInitialized()) {
          try {
             this.initialize(var3);
-         } catch (Throwable var10) {
-            CrashReport var7 = CrashReport.func_85055_a(var10, "Exception initializing level");
+         } catch (Throwable var12) {
+            CrashReport var9 = CrashReport.func_85055_a(var12, "Exception initializing level");
 
             try {
-               this.addWorldInfoToCrashReport(var7);
-            } catch (Throwable var9) {
+               this.addWorldInfoToCrashReport(var9);
+            } catch (Throwable var11) {
                ;
             }
 
-            throw new ReportedException(var7);
+            throw new ReportedException(var9);
          }
 
          this.worldInfo.setServerInitialized(true);
       }
 
-      VillageCollection var6 = (VillageCollection)this.mapStorage.loadData(VillageCollection.class, "villages");
-      if(var6 == null) {
+      VillageCollection var8 = (VillageCollection)this.mapStorage.loadData(VillageCollection.class, "villages");
+      if(var8 == null) {
          this.villageCollectionObj = new VillageCollection(this);
          this.mapStorage.setData("villages", this.villageCollectionObj);
       } else {
-         this.villageCollectionObj = var6;
+         this.villageCollectionObj = var8;
          this.villageCollectionObj.func_82566_a(this);
       }
 
       this.calculateInitialSkylight();
       this.calculateInitialWeather();
+      this.getServer().addWorld(this.world);
    }
 
    protected abstract IChunkProvider createChunkProvider();
@@ -247,7 +295,7 @@
 
          for(int var7 = var1; var7 <= var4; ++var7) {
             for(int var8 = var3; var8 <= var6; ++var8) {
-               if(!this.chunkExists(var7, var8)) {
+               if(!this.chunkExists(var7, var8) || ((WorldServer)this).theChunkProviderServer.droppedChunksSet.contains(var7, var8)) {
                   return false;
                }
             }
@@ -268,7 +316,18 @@
    }
 
    public Chunk getChunkFromChunkCoords(int var1, int var2) {
-      return this.chunkProvider.provideChunk(var1, var2);
+      Chunk var3 = null;
+      Object var4 = this.chunkLock;
+      synchronized(this.chunkLock) {
+         if(this.lastChunkAccessed == null || this.lastXAccessed != var1 || this.lastZAccessed != var2) {
+            this.lastChunkAccessed = this.chunkProvider.provideChunk(var1, var2);
+            this.lastXAccessed = var1;
+            this.lastZAccessed = var2;
+         }
+
+         var3 = this.lastChunkAccessed;
+         return var3;
+      }
    }
 
    public boolean setBlockAndMetadata(int var1, int var2, int var3, int var4, int var5) {
@@ -373,8 +432,9 @@
    }
 
    public boolean setBlockWithNotify(int var1, int var2, int var3, int var4) {
+      int var5 = this.getBlockId(var1, var2, var3);
       if(this.setBlock(var1, var2, var3, var4)) {
-         this.notifyBlockChange(var1, var2, var3, var4);
+         this.notifyBlockChange(var1, var2, var3, var4 == 0?var5:var4);
          return true;
       } else {
          return false;
@@ -447,6 +507,15 @@
          Block var6 = Block.blocksList[var5];
          if(var6 != null) {
             try {
+               CraftWorld var7 = ((WorldServer)this).getWorld();
+               if(var7 != null) {
+                  BlockPhysicsEvent var14 = new BlockPhysicsEvent(var7.getBlockAt(var1, var2, var3), var4);
+                  this.getServer().getPluginManager().callEvent(var14);
+                  if(var14.isCancelled()) {
+                     return;
+                  }
+               }
+
                var6.onNeighborBlockChange(this, var1, var2, var3, var4);
             } catch (Throwable var13) {
                CrashReport var8 = CrashReport.func_85055_a(var13, "Exception while updating neighbours");
@@ -464,8 +533,8 @@
                throw new ReportedException(var8);
             }
          }
-
       }
+
    }
 
    public boolean canBlockSeeTheSky(int var1, int var2, int var3) {
@@ -585,21 +654,15 @@
    }
 
    public void setLightValue(EnumSkyBlock var1, int var2, int var3, int var4, int var5) {
-      if(var2 >= -30000000 && var4 >= -30000000 && var2 < 30000000 && var4 < 30000000) {
-         if(var3 >= 0) {
-            if(var3 < 256) {
-               if(this.chunkExists(var2 >> 4, var4 >> 4)) {
-                  Chunk var6 = this.getChunkFromChunkCoords(var2 >> 4, var4 >> 4);
-                  var6.setLightValue(var1, var2 & 15, var3, var4 & 15, var5);
+      if(var2 >= -30000000 && var4 >= -30000000 && var2 < 30000000 && var4 < 30000000 && var3 >= 0 && var3 < 256 && this.chunkExists(var2 >> 4, var4 >> 4)) {
+         Chunk var6 = this.getChunkFromChunkCoords(var2 >> 4, var4 >> 4);
+         var6.setLightValue(var1, var2 & 15, var3, var4 & 15, var5);
 
-                  for(int var7 = 0; var7 < this.worldAccesses.size(); ++var7) {
-                     ((IWorldAccess)this.worldAccesses.get(var7)).markBlockForRenderUpdate(var2, var3, var4);
-                  }
-
-               }
-            }
+         for(int var7 = 0; var7 < this.worldAccesses.size(); ++var7) {
+            ((IWorldAccess)this.worldAccesses.get(var7)).markBlockForRenderUpdate(var2, var3, var4);
          }
       }
+
    }
 
    public void markBlockForRenderUpdate(int var1, int var2, int var3) {
@@ -644,9 +707,8 @@
                }
             }
 
-            var11 = 200;
-
-            while(var11-- >= 0) {
+            Vec3 var37;
+            for(var11 = 200; var11-- >= 0; var37.myVec3LocalPool.release(var37)) {
                if(Double.isNaN(var1.xCoord) || Double.isNaN(var1.yCoord) || Double.isNaN(var1.zCoord)) {
                   return null;
                }
@@ -655,114 +717,115 @@
                   return null;
                }
 
-               boolean var39 = true;
-               boolean var40 = true;
-               boolean var41 = true;
-               double var15 = 999.0D;
+               boolean var42 = true;
+               boolean var15 = true;
+               boolean var16 = true;
                double var17 = 999.0D;
                double var19 = 999.0D;
+               double var21 = 999.0D;
                if(var5 > var8) {
-                  var15 = (double)var8 + 1.0D;
+                  var17 = (double)var8 + 1.0D;
                } else if(var5 < var8) {
-                  var15 = (double)var8 + 0.0D;
+                  var17 = (double)var8 + 0.0D;
                } else {
-                  var39 = false;
+                  var42 = false;
                }
 
                if(var6 > var9) {
-                  var17 = (double)var9 + 1.0D;
+                  var19 = (double)var9 + 1.0D;
                } else if(var6 < var9) {
-                  var17 = (double)var9 + 0.0D;
+                  var19 = (double)var9 + 0.0D;
                } else {
-                  var40 = false;
+                  var15 = false;
                }
 
                if(var7 > var10) {
-                  var19 = (double)var10 + 1.0D;
+                  var21 = (double)var10 + 1.0D;
                } else if(var7 < var10) {
-                  var19 = (double)var10 + 0.0D;
+                  var21 = (double)var10 + 0.0D;
                } else {
-                  var41 = false;
+                  var16 = false;
                }
 
-               double var21 = 999.0D;
                double var23 = 999.0D;
                double var25 = 999.0D;
-               double var27 = var2.xCoord - var1.xCoord;
-               double var29 = var2.yCoord - var1.yCoord;
-               double var31 = var2.zCoord - var1.zCoord;
-               if(var39) {
-                  var21 = (var15 - var1.xCoord) / var27;
+               double var27 = 999.0D;
+               double var29 = var2.xCoord - var1.xCoord;
+               double var31 = var2.yCoord - var1.yCoord;
+               double var33 = var2.zCoord - var1.zCoord;
+               if(var42) {
+                  var23 = (var17 - var1.xCoord) / var29;
                }
 
-               if(var40) {
-                  var23 = (var17 - var1.yCoord) / var29;
+               if(var15) {
+                  var25 = (var19 - var1.yCoord) / var31;
                }
 
-               if(var41) {
-                  var25 = (var19 - var1.zCoord) / var31;
+               if(var16) {
+                  var27 = (var21 - var1.zCoord) / var33;
                }
 
-               boolean var33 = false;
-               byte var42;
-               if(var21 < var23 && var21 < var25) {
+               boolean var35 = false;
+               byte var36;
+               if(var23 < var25 && var23 < var27) {
                   if(var5 > var8) {
-                     var42 = 4;
+                     var36 = 4;
                   } else {
-                     var42 = 5;
+                     var36 = 5;
                   }
 
-                  var1.xCoord = var15;
-                  var1.yCoord += var29 * var21;
-                  var1.zCoord += var31 * var21;
-               } else if(var23 < var25) {
+                  var1.xCoord = var17;
+                  var1.yCoord += var31 * var23;
+                  var1.zCoord += var33 * var23;
+               } else if(var25 < var27) {
                   if(var6 > var9) {
-                     var42 = 0;
+                     var36 = 0;
                   } else {
-                     var42 = 1;
+                     var36 = 1;
                   }
 
-                  var1.xCoord += var27 * var23;
-                  var1.yCoord = var17;
-                  var1.zCoord += var31 * var23;
+                  var1.xCoord += var29 * var25;
+                  var1.yCoord = var19;
+                  var1.zCoord += var33 * var25;
                } else {
                   if(var7 > var10) {
-                     var42 = 2;
+                     var36 = 2;
                   } else {
-                     var42 = 3;
+                     var36 = 3;
                   }
 
-                  var1.xCoord += var27 * var25;
-                  var1.yCoord += var29 * var25;
-                  var1.zCoord = var19;
+                  var1.xCoord += var29 * var27;
+                  var1.yCoord += var31 * var27;
+                  var1.zCoord = var21;
                }
 
-               Vec3 var34 = this.getWorldVec3Pool().getVecFromPool(var1.xCoord, var1.yCoord, var1.zCoord);
-               var8 = (int)(var34.xCoord = (double)MathHelper.floor_double(var1.xCoord));
-               if(var42 == 5) {
+               var37 = this.getWorldVec3Pool().getVecFromPool(var1.xCoord, var1.yCoord, var1.zCoord);
+               var8 = (int)(var37.xCoord = (double)MathHelper.floor_double(var1.xCoord));
+               if(var36 == 5) {
                   --var8;
-                  ++var34.xCoord;
+                  ++var37.xCoord;
                }
 
-               var9 = (int)(var34.yCoord = (double)MathHelper.floor_double(var1.yCoord));
-               if(var42 == 1) {
+               var9 = (int)(var37.yCoord = (double)MathHelper.floor_double(var1.yCoord));
+               if(var36 == 1) {
                   --var9;
-                  ++var34.yCoord;
+                  ++var37.yCoord;
                }
 
-               var10 = (int)(var34.zCoord = (double)MathHelper.floor_double(var1.zCoord));
-               if(var42 == 3) {
+               var10 = (int)(var37.zCoord = (double)MathHelper.floor_double(var1.zCoord));
+               if(var36 == 3) {
                   --var10;
-                  ++var34.zCoord;
+                  ++var37.zCoord;
                }
 
-               int var35 = this.getBlockId(var8, var9, var10);
-               int var36 = this.getBlockMetadata(var8, var9, var10);
-               Block var37 = Block.blocksList[var35];
-               if((!var4 || var37 == null || var37.getCollisionBoundingBoxFromPool(this, var8, var9, var10) != null) && var35 > 0 && var37.canCollideCheck(var36, var3)) {
-                  MovingObjectPosition var38 = var37.collisionRayTrace(this, var8, var9, var10, var1, var2);
-                  if(var38 != null) {
-                     return var38;
+               int var38 = this.getBlockId(var8, var9, var10);
+               int var39 = this.getBlockMetadata(var8, var9, var10);
+               Block var40 = Block.blocksList[var38];
+               if((!var4 || var40 == null || var40.getCollisionBoundingBoxFromPool(this, var8, var9, var10) != null) && var38 > 0 && var40.canCollideCheck(var39, var3)) {
+                  MovingObjectPosition var41 = var40.collisionRayTrace(this, var8, var9, var10, var1, var2);
+                  if(var41 != null) {
+                     var37.myVec3LocalPool.release(var37);
+                     return var41;
                   }
                }
             }
@@ -781,8 +844,8 @@
          for(int var5 = 0; var5 < this.worldAccesses.size(); ++var5) {
             ((IWorldAccess)this.worldAccesses.get(var5)).playSound(var2, var1.posX, var1.posY - (double)var1.yOffset, var1.posZ, var3, var4);
          }
-
       }
+
    }
 
    public void func_85173_a(EntityPlayer var1, String var2, float var3, float var4) {
@@ -790,8 +853,8 @@
          for(int var5 = 0; var5 < this.worldAccesses.size(); ++var5) {
             ((IWorldAccess)this.worldAccesses.get(var5)).func_85102_a(var1, var2, var1.posX, var1.posY - (double)var1.yOffset, var1.posZ, var3, var4);
          }
-
       }
+
    }
 
    public void playSoundEffect(double var1, double var3, double var5, String var7, float var8, float var9) {
@@ -799,8 +862,8 @@
          for(int var10 = 0; var10 < this.worldAccesses.size(); ++var10) {
             ((IWorldAccess)this.worldAccesses.get(var10)).playSound(var7, var1, var3, var5, var8, var9);
          }
-
       }
+
    }
 
    public void playSound(double var1, double var3, double var5, String var7, float var8, float var9) {}
@@ -825,26 +888,54 @@
    }
 
    public boolean spawnEntityInWorld(Entity var1) {
-      int var2 = MathHelper.floor_double(var1.posX / 16.0D);
-      int var3 = MathHelper.floor_double(var1.posZ / 16.0D);
-      boolean var4 = false;
-      if(var1 instanceof EntityPlayer) {
-         var4 = true;
-      }
-
-      if(!var4 && !this.chunkExists(var2, var3)) {
+      return this.addEntity(var1, SpawnReason.DEFAULT);
+   }
+
+   public boolean addEntity(Entity var1, SpawnReason var2) {
+      if(var1 == null) {
          return false;
       } else {
+         int var3 = MathHelper.floor_double(var1.posX / 16.0D);
+         int var4 = MathHelper.floor_double(var1.posZ / 16.0D);
+         boolean var5 = false;
          if(var1 instanceof EntityPlayer) {
-            EntityPlayer var5 = (EntityPlayer)var1;
-            this.playerEntities.add(var5);
-            this.updateAllPlayersSleepingFlag();
+            var5 = true;
          }
 
-         this.getChunkFromChunkCoords(var2, var3).addEntity(var1);
-         this.loadedEntityList.add(var1);
-         this.obtainEntitySkin(var1);
-         return true;
+         Object var6 = null;
+         if(var1 instanceof EntityLiving && !(var1 instanceof EntityPlayerMP)) {
+            boolean var7 = var1 instanceof EntityAnimal || var1 instanceof EntityWaterMob || var1 instanceof EntityGolem;
+            boolean var8 = var1 instanceof EntityMob || var1 instanceof EntityGhast || var1 instanceof EntitySlime;
+            if(var2 != SpawnReason.CUSTOM && (var7 && !this.spawnPeacefulMobs || var8 && !this.spawnHostileMobs)) {
+               var1.isDead = true;
+               return false;
+            }
+
+            var6 = CraftEventFactory.callCreatureSpawnEvent((EntityLiving)var1, var2);
+         } else if(var1 instanceof EntityItem) {
+            var6 = CraftEventFactory.callItemSpawnEvent((EntityItem)var1);
+         } else if(var1.getBukkitEntity() instanceof Projectile) {
+            var6 = CraftEventFactory.callProjectileLaunchEvent(var1);
+         }
+
+         if(var6 != null && (((Cancellable)var6).isCancelled() || var1.isDead)) {
+            var1.isDead = true;
+            return false;
+         } else if(!var5 && !this.chunkExists(var3, var4)) {
+            var1.isDead = true;
+            return false;
+         } else {
+            if(var1 instanceof EntityPlayer) {
+               EntityPlayer var9 = (EntityPlayer)var1;
+               this.playerEntities.add(var9);
+               this.updateAllPlayersSleepingFlag();
+            }
+
+            this.getChunkFromChunkCoords(var3, var4).addEntity(var1);
+            this.loadedEntityList.add(var1);
+            this.obtainEntitySkin(var1);
+            return true;
+         }
       }
    }
 
@@ -853,6 +944,7 @@
          ((IWorldAccess)this.worldAccesses.get(var2)).obtainEntitySkin(var1);
       }
 
+      var1.valid = true;
    }
 
    protected void releaseEntitySkin(Entity var1) {
@@ -860,6 +952,7 @@
          ((IWorldAccess)this.worldAccesses.get(var2)).releaseEntitySkin(var1);
       }
 
+      var1.valid = false;
    }
 
    public void setEntityDead(Entity var1) {
@@ -1018,41 +1111,45 @@
 
       int var1;
       Entity var2;
-      CrashReport var4;
-      CrashReportCategory var5;
+      CrashReport var5;
+      CrashReportCategory var6;
       for(var1 = 0; var1 < this.weatherEffects.size(); ++var1) {
          var2 = (Entity)this.weatherEffects.get(var1);
+         if(var2 != null) {
+            ChunkProviderServer var3 = ((WorldServer)this).theChunkProviderServer;
+            if(!var3.droppedChunksSet.contains(MathHelper.floor_double(var2.posX) >> 4, MathHelper.floor_double(var2.posZ) >> 4)) {
+               try {
+                  var2.onUpdate();
+               } catch (Throwable var12) {
+                  var5 = CrashReport.func_85055_a(var12, "Ticking entity");
+                  var6 = var5.func_85058_a("Entity being ticked");
+                  if(var2 == null) {
+                     var6.addCrashSection("Entity", "~~NULL~~");
+                  } else {
+                     var2.func_85029_a(var6);
+                  }
 
-         try {
-            var2.onUpdate();
-         } catch (Throwable var7) {
-            var4 = CrashReport.func_85055_a(var7, "Ticking entity");
-            var5 = var4.func_85058_a("Entity being ticked");
-            if(var2 == null) {
-               var5.addCrashSection("Entity", "~~NULL~~");
-            } else {
-               var2.func_85029_a(var5);
-            }
-
-            throw new ReportedException(var4);
-         }
+                  throw new ReportedException(var5);
+               }
 
-         if(var2.isDead) {
-            this.weatherEffects.remove(var1--);
+               if(var2.isDead) {
+                  this.weatherEffects.remove(var1--);
+               }
+            }
          }
       }
 
       this.theProfiler.endStartSection("remove");
       this.loadedEntityList.removeAll(this.unloadedEntityList);
 
-      int var3;
-      int var13;
+      int var4;
+      int var14;
       for(var1 = 0; var1 < this.unloadedEntityList.size(); ++var1) {
          var2 = (Entity)this.unloadedEntityList.get(var1);
-         var3 = var2.chunkCoordX;
-         var13 = var2.chunkCoordZ;
-         if(var2.addedToChunk && this.chunkExists(var3, var13)) {
-            this.getChunkFromChunkCoords(var3, var13).removeEntity(var2);
+         var14 = var2.chunkCoordX;
+         var4 = var2.chunkCoordZ;
+         if(var2.addedToChunk && this.chunkExists(var14, var4)) {
+            this.getChunkFromChunkCoords(var14, var4).removeEntity(var2);
          }
       }
 
@@ -1065,76 +1162,83 @@
 
       for(var1 = 0; var1 < this.loadedEntityList.size(); ++var1) {
          var2 = (Entity)this.loadedEntityList.get(var1);
-         if(var2.ridingEntity != null) {
-            if(!var2.ridingEntity.isDead && var2.ridingEntity.riddenByEntity == var2) {
-               continue;
+         ChunkProviderServer var7 = ((WorldServer)this).theChunkProviderServer;
+         if(!var7.droppedChunksSet.contains(MathHelper.floor_double(var2.posX) >> 4, MathHelper.floor_double(var2.posZ) >> 4)) {
+            if(var2.ridingEntity != null) {
+               if(!var2.ridingEntity.isDead && var2.ridingEntity.riddenByEntity == var2) {
+                  continue;
+               }
+
+               var2.ridingEntity.riddenByEntity = null;
+               var2.ridingEntity = null;
             }
 
-            var2.ridingEntity.riddenByEntity = null;
-            var2.ridingEntity = null;
-         }
+            this.theProfiler.startSection("tick");
+            if(!var2.isDead) {
+               try {
+                  this.updateEntity(var2);
+               } catch (Throwable var11) {
+                  var5 = CrashReport.func_85055_a(var11, "Ticking entity");
+                  var6 = var5.func_85058_a("Entity being ticked");
+                  if(var2 == null) {
+                     var6.addCrashSection("Entity", "~~NULL~~");
+                  } else {
+                     var2.func_85029_a(var6);
+                  }
 
-         this.theProfiler.startSection("tick");
-         if(!var2.isDead) {
-            try {
-               this.updateEntity(var2);
-            } catch (Throwable var8) {
-               var4 = CrashReport.func_85055_a(var8, "Ticking entity");
-               var5 = var4.func_85058_a("Entity being ticked");
-               if(var2 == null) {
-                  var5.addCrashSection("Entity", "~~NULL~~");
-               } else {
-                  var2.func_85029_a(var5);
+                  throw new ReportedException(var5);
                }
-
-               throw new ReportedException(var4);
             }
-         }
 
-         this.theProfiler.endSection();
-         this.theProfiler.startSection("remove");
-         if(var2.isDead) {
-            var3 = var2.chunkCoordX;
-            var13 = var2.chunkCoordZ;
-            if(var2.addedToChunk && this.chunkExists(var3, var13)) {
-               this.getChunkFromChunkCoords(var3, var13).removeEntity(var2);
+            this.theProfiler.endSection();
+            this.theProfiler.startSection("remove");
+            if(var2.isDead) {
+               var14 = var2.chunkCoordX;
+               var4 = var2.chunkCoordZ;
+               if(var2.addedToChunk && this.chunkExists(var14, var4)) {
+                  this.getChunkFromChunkCoords(var14, var4).removeEntity(var2);
+               }
+
+               this.loadedEntityList.remove(var1--);
+               this.releaseEntitySkin(var2);
             }
 
-            this.loadedEntityList.remove(var1--);
-            this.releaseEntitySkin(var2);
+            this.theProfiler.endSection();
          }
-
-         this.theProfiler.endSection();
       }
 
       this.theProfiler.endStartSection("tileEntities");
       this.scanningTileEntities = true;
-      Iterator var14 = this.loadedTileEntityList.iterator();
+      Iterator var15 = this.loadedTileEntityList.iterator();
 
-      while(var14.hasNext()) {
-         TileEntity var9 = (TileEntity)var14.next();
-         if(!var9.isInvalid() && var9.func_70309_m() && this.blockExists(var9.xCoord, var9.yCoord, var9.zCoord)) {
-            try {
-               var9.updateEntity();
-            } catch (Throwable var6) {
-               var4 = CrashReport.func_85055_a(var6, "Ticking tile entity");
-               var5 = var4.func_85058_a("Tile entity being ticked");
-               if(var9 == null) {
-                  var5.addCrashSection("Tile entity", "~~NULL~~");
-               } else {
-                  var9.func_85027_a(var5);
-               }
+      Chunk var10;
+      while(var15.hasNext()) {
+         TileEntity var8 = (TileEntity)var15.next();
+         ChunkProviderServer var9 = ((WorldServer)this).theChunkProviderServer;
+         if(!var9.droppedChunksSet.contains(var8.xCoord >> 4, var8.zCoord >> 4)) {
+            if(!var8.isInvalid() && var8.func_70309_m() && this.blockExists(var8.xCoord, var8.yCoord, var8.zCoord)) {
+               try {
+                  var8.updateEntity();
+               } catch (Throwable var13) {
+                  var5 = CrashReport.func_85055_a(var13, "Ticking tile entity");
+                  var6 = var5.func_85058_a("Tile entity being ticked");
+                  if(var8 == null) {
+                     var6.addCrashSection("Tile entity", "~~NULL~~");
+                  } else {
+                     var8.func_85027_a(var6);
+                  }
 
-               throw new ReportedException(var4);
+                  throw new ReportedException(var5);
+               }
             }
-         }
 
-         if(var9.isInvalid()) {
-            var14.remove();
-            if(this.chunkExists(var9.xCoord >> 4, var9.zCoord >> 4)) {
-               Chunk var11 = this.getChunkFromChunkCoords(var9.xCoord >> 4, var9.zCoord >> 4);
-               if(var11 != null) {
-                  var11.removeChunkBlockTileEntity(var9.xCoord & 15, var9.yCoord, var9.zCoord & 15);
+            if(var8.isInvalid()) {
+               var15.remove();
+               if(this.chunkExists(var8.xCoord >> 4, var8.zCoord >> 4)) {
+                  var10 = this.getChunkFromChunkCoords(var8.xCoord >> 4, var8.zCoord >> 4);
+                  if(var10 != null) {
+                     var10.removeChunkBlockTileEntity(var8.xCoord & 15, var8.yCoord, var8.zCoord & 15);
+                  }
                }
             }
          }
@@ -1148,21 +1252,20 @@
 
       this.theProfiler.endStartSection("pendingTileEntities");
       if(!this.addedTileEntityList.isEmpty()) {
-         for(int var10 = 0; var10 < this.addedTileEntityList.size(); ++var10) {
-            TileEntity var12 = (TileEntity)this.addedTileEntityList.get(var10);
-            if(!var12.isInvalid()) {
-               if(!this.loadedTileEntityList.contains(var12)) {
-                  this.loadedTileEntityList.add(var12);
-               }
-
-               if(this.chunkExists(var12.xCoord >> 4, var12.zCoord >> 4)) {
-                  Chunk var15 = this.getChunkFromChunkCoords(var12.xCoord >> 4, var12.zCoord >> 4);
-                  if(var15 != null) {
-                     var15.setChunkBlockTileEntity(var12.xCoord & 15, var12.yCoord, var12.zCoord & 15, var12);
+         for(int var16 = 0; var16 < this.addedTileEntityList.size(); ++var16) {
+            TileEntity var17 = (TileEntity)this.addedTileEntityList.get(var16);
+            if(!var17.isInvalid()) {
+               if(this.chunkExists(var17.xCoord >> 4, var17.zCoord >> 4)) {
+                  var10 = this.getChunkFromChunkCoords(var17.xCoord >> 4, var17.zCoord >> 4);
+                  if(var10 != null) {
+                     var10.setChunkBlockTileEntity(var17.xCoord & 15, var17.yCoord, var17.zCoord & 15, var17);
+                     if(!this.loadedTileEntityList.contains(var17)) {
+                        this.loadedTileEntityList.add(var17);
+                     }
                   }
                }
 
-               this.markBlockForUpdate(var12.xCoord, var12.yCoord, var12.zCoord);
+               this.markBlockForUpdate(var17.xCoord, var17.yCoord, var17.zCoord);
             }
          }
 
@@ -1250,8 +1353,8 @@
                var1.riddenByEntity = null;
             }
          }
-
       }
+
    }
 
    public boolean checkIfAABBIsClear(AxisAlignedBB var1) {
@@ -1396,6 +1499,7 @@
             var3.motionZ += var11.zCoord * var18;
          }
 
+         var11.myVec3LocalPool.release(var11);
          return var10;
       }
    }
@@ -1471,14 +1575,15 @@
       double var7 = 1.0D / ((var2.maxZ - var2.minZ) * 2.0D + 1.0D);
       int var9 = 0;
       int var10 = 0;
+      Vec3 var11 = var1.myVec3LocalPool.getVecFromPool(0.0D, 0.0D, 0.0D);
 
-      for(float var11 = 0.0F; var11 <= 1.0F; var11 = (float)((double)var11 + var3)) {
-         for(float var12 = 0.0F; var12 <= 1.0F; var12 = (float)((double)var12 + var5)) {
-            for(float var13 = 0.0F; var13 <= 1.0F; var13 = (float)((double)var13 + var7)) {
-               double var14 = var2.minX + (var2.maxX - var2.minX) * (double)var11;
-               double var16 = var2.minY + (var2.maxY - var2.minY) * (double)var12;
-               double var18 = var2.minZ + (var2.maxZ - var2.minZ) * (double)var13;
-               if(this.rayTraceBlocks(this.getWorldVec3Pool().getVecFromPool(var14, var16, var18), var1) == null) {
+      for(float var12 = 0.0F; var12 <= 1.0F; var12 = (float)((double)var12 + var3)) {
+         for(float var13 = 0.0F; var13 <= 1.0F; var13 = (float)((double)var13 + var5)) {
+            for(float var14 = 0.0F; var14 <= 1.0F; var14 = (float)((double)var14 + var7)) {
+               double var15 = var2.minX + (var2.maxX - var2.minX) * (double)var12;
+               double var17 = var2.minY + (var2.maxY - var2.minY) * (double)var13;
+               double var19 = var2.minZ + (var2.maxZ - var2.minZ) * (double)var14;
+               if(this.rayTraceBlocks(var11.setComponents(var15, var17, var19), var1) == null) {
                   ++var9;
                }
 
@@ -1487,6 +1592,7 @@
          }
       }
 
+      var11.myVec3LocalPool.release(var11);
       return (float)var9 / (float)var10;
    }
 
@@ -1671,22 +1777,30 @@
             --var1;
             this.worldInfo.setThunderTime(var1);
             if(var1 <= 0) {
-               this.worldInfo.setThundering(!this.worldInfo.isThundering());
+               ThunderChangeEvent var2 = new ThunderChangeEvent(this.getWorld(), !this.worldInfo.isThundering());
+               this.getServer().getPluginManager().callEvent(var2);
+               if(!var2.isCancelled()) {
+                  this.worldInfo.setThundering(!this.worldInfo.isThundering());
+               }
             }
          }
 
-         int var2 = this.worldInfo.getRainTime();
-         if(var2 <= 0) {
+         int var4 = this.worldInfo.getRainTime();
+         if(var4 <= 0) {
             if(this.worldInfo.isRaining()) {
                this.worldInfo.setRainTime(this.rand.nextInt(12000) + 12000);
             } else {
                this.worldInfo.setRainTime(this.rand.nextInt(168000) + 12000);
             }
          } else {
-            --var2;
-            this.worldInfo.setRainTime(var2);
-            if(var2 <= 0) {
-               this.worldInfo.setRaining(!this.worldInfo.isRaining());
+            --var4;
+            this.worldInfo.setRainTime(var4);
+            if(var4 <= 0) {
+               WeatherChangeEvent var3 = new WeatherChangeEvent(this.getWorld(), !this.worldInfo.isRaining());
+               this.getServer().getPluginManager().callEvent(var3);
+               if(!var3.isCancelled()) {
+                  this.worldInfo.setRaining(!this.worldInfo.isRaining());
+               }
             }
          }
 
@@ -1719,8 +1833,8 @@
          if(this.thunderingStrength > 1.0F) {
             this.thunderingStrength = 1.0F;
          }
-
       }
+
    }
 
    public void commandToggleDownfall() {
@@ -1728,7 +1842,6 @@
    }
 
    protected void setActivePlayerChunksAndCheckLight() {
-      this.activeChunkSet.clear();
       this.theProfiler.startSection("buildList");
 
       int var1;
@@ -1743,7 +1856,10 @@
 
          for(int var6 = -var5; var6 <= var5; ++var6) {
             for(int var7 = -var5; var7 <= var5; ++var7) {
-               this.activeChunkSet.add(new ChunkCoordIntPair(var6 + var3, var7 + var4));
+               ChunkProviderServer var8 = ((WorldServer)var2.worldObj).theChunkProviderServer;
+               if(!var8.droppedChunksSet.contains(var6 + var3, var7 + var4)) {
+                  this.activeChunkSet.add(LongHash.toLong(var6 + var3, var7 + var4));
+               }
             }
          }
       }
@@ -1759,8 +1875,8 @@
          var2 = (EntityPlayer)this.playerEntities.get(var1);
          var3 = MathHelper.floor_double(var2.posX) + this.rand.nextInt(11) - 5;
          var4 = MathHelper.floor_double(var2.posY) + this.rand.nextInt(11) - 5;
-         int var8 = MathHelper.floor_double(var2.posZ) + this.rand.nextInt(11) - 5;
-         this.updateAllLightTypes(var3, var4, var8);
+         int var9 = MathHelper.floor_double(var2.posZ) + this.rand.nextInt(11) - 5;
+         this.updateAllLightTypes(var3, var4, var9);
       }
 
       this.theProfiler.endSection();
@@ -1773,7 +1889,7 @@
          int var4 = this.updateLCG >> 2;
          int var5 = var4 & 15;
          int var6 = var4 >> 8 & 15;
-         int var7 = var4 >> 16 & 127;
+         int var7 = var4 >> 16 & 255;
          int var8 = var3.getBlockID(var5, var7, var6);
          var5 += var1;
          var6 += var2;
@@ -1960,14 +2076,13 @@
          }
 
          boolean var11 = false;
-         int var24;
+         int var12;
          if(var1 == EnumSkyBlock.Sky) {
-            var24 = this.computeSkyLightValue(var7, var2, var3, var4, var9, var10);
+            var12 = this.computeSkyLightValue(var7, var2, var3, var4, var9, var10);
          } else {
-            var24 = this.computeBlockLightValue(var7, var2, var3, var4, var9, var10);
+            var12 = this.computeBlockLightValue(var7, var2, var3, var4, var9, var10);
          }
 
-         int var12;
          int var13;
          int var14;
          int var15;
@@ -1975,9 +2090,10 @@
          int var16;
          int var19;
          int var18;
-         if(var24 > var7) {
+         int var20;
+         if(var12 > var7) {
             this.lightUpdateBlockList[var6++] = 133152;
-         } else if(var24 < var7) {
+         } else if(var12 < var7) {
             if(var1 != EnumSkyBlock.Block) {
                ;
             }
@@ -1987,20 +2103,16 @@
             while(var5 < var6) {
                var9 = this.lightUpdateBlockList[var5++];
                var10 = (var9 & 63) - 32 + var2;
-               var24 = (var9 >> 6 & 63) - 32 + var3;
-               var12 = (var9 >> 12 & 63) - 32 + var4;
-               var13 = var9 >> 18 & 15;
-               var14 = this.getSavedLightValue(var1, var10, var24, var12);
-               if(var14 == var13) {
-                  this.setLightValue(var1, var10, var24, var12, 0);
-                  if(var13 > 0) {
-                     var15 = var10 - var2;
-                     var16 = var24 - var3;
-                     var17 = var12 - var4;
-                     if(var15 < 0) {
-                        var15 = -var15;
-                     }
-
+               var12 = (var9 >> 6 & 63) - 32 + var3;
+               var13 = (var9 >> 12 & 63) - 32 + var4;
+               var14 = var9 >> 18 & 15;
+               var15 = this.getSavedLightValue(var1, var10, var12, var13);
+               if(var15 == var14) {
+                  this.setLightValue(var1, var10, var12, var13, 0);
+                  if(var14 > 0) {
+                     var16 = var10 - var2;
+                     var17 = var12 - var3;
+                     var18 = var13 - var4;
                      if(var16 < 0) {
                         var16 = -var16;
                      }
@@ -2009,20 +2121,24 @@
                         var17 = -var17;
                      }
 
-                     if(var15 + var16 + var17 < 17) {
-                        for(var18 = 0; var18 < 6; ++var18) {
-                           var19 = var18 % 2 * 2 - 1;
-                           int var20 = var10 + var18 / 2 % 3 / 2 * var19;
-                           int var21 = var24 + (var18 / 2 + 1) % 3 / 2 * var19;
-                           int var22 = var12 + (var18 / 2 + 2) % 3 / 2 * var19;
-                           var14 = this.getSavedLightValue(var1, var20, var21, var22);
-                           int var23 = Block.lightOpacity[this.getBlockId(var20, var21, var22)];
-                           if(var23 == 0) {
-                              var23 = 1;
+                     if(var18 < 0) {
+                        var18 = -var18;
+                     }
+
+                     if(var16 + var17 + var18 < 17) {
+                        for(var19 = 0; var19 < 6; ++var19) {
+                           var20 = var19 % 2 * 2 - 1;
+                           int var21 = var10 + var19 / 2 % 3 / 2 * var20;
+                           int var22 = var12 + (var19 / 2 + 1) % 3 / 2 * var20;
+                           int var23 = var13 + (var19 / 2 + 2) % 3 / 2 * var20;
+                           var15 = this.getSavedLightValue(var1, var21, var22, var23);
+                           int var24 = Block.lightOpacity[this.getBlockId(var21, var22, var23)];
+                           if(var24 == 0) {
+                              var24 = 1;
                            }
 
-                           if(var14 == var13 - var23 && var6 < this.lightUpdateBlockList.length) {
-                              this.lightUpdateBlockList[var6++] = var20 - var2 + 32 + (var21 - var3 + 32 << 6) + (var22 - var4 + 32 << 12) + (var13 - var23 << 18);
+                           if(var15 == var14 - var24 && var6 < this.lightUpdateBlockList.length) {
+                              this.lightUpdateBlockList[var6++] = var21 - var2 + 32 + (var22 - var3 + 32 << 6) + (var23 - var4 + 32 << 12) + (var14 - var24 << 18);
                            }
                         }
                      }
@@ -2039,32 +2155,28 @@
          while(var5 < var6) {
             var9 = this.lightUpdateBlockList[var5++];
             var10 = (var9 & 63) - 32 + var2;
-            var24 = (var9 >> 6 & 63) - 32 + var3;
-            var12 = (var9 >> 12 & 63) - 32 + var4;
-            var13 = this.getSavedLightValue(var1, var10, var24, var12);
-            var14 = this.getBlockId(var10, var24, var12);
-            var15 = Block.lightOpacity[var14];
-            if(var15 == 0) {
-               var15 = 1;
+            var12 = (var9 >> 6 & 63) - 32 + var3;
+            var13 = (var9 >> 12 & 63) - 32 + var4;
+            var14 = this.getSavedLightValue(var1, var10, var12, var13);
+            var15 = this.getBlockId(var10, var12, var13);
+            var16 = Block.lightOpacity[var15];
+            if(var16 == 0) {
+               var16 = 1;
             }
 
             boolean var25 = false;
             if(var1 == EnumSkyBlock.Sky) {
-               var16 = this.computeSkyLightValue(var13, var10, var24, var12, var14, var15);
+               var17 = this.computeSkyLightValue(var14, var10, var12, var13, var15, var16);
             } else {
-               var16 = this.computeBlockLightValue(var13, var10, var24, var12, var14, var15);
+               var17 = this.computeBlockLightValue(var14, var10, var12, var13, var15, var16);
             }
 
-            if(var16 != var13) {
-               this.setLightValue(var1, var10, var24, var12, var16);
-               if(var16 > var13) {
-                  var17 = var10 - var2;
-                  var18 = var24 - var3;
-                  var19 = var12 - var4;
-                  if(var17 < 0) {
-                     var17 = -var17;
-                  }
-
+            if(var17 != var14) {
+               this.setLightValue(var1, var10, var12, var13, var17);
+               if(var17 > var14) {
+                  var18 = var10 - var2;
+                  var19 = var12 - var3;
+                  var20 = var13 - var4;
                   if(var18 < 0) {
                      var18 = -var18;
                   }
@@ -2073,29 +2185,33 @@
                      var19 = -var19;
                   }
 
-                  if(var17 + var18 + var19 < 17 && var6 < this.lightUpdateBlockList.length - 6) {
-                     if(this.getSavedLightValue(var1, var10 - 1, var24, var12) < var16) {
-                        this.lightUpdateBlockList[var6++] = var10 - 1 - var2 + 32 + (var24 - var3 + 32 << 6) + (var12 - var4 + 32 << 12);
+                  if(var20 < 0) {
+                     var20 = -var20;
+                  }
+
+                  if(var18 + var19 + var20 < 17 && var6 < this.lightUpdateBlockList.length - 6) {
+                     if(this.getSavedLightValue(var1, var10 - 1, var12, var13) < var17) {
+                        this.lightUpdateBlockList[var6++] = var10 - 1 - var2 + 32 + (var12 - var3 + 32 << 6) + (var13 - var4 + 32 << 12);
                      }
 
-                     if(this.getSavedLightValue(var1, var10 + 1, var24, var12) < var16) {
-                        this.lightUpdateBlockList[var6++] = var10 + 1 - var2 + 32 + (var24 - var3 + 32 << 6) + (var12 - var4 + 32 << 12);
+                     if(this.getSavedLightValue(var1, var10 + 1, var12, var13) < var17) {
+                        this.lightUpdateBlockList[var6++] = var10 + 1 - var2 + 32 + (var12 - var3 + 32 << 6) + (var13 - var4 + 32 << 12);
                      }
 
-                     if(this.getSavedLightValue(var1, var10, var24 - 1, var12) < var16) {
-                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var24 - 1 - var3 + 32 << 6) + (var12 - var4 + 32 << 12);
+                     if(this.getSavedLightValue(var1, var10, var12 - 1, var13) < var17) {
+                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var12 - 1 - var3 + 32 << 6) + (var13 - var4 + 32 << 12);
                      }
 
-                     if(this.getSavedLightValue(var1, var10, var24 + 1, var12) < var16) {
-                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var24 + 1 - var3 + 32 << 6) + (var12 - var4 + 32 << 12);
+                     if(this.getSavedLightValue(var1, var10, var12 + 1, var13) < var17) {
+                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var12 + 1 - var3 + 32 << 6) + (var13 - var4 + 32 << 12);
                      }
 
-                     if(this.getSavedLightValue(var1, var10, var24, var12 - 1) < var16) {
-                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var24 - var3 + 32 << 6) + (var12 - 1 - var4 + 32 << 12);
+                     if(this.getSavedLightValue(var1, var10, var12, var13 - 1) < var17) {
+                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var12 - var3 + 32 << 6) + (var13 - 1 - var4 + 32 << 12);
                      }
 
-                     if(this.getSavedLightValue(var1, var10, var24, var12 + 1) < var16) {
-                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var24 - var3 + 32 << 6) + (var12 + 1 - var4 + 32 << 12);
+                     if(this.getSavedLightValue(var1, var10, var12, var13 + 1) < var17) {
+                        this.lightUpdateBlockList[var6++] = var10 - var2 + 32 + (var12 - var3 + 32 << 6) + (var13 + 1 - var4 + 32 << 12);
                      }
                   }
                }
@@ -2104,6 +2220,7 @@
 
          this.theProfiler.endSection();
       }
+
    }
 
    public boolean tickUpdates(boolean var1) {
@@ -2196,10 +2313,14 @@
    }
 
    public void addLoadedEntities(List var1) {
-      this.loadedEntityList.addAll(var1);
+      Entity var2 = null;
 
-      for(int var2 = 0; var2 < var1.size(); ++var2) {
-         this.obtainEntitySkin((Entity)var1.get(var2));
+      for(int var3 = 0; var3 < var1.size(); ++var3) {
+         var2 = (Entity)var1.get(var3);
+         if(var2 != null) {
+            this.loadedEntityList.add(var2);
+            this.obtainEntitySkin((Entity)var1.get(var3));
+         }
       }
 
    }
@@ -2217,15 +2338,20 @@
          var11 = null;
       }
 
+      boolean var12;
       if(var11 != null && !this.checkIfAABBIsClearExcludingEntity(var11, var7)) {
-         return false;
+         var12 = false;
       } else {
          if(var9 != null && (var9 == Block.waterMoving || var9 == Block.waterStill || var9 == Block.lavaMoving || var9 == Block.lavaStill || var9 == Block.fire || var9.blockMaterial.isReplaceable())) {
             var9 = null;
          }
 
-         return var9 != null && var9.blockMaterial == Material.circuits && var10 == Block.anvil?true:var1 > 0 && var9 == null && var10.canPlaceBlockOnSide(this, var2, var3, var4, var6);
+         var12 = var9 != null && var9.blockMaterial == Material.circuits && var10 == Block.anvil?true:var1 > 0 && var9 == null && var10.canPlaceBlockOnSide(this, var2, var3, var4, var6);
       }
+
+      BlockCanBuildEvent var13 = new BlockCanBuildEvent(this.getWorld().getBlockAt(var2, var3, var4), var1, var12);
+      this.getServer().getPluginManager().callEvent(var13);
+      return var13.isBuildable();
    }
 
    public PathEntity getPathEntityToEntity(Entity var1, Entity var2, float var3, boolean var4, boolean var5, boolean var6, boolean var7) {
@@ -2296,10 +2422,12 @@
 
       for(int var12 = 0; var12 < this.playerEntities.size(); ++var12) {
          EntityPlayer var13 = (EntityPlayer)this.playerEntities.get(var12);
-         double var14 = var13.getDistanceSq(var1, var3, var5);
-         if((var7 < 0.0D || var14 < var7 * var7) && (var9 == -1.0D || var14 < var9)) {
-            var9 = var14;
-            var11 = var13;
+         if(var13 != null && !var13.isDead) {
+            double var14 = var13.getDistanceSq(var1, var3, var5);
+            if((var7 < 0.0D || var14 < var7 * var7) && (var9 == -1.0D || var14 < var9)) {
+               var9 = var14;
+               var11 = var13;
+            }
          }
       }
 
@@ -2316,7 +2444,7 @@
 
       for(int var12 = 0; var12 < this.playerEntities.size(); ++var12) {
          EntityPlayer var13 = (EntityPlayer)this.playerEntities.get(var12);
-         if(!var13.capabilities.disableDamage) {
+         if(var13 != null && !var13.isDead && !var13.capabilities.disableDamage) {
             double var14 = var13.getDistanceSq(var1, var3, var5);
             double var16 = var7;
             if(var13.isSneaking()) {
@@ -2352,7 +2480,7 @@
       return null;
    }
 
-   public void checkSessionLock() {
+   public void checkSessionLock() throws MinecraftException {
       this.saveHandler.checkSessionLock();
    }
 
@@ -2407,6 +2535,13 @@
 
    public void updateAllPlayersSleepingFlag() {}
 
+   public void checkSleepStatus() {
+      if(!this.isRemote) {
+         this.updateAllPlayersSleepingFlag();
+      }
+
+   }
+
    public float getWeightedThunderStrength(float var1) {
       return (this.prevThunderingStrength + (this.thunderingStrength - this.prevThunderingStrength) * var1) * this.getRainStrength(var1);
    }
Binary files mcp-mcdev/net/minecraft/src/WorldGenBigMushroom.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenBigMushroom.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenBigMushroom.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenBigMushroom.java
--- mcp-mcdev/net/minecraft/src/WorldGenBigMushroom.java	2012-11-29 21:14:09.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenBigMushroom.java	2012-11-29 21:40:43.000000000 -0800
@@ -1,11 +1,20 @@
 package net.minecraft.src;
 
+import java.util.Iterator;
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
+import net.minecraft.src.ItemStack;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
+import org.bukkit.Bukkit;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.event.world.StructureGrowEvent;
+import org.bukkit.material.MaterialData;
 
-public class WorldGenBigMushroom extends WorldGenerator {
+public class WorldGenBigMushroom extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    private int mushroomType = -1;
 
@@ -20,132 +29,174 @@
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
-      int var6 = var2.nextInt(2);
+      return this.grow((BlockChangeDelegate)var1, var2, var3, var4, var5, (StructureGrowEvent)null, (ItemStack)null, (CraftWorld)null);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
+      return this.grow(var1, var2, var3, var4, var5, (StructureGrowEvent)null, (ItemStack)null, (CraftWorld)null);
+   }
+
+   public boolean grow(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5, StructureGrowEvent var6, ItemStack var7, CraftWorld var8) {
+      int var9 = var2.nextInt(2);
       if(this.mushroomType >= 0) {
-         var6 = this.mushroomType;
+         var9 = this.mushroomType;
       }
 
-      int var7 = var2.nextInt(3) + 4;
-      boolean var8 = true;
-      if(var4 >= 1 && var4 + var7 + 1 < 256) {
-         int var9;
-         int var11;
+      int var10 = var2.nextInt(3) + 4;
+      boolean var11 = true;
+      if(var4 >= 1 && var4 + var10 + 1 < 256) {
          int var12;
-         int var13;
-         for(var9 = var4; var9 <= var4 + 1 + var7; ++var9) {
-            byte var10 = 3;
-            if(var9 <= var4 + 3) {
-               var10 = 0;
+         int var14;
+         int var15;
+         int var16;
+         for(var12 = var4; var12 <= var4 + 1 + var10; ++var12) {
+            byte var13 = 3;
+            if(var12 <= var4 + 3) {
+               var13 = 0;
             }
 
-            for(var11 = var3 - var10; var11 <= var3 + var10 && var8; ++var11) {
-               for(var12 = var5 - var10; var12 <= var5 + var10 && var8; ++var12) {
-                  if(var9 >= 0 && var9 < 256) {
-                     var13 = var1.getBlockId(var11, var9, var12);
-                     if(var13 != 0 && var13 != Block.leaves.blockID) {
-                        var8 = false;
+            for(var14 = var3 - var13; var14 <= var3 + var13 && var11; ++var14) {
+               for(var15 = var5 - var13; var15 <= var5 + var13 && var11; ++var15) {
+                  if(var12 >= 0 && var12 < 256) {
+                     var16 = var1.getTypeId(var14, var12, var15);
+                     if(var16 != 0 && var16 != Block.leaves.blockID) {
+                        var11 = false;
                      }
                   } else {
-                     var8 = false;
+                     var11 = false;
                   }
                }
             }
          }
 
-         if(!var8) {
+         if(!var11) {
             return false;
          } else {
-            var9 = var1.getBlockId(var3, var4 - 1, var5);
-            if(var9 != Block.dirt.blockID && var9 != Block.grass.blockID && var9 != Block.mycelium.blockID) {
+            var12 = var1.getTypeId(var3, var4 - 1, var5);
+            if(var12 != Block.dirt.blockID && var12 != Block.grass.blockID && var12 != Block.mycelium.blockID) {
                return false;
             } else {
-               int var16 = var4 + var7;
-               if(var6 == 1) {
-                  var16 = var4 + var7 - 3;
+               if(var6 == null) {
+                  this.setTypeAndData(var1, var3, var4 - 1, var5, Block.dirt.blockID, 0);
+               } else {
+                  BlockState var20 = var8.getBlockAt(var3, var4 - 1, var5).getState();
+                  var20.setTypeId(Block.dirt.blockID);
+                  var6.getBlocks().add(var20);
+               }
+
+               int var21 = var4 + var10;
+               if(var9 == 1) {
+                  var21 = var4 + var10 - 3;
                }
 
-               for(var11 = var16; var11 <= var4 + var7; ++var11) {
-                  var12 = 1;
-                  if(var11 < var4 + var7) {
-                     ++var12;
+               for(var14 = var21; var14 <= var4 + var10; ++var14) {
+                  var15 = 1;
+                  if(var14 < var4 + var10) {
+                     ++var15;
                   }
 
-                  if(var6 == 0) {
-                     var12 = 3;
+                  if(var9 == 0) {
+                     var15 = 3;
                   }
 
-                  for(var13 = var3 - var12; var13 <= var3 + var12; ++var13) {
-                     for(int var14 = var5 - var12; var14 <= var5 + var12; ++var14) {
-                        int var15 = 5;
-                        if(var13 == var3 - var12) {
-                           --var15;
+                  for(var16 = var3 - var15; var16 <= var3 + var15; ++var16) {
+                     for(int var17 = var5 - var15; var17 <= var5 + var15; ++var17) {
+                        int var18 = 5;
+                        if(var16 == var3 - var15) {
+                           --var18;
                         }
 
-                        if(var13 == var3 + var12) {
-                           ++var15;
+                        if(var16 == var3 + var15) {
+                           ++var18;
                         }
 
-                        if(var14 == var5 - var12) {
-                           var15 -= 3;
+                        if(var17 == var5 - var15) {
+                           var18 -= 3;
                         }
 
-                        if(var14 == var5 + var12) {
-                           var15 += 3;
+                        if(var17 == var5 + var15) {
+                           var18 += 3;
                         }
 
-                        if(var6 == 0 || var11 < var4 + var7) {
-                           if((var13 == var3 - var12 || var13 == var3 + var12) && (var14 == var5 - var12 || var14 == var5 + var12)) {
+                        if(var9 == 0 || var14 < var4 + var10) {
+                           if((var16 == var3 - var15 || var16 == var3 + var15) && (var17 == var5 - var15 || var17 == var5 + var15)) {
                               continue;
                            }
 
-                           if(var13 == var3 - (var12 - 1) && var14 == var5 - var12) {
-                              var15 = 1;
+                           if(var16 == var3 - (var15 - 1) && var17 == var5 - var15) {
+                              var18 = 1;
                            }
 
-                           if(var13 == var3 - var12 && var14 == var5 - (var12 - 1)) {
-                              var15 = 1;
+                           if(var16 == var3 - var15 && var17 == var5 - (var15 - 1)) {
+                              var18 = 1;
                            }
 
-                           if(var13 == var3 + (var12 - 1) && var14 == var5 - var12) {
-                              var15 = 3;
+                           if(var16 == var3 + (var15 - 1) && var17 == var5 - var15) {
+                              var18 = 3;
                            }
 
-                           if(var13 == var3 + var12 && var14 == var5 - (var12 - 1)) {
-                              var15 = 3;
+                           if(var16 == var3 + var15 && var17 == var5 - (var15 - 1)) {
+                              var18 = 3;
                            }
 
-                           if(var13 == var3 - (var12 - 1) && var14 == var5 + var12) {
-                              var15 = 7;
+                           if(var16 == var3 - (var15 - 1) && var17 == var5 + var15) {
+                              var18 = 7;
                            }
 
-                           if(var13 == var3 - var12 && var14 == var5 + (var12 - 1)) {
-                              var15 = 7;
+                           if(var16 == var3 - var15 && var17 == var5 + (var15 - 1)) {
+                              var18 = 7;
                            }
 
-                           if(var13 == var3 + (var12 - 1) && var14 == var5 + var12) {
-                              var15 = 9;
+                           if(var16 == var3 + (var15 - 1) && var17 == var5 + var15) {
+                              var18 = 9;
                            }
 
-                           if(var13 == var3 + var12 && var14 == var5 + (var12 - 1)) {
-                              var15 = 9;
+                           if(var16 == var3 + var15 && var17 == var5 + (var15 - 1)) {
+                              var18 = 9;
                            }
                         }
 
-                        if(var15 == 5 && var11 < var4 + var7) {
-                           var15 = 0;
+                        if(var18 == 5 && var14 < var4 + var10) {
+                           var18 = 0;
                         }
 
-                        if((var15 != 0 || var4 >= var4 + var7 - 1) && !Block.opaqueCubeLookup[var1.getBlockId(var13, var11, var14)]) {
-                           this.setBlockAndMetadata(var1, var13, var11, var14, Block.mushroomCapBrown.blockID + var6, var15);
+                        if((var18 != 0 || var4 >= var4 + var10 - 1) && !Block.opaqueCubeLookup[var1.getTypeId(var16, var14, var17)]) {
+                           if(var6 == null) {
+                              this.setTypeAndData(var1, var16, var14, var17, Block.mushroomCapBrown.blockID + var9, var18);
+                           } else {
+                              BlockState var19 = var8.getBlockAt(var16, var14, var17).getState();
+                              var19.setTypeId(Block.mushroomCapBrown.blockID + var9);
+                              var19.setData(new MaterialData(Block.mushroomCapBrown.blockID + var9, (byte)var18));
+                              var6.getBlocks().add(var19);
+                           }
                         }
                      }
                   }
                }
 
-               for(var11 = 0; var11 < var7; ++var11) {
-                  var12 = var1.getBlockId(var3, var4 + var11, var5);
-                  if(!Block.opaqueCubeLookup[var12]) {
-                     this.setBlockAndMetadata(var1, var3, var4 + var11, var5, Block.mushroomCapBrown.blockID + var6, 10);
+               for(var14 = 0; var14 < var10; ++var14) {
+                  var15 = var1.getTypeId(var3, var4 + var14, var5);
+                  if(!Block.opaqueCubeLookup[var15]) {
+                     if(var6 == null) {
+                        this.setTypeAndData(var1, var3, var4 + var14, var5, Block.mushroomCapBrown.blockID + var9, 10);
+                     } else {
+                        BlockState var23 = var8.getBlockAt(var3, var4 + var14, var5).getState();
+                        var23.setTypeId(Block.mushroomCapBrown.blockID + var9);
+                        var23.setData(new MaterialData(Block.mushroomCapBrown.blockID + var9, (byte)10));
+                        var6.getBlocks().add(var23);
+                     }
+                  }
+               }
+
+               if(var6 != null) {
+                  Bukkit.getPluginManager().callEvent(var6);
+                  if(!var6.isCancelled()) {
+                     Iterator var22 = var6.getBlocks().iterator();
+
+                     while(var22.hasNext()) {
+                        BlockState var24 = (BlockState)var22.next();
+                        var24.update(true);
+                     }
                   }
                }
 
Binary files mcp-mcdev/net/minecraft/src/WorldGenBigTree.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenBigTree.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenBigTree.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenBigTree.java
--- mcp-mcdev/net/minecraft/src/WorldGenBigTree.java	2012-11-29 21:14:08.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenBigTree.java	2012-11-29 21:40:43.000000000 -0800
@@ -2,15 +2,17 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenBigTree extends WorldGenerator {
+public class WorldGenBigTree extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    static final byte[] otherCoordPairs = new byte[]{(byte)2, (byte)0, (byte)0, (byte)1, (byte)2, (byte)1};
    Random rand = new Random();
-   World worldObj;
+   BlockChangeDelegate worldObj;
    int[] basePos = new int[]{0, 0, 0};
    int heightLimit = 0;
    int height;
@@ -113,11 +115,11 @@
                ++var13;
             } else {
                var11[var9] = var10[var9] + var13;
-               int var16 = this.worldObj.getBlockId(var11[0], var11[1], var11[2]);
+               int var16 = this.worldObj.getTypeId(var11[0], var11[1], var11[2]);
                if(var16 != 0 && var16 != Block.leaves.blockID) {
                   ++var13;
                } else {
-                  this.setBlockAndMetadata(this.worldObj, var11[0], var11[1], var11[2], var6, 0);
+                  this.setTypeAndData(this.worldObj, var11[0], var11[1], var11[2], var6, 0);
                   ++var13;
                }
             }
@@ -203,10 +205,10 @@
                }
             }
 
-            this.setBlockAndMetadata(this.worldObj, var14[0], var14[1], var14[2], var3, var17);
+            this.setTypeAndData(this.worldObj, var14[0], var14[1], var14[2], var3, var17);
          }
-
       }
+
    }
 
    void generateLeaves() {
@@ -297,8 +299,8 @@
             var13[var5] = var1[var5] + var14;
             var13[var6] = MathHelper.floor_double((double)var1[var6] + (double)var14 * var9);
             var13[var7] = MathHelper.floor_double((double)var1[var7] + (double)var14 * var11);
-            int var16 = this.worldObj.getBlockId(var13[0], var13[1], var13[2]);
-            if(var16 != 0 && var16 != Block.leaves.blockID) {
+            int var16 = this.worldObj.getTypeId(var13[0], var13[1], var13[2]);
+            if(var16 != 0 && var16 != Block.leaves.blockID || var13[1] >= 256) {
                break;
             }
          }
@@ -310,7 +312,7 @@
    boolean validTreeLocation() {
       int[] var1 = new int[]{this.basePos[0], this.basePos[1], this.basePos[2]};
       int[] var2 = new int[]{this.basePos[0], this.basePos[1] + this.heightLimit - 1, this.basePos[2]};
-      int var3 = this.worldObj.getBlockId(this.basePos[0], this.basePos[1] - 1, this.basePos[2]);
+      int var3 = this.worldObj.getTypeId(this.basePos[0], this.basePos[1] - 1, this.basePos[2]);
       if(var3 != 2 && var3 != 3) {
          return false;
       } else {
@@ -337,6 +339,10 @@
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       this.worldObj = var1;
       long var6 = var2.nextLong();
       this.rand.setSeed(var6);
Binary files mcp-mcdev/net/minecraft/src/WorldGenForest.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenForest.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenForest.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenForest.java
--- mcp-mcdev/net/minecraft/src/WorldGenForest.java	2012-11-29 21:14:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenForest.java	2012-11-29 21:40:41.000000000 -0800
@@ -2,16 +2,22 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenForest extends WorldGenerator {
+public class WorldGenForest extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    public WorldGenForest(boolean var1) {
       super(var1);
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       int var6 = var2.nextInt(3) + 5;
       boolean var7 = true;
       if(var4 >= 1 && var4 + var6 + 1 <= 256) {
@@ -32,7 +38,7 @@
             for(var10 = var3 - var9; var10 <= var3 + var9 && var7; ++var10) {
                for(var11 = var5 - var9; var11 <= var5 + var9 && var7; ++var11) {
                   if(var8 >= 0 && var8 < 256) {
-                     var12 = var1.getBlockId(var10, var8, var11);
+                     var12 = var1.getTypeId(var10, var8, var11);
                      if(var12 != 0 && var12 != Block.leaves.blockID) {
                         var7 = false;
                      }
@@ -46,9 +52,9 @@
          if(!var7) {
             return false;
          } else {
-            var8 = var1.getBlockId(var3, var4 - 1, var5);
+            var8 = var1.getTypeId(var3, var4 - 1, var5);
             if((var8 == Block.grass.blockID || var8 == Block.dirt.blockID) && var4 < 256 - var6 - 1) {
-               this.setBlock(var1, var3, var4 - 1, var5, Block.dirt.blockID);
+               this.setType(var1, var3, var4 - 1, var5, Block.dirt.blockID);
 
                int var16;
                for(var16 = var4 - 3 + var6; var16 <= var4 + var6; ++var16) {
@@ -60,17 +66,17 @@
 
                      for(int var14 = var5 - var11; var14 <= var5 + var11; ++var14) {
                         int var15 = var14 - var5;
-                        if((Math.abs(var13) != var11 || Math.abs(var15) != var11 || var2.nextInt(2) != 0 && var10 != 0) && !Block.opaqueCubeLookup[var1.getBlockId(var12, var16, var14)]) {
-                           this.setBlockAndMetadata(var1, var12, var16, var14, Block.leaves.blockID, 2);
+                        if((Math.abs(var13) != var11 || Math.abs(var15) != var11 || var2.nextInt(2) != 0 && var10 != 0) && !Block.opaqueCubeLookup[var1.getTypeId(var12, var16, var14)]) {
+                           this.setTypeAndData(var1, var12, var16, var14, Block.leaves.blockID, 2);
                         }
                      }
                   }
                }
 
                for(var16 = 0; var16 < var6; ++var16) {
-                  var10 = var1.getBlockId(var3, var4 + var16, var5);
+                  var10 = var1.getTypeId(var3, var4 + var16, var5);
                   if(var10 == 0 || var10 == Block.leaves.blockID) {
-                     this.setBlockAndMetadata(var1, var3, var4 + var16, var5, Block.wood.blockID, 2);
+                     this.setTypeAndData(var1, var3, var4 + var16, var5, Block.wood.blockID, 2);
                   }
                }
 
Binary files mcp-mcdev/net/minecraft/src/WorldGenHugeTrees.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenHugeTrees.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenHugeTrees.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenHugeTrees.java
--- mcp-mcdev/net/minecraft/src/WorldGenHugeTrees.java	2012-11-29 21:14:05.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenHugeTrees.java	2012-11-29 21:40:40.000000000 -0800
@@ -2,11 +2,13 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.MathHelper;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenHugeTrees extends WorldGenerator {
+public class WorldGenHugeTrees extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    private final int baseHeight;
    private final int woodMetadata;
@@ -21,6 +23,10 @@
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       int var6 = var2.nextInt(3) + this.baseHeight;
       boolean var7 = true;
       if(var4 >= 1 && var4 + var6 + 1 <= 256) {
@@ -41,7 +47,7 @@
             for(var10 = var3 - var9; var10 <= var3 + var9 && var7; ++var10) {
                for(var11 = var5 - var9; var11 <= var5 + var9 && var7; ++var11) {
                   if(var8 >= 0 && var8 < 256) {
-                     var12 = var1.getBlockId(var10, var8, var11);
+                     var12 = var1.getTypeId(var10, var8, var11);
                      if(var12 != 0 && var12 != Block.leaves.blockID && var12 != Block.grass.blockID && var12 != Block.dirt.blockID && var12 != Block.wood.blockID && var12 != Block.sapling.blockID) {
                         var7 = false;
                      }
@@ -55,81 +61,81 @@
          if(!var7) {
             return false;
          } else {
-            var8 = var1.getBlockId(var3, var4 - 1, var5);
+            var8 = var1.getTypeId(var3, var4 - 1, var5);
             if((var8 == Block.grass.blockID || var8 == Block.dirt.blockID) && var4 < 256 - var6 - 1) {
-               var1.setBlock(var3, var4 - 1, var5, Block.dirt.blockID);
-               var1.setBlock(var3 + 1, var4 - 1, var5, Block.dirt.blockID);
-               var1.setBlock(var3, var4 - 1, var5 + 1, Block.dirt.blockID);
-               var1.setBlock(var3 + 1, var4 - 1, var5 + 1, Block.dirt.blockID);
-               this.growLeaves(var1, var3, var5, var4 + var6, 2, var2);
-
-               for(int var14 = var4 + var6 - 2 - var2.nextInt(4); var14 > var4 + var6 / 2; var14 -= 2 + var2.nextInt(4)) {
-                  float var15 = var2.nextFloat() * 3.1415927F * 2.0F;
-                  var11 = var3 + (int)(0.5F + MathHelper.cos(var15) * 4.0F);
-                  var12 = var5 + (int)(0.5F + MathHelper.sin(var15) * 4.0F);
-                  this.growLeaves(var1, var11, var12, var14, 0, var2);
-
-                  for(int var13 = 0; var13 < 5; ++var13) {
-                     var11 = var3 + (int)(1.5F + MathHelper.cos(var15) * (float)var13);
-                     var12 = var5 + (int)(1.5F + MathHelper.sin(var15) * (float)var13);
-                     this.setBlockAndMetadata(var1, var11, var14 - 3 + var13 / 2, var12, Block.wood.blockID, this.woodMetadata);
+               var1.setRawTypeId(var3, var4 - 1, var5, Block.dirt.blockID);
+               var1.setRawTypeId(var3 + 1, var4 - 1, var5, Block.dirt.blockID);
+               var1.setRawTypeId(var3, var4 - 1, var5 + 1, Block.dirt.blockID);
+               var1.setRawTypeId(var3 + 1, var4 - 1, var5 + 1, Block.dirt.blockID);
+               this.a(var1, var3, var5, var4 + var6, 2, var2);
+
+               for(int var15 = var4 + var6 - 2 - var2.nextInt(4); var15 > var4 + var6 / 2; var15 -= 2 + var2.nextInt(4)) {
+                  float var13 = var2.nextFloat() * 3.1415927F * 2.0F;
+                  var11 = var3 + (int)(0.5F + MathHelper.cos(var13) * 4.0F);
+                  var12 = var5 + (int)(0.5F + MathHelper.sin(var13) * 4.0F);
+                  this.a(var1, var11, var12, var15, 0, var2);
+
+                  for(int var14 = 0; var14 < 5; ++var14) {
+                     var11 = var3 + (int)(1.5F + MathHelper.cos(var13) * (float)var14);
+                     var12 = var5 + (int)(1.5F + MathHelper.sin(var13) * (float)var14);
+                     this.setTypeAndData(var1, var11, var15 - 3 + var14 / 2, var12, Block.wood.blockID, this.woodMetadata);
                   }
                }
 
                for(var10 = 0; var10 < var6; ++var10) {
-                  var11 = var1.getBlockId(var3, var4 + var10, var5);
+                  var11 = var1.getTypeId(var3, var4 + var10, var5);
                   if(var11 == 0 || var11 == Block.leaves.blockID) {
-                     this.setBlockAndMetadata(var1, var3, var4 + var10, var5, Block.wood.blockID, this.woodMetadata);
+                     this.setTypeAndData(var1, var3, var4 + var10, var5, Block.wood.blockID, this.woodMetadata);
                      if(var10 > 0) {
-                        if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 - 1, var4 + var10, var5)) {
-                           this.setBlockAndMetadata(var1, var3 - 1, var4 + var10, var5, Block.vine.blockID, 8);
+                        if(var2.nextInt(3) > 0 && var1.isEmpty(var3 - 1, var4 + var10, var5)) {
+                           this.setTypeAndData(var1, var3 - 1, var4 + var10, var5, Block.vine.blockID, 8);
                         }
 
-                        if(var2.nextInt(3) > 0 && var1.isAirBlock(var3, var4 + var10, var5 - 1)) {
-                           this.setBlockAndMetadata(var1, var3, var4 + var10, var5 - 1, Block.vine.blockID, 1);
+                        if(var2.nextInt(3) > 0 && var1.isEmpty(var3, var4 + var10, var5 - 1)) {
+                           this.setTypeAndData(var1, var3, var4 + var10, var5 - 1, Block.vine.blockID, 1);
                         }
                      }
                   }
 
                   if(var10 < var6 - 1) {
-                     var11 = var1.getBlockId(var3 + 1, var4 + var10, var5);
+                     var11 = var1.getTypeId(var3 + 1, var4 + var10, var5);
                      if(var11 == 0 || var11 == Block.leaves.blockID) {
-                        this.setBlockAndMetadata(var1, var3 + 1, var4 + var10, var5, Block.wood.blockID, this.woodMetadata);
+                        this.setTypeAndData(var1, var3 + 1, var4 + var10, var5, Block.wood.blockID, this.woodMetadata);
                         if(var10 > 0) {
-                           if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 + 2, var4 + var10, var5)) {
-                              this.setBlockAndMetadata(var1, var3 + 2, var4 + var10, var5, Block.vine.blockID, 2);
+                           if(var2.nextInt(3) > 0 && var1.isEmpty(var3 + 2, var4 + var10, var5)) {
+                              this.setTypeAndData(var1, var3 + 2, var4 + var10, var5, Block.vine.blockID, 2);
                            }
 
-                           if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 + 1, var4 + var10, var5 - 1)) {
-                              this.setBlockAndMetadata(var1, var3 + 1, var4 + var10, var5 - 1, Block.vine.blockID, 1);
+                           if(var2.nextInt(3) > 0 && var1.isEmpty(var3 + 1, var4 + var10, var5 - 1)) {
+                              this.setTypeAndData(var1, var3 + 1, var4 + var10, var5 - 1, Block.vine.blockID, 1);
                            }
                         }
                      }
 
-                     var11 = var1.getBlockId(var3 + 1, var4 + var10, var5 + 1);
+                     var11 = var1.getTypeId(var3 + 1, var4 + var10, var5 + 1);
                      if(var11 == 0 || var11 == Block.leaves.blockID) {
-                        this.setBlockAndMetadata(var1, var3 + 1, var4 + var10, var5 + 1, Block.wood.blockID, this.woodMetadata);
+                        this.setTypeAndData(var1, var3 + 1, var4 + var10, var5 + 1, Block.wood.blockID, this.woodMetadata);
                         if(var10 > 0) {
-                           if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 + 2, var4 + var10, var5 + 1)) {
-                              this.setBlockAndMetadata(var1, var3 + 2, var4 + var10, var5 + 1, Block.vine.blockID, 2);
+                           if(var2.nextInt(3) > 0 && var1.isEmpty(var3 + 2, var4 + var10, var5 + 1)) {
+                              this.setTypeAndData(var1, var3 + 2, var4 + var10, var5 + 1, Block.vine.blockID, 2);
                            }
 
-                           if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 + 1, var4 + var10, var5 + 2)) {
-                              this.setBlockAndMetadata(var1, var3 + 1, var4 + var10, var5 + 2, Block.vine.blockID, 4);
+                           if(var2.nextInt(3) > 0 && var1.isEmpty(var3 + 1, var4 + var10, var5 + 2)) {
+                              this.setTypeAndData(var1, var3 + 1, var4 + var10, var5 + 2, Block.vine.blockID, 4);
                            }
                         }
                      }
 
-                     var11 = var1.getBlockId(var3, var4 + var10, var5 + 1);
+                     var11 = var1.getTypeId(var3, var4 + var10, var5 + 1);
                      if(var11 == 0 || var11 == Block.leaves.blockID) {
-                        this.setBlockAndMetadata(var1, var3, var4 + var10, var5 + 1, Block.wood.blockID, this.woodMetadata);
+                        this.setTypeAndData(var1, var3, var4 + var10, var5 + 1, Block.wood.blockID, this.woodMetadata);
                         if(var10 > 0) {
-                           if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 - 1, var4 + var10, var5 + 1)) {
-                              this.setBlockAndMetadata(var1, var3 - 1, var4 + var10, var5 + 1, Block.vine.blockID, 8);
+                           if(var2.nextInt(3) > 0 && var1.isEmpty(var3 - 1, var4 + var10, var5 + 1)) {
+                              this.setTypeAndData(var1, var3 - 1, var4 + var10, var5 + 1, Block.vine.blockID, 8);
                            }
 
-                           if(var2.nextInt(3) > 0 && var1.isAirBlock(var3, var4 + var10, var5 + 2)) {
-                              this.setBlockAndMetadata(var1, var3, var4 + var10, var5 + 2, Block.vine.blockID, 4);
+                           if(var2.nextInt(3) > 0 && var1.isEmpty(var3, var4 + var10, var5 + 2)) {
+                              this.setTypeAndData(var1, var3, var4 + var10, var5 + 2, Block.vine.blockID, 4);
                            }
                         }
                      }
@@ -146,7 +152,7 @@
       }
    }
 
-   private void growLeaves(World var1, int var2, int var3, int var4, int var5, Random var6) {
+   private void a(BlockChangeDelegate var1, int var2, int var3, int var4, int var5, Random var6) {
       byte var7 = 2;
 
       for(int var8 = var4 - var7; var8 <= var4; ++var8) {
@@ -158,8 +164,8 @@
 
             for(int var13 = var3 - var10; var13 <= var3 + var10 + 1; ++var13) {
                int var14 = var13 - var3;
-               if((var12 >= 0 || var14 >= 0 || var12 * var12 + var14 * var14 <= var10 * var10) && (var12 <= 0 && var14 <= 0 || var12 * var12 + var14 * var14 <= (var10 + 1) * (var10 + 1)) && (var6.nextInt(4) != 0 || var12 * var12 + var14 * var14 <= (var10 - 1) * (var10 - 1)) && !Block.opaqueCubeLookup[var1.getBlockId(var11, var8, var13)]) {
-                  this.setBlockAndMetadata(var1, var11, var8, var13, Block.leaves.blockID, this.leavesMetadata);
+               if((var12 >= 0 || var14 >= 0 || var12 * var12 + var14 * var14 <= var10 * var10) && (var12 <= 0 && var14 <= 0 || var12 * var12 + var14 * var14 <= (var10 + 1) * (var10 + 1)) && (var6.nextInt(4) != 0 || var12 * var12 + var14 * var14 <= (var10 - 1) * (var10 - 1)) && !Block.opaqueCubeLookup[var1.getTypeId(var11, var8, var13)]) {
+                  this.setTypeAndData(var1, var11, var8, var13, Block.leaves.blockID, this.leavesMetadata);
                }
             }
          }
Binary files mcp-mcdev/net/minecraft/src/WorldGenShrub.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenShrub.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenShrub.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenShrub.java
--- mcp-mcdev/net/minecraft/src/WorldGenShrub.java	2012-11-29 21:14:00.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenShrub.java	2012-11-29 21:40:37.000000000 -0800
@@ -2,10 +2,12 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenShrub extends WorldGenerator {
+public class WorldGenShrub extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    private int field_76527_a;
    private int field_76526_b;
@@ -17,15 +19,21 @@
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
-      int var15;
-      for(boolean var6 = false; ((var15 = var1.getBlockId(var3, var4, var5)) == 0 || var15 == Block.leaves.blockID) && var4 > 0; --var4) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
+      int var7;
+      for(boolean var6 = false; ((var7 = var1.getTypeId(var3, var4, var5)) == 0 || var7 == Block.leaves.blockID) && var4 > 0; --var4) {
          ;
       }
 
-      int var7 = var1.getBlockId(var3, var4, var5);
-      if(var7 == Block.dirt.blockID || var7 == Block.grass.blockID) {
+      int var15 = var1.getTypeId(var3, var4, var5);
+      if(var15 != Block.dirt.blockID && var15 != Block.grass.blockID) {
+         return false;
+      } else {
          ++var4;
-         this.setBlockAndMetadata(var1, var3, var4, var5, Block.wood.blockID, this.field_76526_b);
+         this.setTypeAndData(var1, var3, var4, var5, Block.wood.blockID, this.field_76526_b);
 
          for(int var8 = var4; var8 <= var4 + 2; ++var8) {
             int var9 = var8 - var4;
@@ -36,14 +44,14 @@
 
                for(int var13 = var5 - var10; var13 <= var5 + var10; ++var13) {
                   int var14 = var13 - var5;
-                  if((Math.abs(var12) != var10 || Math.abs(var14) != var10 || var2.nextInt(2) != 0) && !Block.opaqueCubeLookup[var1.getBlockId(var11, var8, var13)]) {
-                     this.setBlockAndMetadata(var1, var11, var8, var13, Block.leaves.blockID, this.field_76527_a);
+                  if((Math.abs(var12) != var10 || Math.abs(var14) != var10 || var2.nextInt(2) != 0) && !Block.opaqueCubeLookup[var1.getTypeId(var11, var8, var13)]) {
+                     this.setTypeAndData(var1, var11, var8, var13, Block.leaves.blockID, this.field_76527_a);
                   }
                }
             }
          }
-      }
 
-      return true;
+         return true;
+      }
    }
 }
Binary files mcp-mcdev/net/minecraft/src/WorldGenSwamp.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenSwamp.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenSwamp.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenSwamp.java
--- mcp-mcdev/net/minecraft/src/WorldGenSwamp.java	2012-11-29 21:14:00.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenSwamp.java	2012-11-29 21:40:36.000000000 -0800
@@ -2,15 +2,21 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.Material;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenSwamp extends WorldGenerator {
+public class WorldGenSwamp extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       int var6;
-      for(var6 = var2.nextInt(4) + 5; var1.getBlockMaterial(var3, var4 - 1, var5) == Material.water; --var4) {
+      for(var6 = var2.nextInt(4) + 5; var1.getTypeId(var3, var4 - 1, var5) != 0 && Block.blocksList[var1.getTypeId(var3, var4 - 1, var5)].blockMaterial == Material.water; --var4) {
          ;
       }
 
@@ -33,7 +39,7 @@
             for(var10 = var3 - var9; var10 <= var3 + var9 && var7; ++var10) {
                for(var11 = var5 - var9; var11 <= var5 + var9 && var7; ++var11) {
                   if(var8 >= 0 && var8 < 128) {
-                     var12 = var1.getBlockId(var10, var8, var11);
+                     var12 = var1.getTypeId(var10, var8, var11);
                      if(var12 != 0 && var12 != Block.leaves.blockID) {
                         if(var12 != Block.waterStill.blockID && var12 != Block.waterMoving.blockID) {
                            var7 = false;
@@ -51,56 +57,56 @@
          if(!var7) {
             return false;
          } else {
-            var8 = var1.getBlockId(var3, var4 - 1, var5);
+            var8 = var1.getTypeId(var3, var4 - 1, var5);
             if((var8 == Block.grass.blockID || var8 == Block.dirt.blockID) && var4 < 128 - var6 - 1) {
-               this.setBlock(var1, var3, var4 - 1, var5, Block.dirt.blockID);
+               this.setType(var1, var3, var4 - 1, var5, Block.dirt.blockID);
 
                int var13;
                int var16;
-               for(var16 = var4 - 3 + var6; var16 <= var4 + var6; ++var16) {
-                  var10 = var16 - (var4 + var6);
+               for(var13 = var4 - 3 + var6; var13 <= var4 + var6; ++var13) {
+                  var10 = var13 - (var4 + var6);
                   var11 = 2 - var10 / 2;
 
                   for(var12 = var3 - var11; var12 <= var3 + var11; ++var12) {
-                     var13 = var12 - var3;
+                     var16 = var12 - var3;
 
                      for(int var14 = var5 - var11; var14 <= var5 + var11; ++var14) {
                         int var15 = var14 - var5;
-                        if((Math.abs(var13) != var11 || Math.abs(var15) != var11 || var2.nextInt(2) != 0 && var10 != 0) && !Block.opaqueCubeLookup[var1.getBlockId(var12, var16, var14)]) {
-                           this.setBlock(var1, var12, var16, var14, Block.leaves.blockID);
+                        if((Math.abs(var16) != var11 || Math.abs(var15) != var11 || var2.nextInt(2) != 0 && var10 != 0) && !Block.opaqueCubeLookup[var1.getTypeId(var12, var13, var14)]) {
+                           this.setType(var1, var12, var13, var14, Block.leaves.blockID);
                         }
                      }
                   }
                }
 
-               for(var16 = 0; var16 < var6; ++var16) {
-                  var10 = var1.getBlockId(var3, var4 + var16, var5);
+               for(var13 = 0; var13 < var6; ++var13) {
+                  var10 = var1.getTypeId(var3, var4 + var13, var5);
                   if(var10 == 0 || var10 == Block.leaves.blockID || var10 == Block.waterMoving.blockID || var10 == Block.waterStill.blockID) {
-                     this.setBlock(var1, var3, var4 + var16, var5, Block.wood.blockID);
+                     this.setType(var1, var3, var4 + var13, var5, Block.wood.blockID);
                   }
                }
 
-               for(var16 = var4 - 3 + var6; var16 <= var4 + var6; ++var16) {
-                  var10 = var16 - (var4 + var6);
+               for(var13 = var4 - 3 + var6; var13 <= var4 + var6; ++var13) {
+                  var10 = var13 - (var4 + var6);
                   var11 = 2 - var10 / 2;
 
                   for(var12 = var3 - var11; var12 <= var3 + var11; ++var12) {
-                     for(var13 = var5 - var11; var13 <= var5 + var11; ++var13) {
-                        if(var1.getBlockId(var12, var16, var13) == Block.leaves.blockID) {
-                           if(var2.nextInt(4) == 0 && var1.getBlockId(var12 - 1, var16, var13) == 0) {
-                              this.generateVines(var1, var12 - 1, var16, var13, 8);
+                     for(var16 = var5 - var11; var16 <= var5 + var11; ++var16) {
+                        if(var1.getTypeId(var12, var13, var16) == Block.leaves.blockID) {
+                           if(var2.nextInt(4) == 0 && var1.getTypeId(var12 - 1, var13, var16) == 0) {
+                              this.b(var1, var12 - 1, var13, var16, 8);
                            }
 
-                           if(var2.nextInt(4) == 0 && var1.getBlockId(var12 + 1, var16, var13) == 0) {
-                              this.generateVines(var1, var12 + 1, var16, var13, 2);
+                           if(var2.nextInt(4) == 0 && var1.getTypeId(var12 + 1, var13, var16) == 0) {
+                              this.b(var1, var12 + 1, var13, var16, 2);
                            }
 
-                           if(var2.nextInt(4) == 0 && var1.getBlockId(var12, var16, var13 - 1) == 0) {
-                              this.generateVines(var1, var12, var16, var13 - 1, 1);
+                           if(var2.nextInt(4) == 0 && var1.getTypeId(var12, var13, var16 - 1) == 0) {
+                              this.b(var1, var12, var13, var16 - 1, 1);
                            }
 
-                           if(var2.nextInt(4) == 0 && var1.getBlockId(var12, var16, var13 + 1) == 0) {
-                              this.generateVines(var1, var12, var16, var13 + 1, 4);
+                           if(var2.nextInt(4) == 0 && var1.getTypeId(var12, var13, var16 + 1) == 0) {
+                              this.b(var1, var12, var13, var16 + 1, 4);
                            }
                         }
                      }
@@ -117,17 +123,17 @@
       }
    }
 
-   private void generateVines(World var1, int var2, int var3, int var4, int var5) {
-      this.setBlockAndMetadata(var1, var2, var3, var4, Block.vine.blockID, var5);
+   private void b(BlockChangeDelegate var1, int var2, int var3, int var4, int var5) {
+      this.setTypeAndData(var1, var2, var3, var4, Block.vine.blockID, var5);
       int var6 = 4;
 
       while(true) {
          --var3;
-         if(var1.getBlockId(var2, var3, var4) != 0 || var6 <= 0) {
+         if(var1.getTypeId(var2, var3, var4) != 0 || var6 <= 0) {
             return;
          }
 
-         this.setBlockAndMetadata(var1, var2, var3, var4, Block.vine.blockID, var5);
+         this.setTypeAndData(var1, var2, var3, var4, Block.vine.blockID, var5);
          --var6;
       }
    }
Binary files mcp-mcdev/net/minecraft/src/WorldGenTaiga1.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTaiga1.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenTaiga1.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTaiga1.java
--- mcp-mcdev/net/minecraft/src/WorldGenTaiga1.java	2012-11-29 21:13:59.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTaiga1.java	2012-11-29 21:40:36.000000000 -0800
@@ -2,12 +2,18 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenTaiga1 extends WorldGenerator {
+public class WorldGenTaiga1 extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       int var6 = var2.nextInt(5) + 7;
       int var7 = var6 - var2.nextInt(2) - 3;
       int var8 = var6 - var7;
@@ -18,20 +24,20 @@
          int var13;
          int var14;
          int var15;
-         int var18;
+         int var16;
          for(var11 = var4; var11 <= var4 + 1 + var6 && var10; ++var11) {
             boolean var12 = true;
             if(var11 - var4 < var7) {
-               var18 = 0;
+               var13 = 0;
             } else {
-               var18 = var9;
+               var13 = var9;
             }
 
-            for(var13 = var3 - var18; var13 <= var3 + var18 && var10; ++var13) {
-               for(var14 = var5 - var18; var14 <= var5 + var18 && var10; ++var14) {
+            for(var14 = var3 - var13; var14 <= var3 + var13 && var10; ++var14) {
+               for(var15 = var5 - var13; var15 <= var5 + var13 && var10; ++var15) {
                   if(var11 >= 0 && var11 < 128) {
-                     var15 = var1.getBlockId(var13, var11, var14);
-                     if(var15 != 0 && var15 != Block.leaves.blockID) {
+                     var16 = var1.getTypeId(var14, var11, var15);
+                     if(var16 != 0 && var16 != Block.leaves.blockID) {
                         var10 = false;
                      }
                   } else {
@@ -44,34 +50,34 @@
          if(!var10) {
             return false;
          } else {
-            var11 = var1.getBlockId(var3, var4 - 1, var5);
+            var11 = var1.getTypeId(var3, var4 - 1, var5);
             if((var11 == Block.grass.blockID || var11 == Block.dirt.blockID) && var4 < 128 - var6 - 1) {
-               this.setBlock(var1, var3, var4 - 1, var5, Block.dirt.blockID);
-               var18 = 0;
+               this.setType(var1, var3, var4 - 1, var5, Block.dirt.blockID);
+               var13 = 0;
 
-               for(var13 = var4 + var6; var13 >= var4 + var7; --var13) {
-                  for(var14 = var3 - var18; var14 <= var3 + var18; ++var14) {
-                     var15 = var14 - var3;
-
-                     for(int var16 = var5 - var18; var16 <= var5 + var18; ++var16) {
-                        int var17 = var16 - var5;
-                        if((Math.abs(var15) != var18 || Math.abs(var17) != var18 || var18 <= 0) && !Block.opaqueCubeLookup[var1.getBlockId(var14, var13, var16)]) {
-                           this.setBlockAndMetadata(var1, var14, var13, var16, Block.leaves.blockID, 1);
+               for(var14 = var4 + var6; var14 >= var4 + var7; --var14) {
+                  for(var15 = var3 - var13; var15 <= var3 + var13; ++var15) {
+                     var16 = var15 - var3;
+
+                     for(int var18 = var5 - var13; var18 <= var5 + var13; ++var18) {
+                        int var17 = var18 - var5;
+                        if((Math.abs(var16) != var13 || Math.abs(var17) != var13 || var13 <= 0) && !Block.opaqueCubeLookup[var1.getTypeId(var15, var14, var18)]) {
+                           this.setTypeAndData(var1, var15, var14, var18, Block.leaves.blockID, 1);
                         }
                      }
                   }
 
-                  if(var18 >= 1 && var13 == var4 + var7 + 1) {
-                     --var18;
-                  } else if(var18 < var9) {
-                     ++var18;
+                  if(var13 >= 1 && var14 == var4 + var7 + 1) {
+                     --var13;
+                  } else if(var13 < var9) {
+                     ++var13;
                   }
                }
 
-               for(var13 = 0; var13 < var6 - 1; ++var13) {
-                  var14 = var1.getBlockId(var3, var4 + var13, var5);
-                  if(var14 == 0 || var14 == Block.leaves.blockID) {
-                     this.setBlockAndMetadata(var1, var3, var4 + var13, var5, Block.wood.blockID, 1);
+               for(var14 = 0; var14 < var6 - 1; ++var14) {
+                  var15 = var1.getTypeId(var3, var4 + var14, var5);
+                  if(var15 == 0 || var15 == Block.leaves.blockID) {
+                     this.setTypeAndData(var1, var3, var4 + var14, var5, Block.wood.blockID, 1);
                   }
                }
 
Binary files mcp-mcdev/net/minecraft/src/WorldGenTaiga2.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTaiga2.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenTaiga2.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTaiga2.java
--- mcp-mcdev/net/minecraft/src/WorldGenTaiga2.java	2012-11-29 21:13:58.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTaiga2.java	2012-11-29 21:40:35.000000000 -0800
@@ -2,16 +2,22 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenTaiga2 extends WorldGenerator {
+public class WorldGenTaiga2 extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    public WorldGenTaiga2(boolean var1) {
       super(var1);
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       int var6 = var2.nextInt(4) + 6;
       int var7 = 1 + var2.nextInt(2);
       int var8 = var6 - var7;
@@ -20,21 +26,22 @@
       if(var4 >= 1 && var4 + var6 + 1 <= 256) {
          int var11;
          int var13;
+         int var14;
          int var15;
-         int var21;
+         int var16;
          for(var11 = var4; var11 <= var4 + 1 + var6 && var10; ++var11) {
             boolean var12 = true;
             if(var11 - var4 < var7) {
-               var21 = 0;
+               var13 = 0;
             } else {
-               var21 = var9;
+               var13 = var9;
             }
 
-            for(var13 = var3 - var21; var13 <= var3 + var21 && var10; ++var13) {
-               for(int var14 = var5 - var21; var14 <= var5 + var21 && var10; ++var14) {
+            for(var14 = var3 - var13; var14 <= var3 + var13 && var10; ++var14) {
+               for(var15 = var5 - var13; var15 <= var5 + var13 && var10; ++var15) {
                   if(var11 >= 0 && var11 < 256) {
-                     var15 = var1.getBlockId(var13, var11, var14);
-                     if(var15 != 0 && var15 != Block.leaves.blockID) {
+                     var16 = var1.getTypeId(var14, var11, var15);
+                     if(var16 != 0 && var16 != Block.leaves.blockID) {
                         var10 = false;
                      }
                   } else {
@@ -47,47 +54,46 @@
          if(!var10) {
             return false;
          } else {
-            var11 = var1.getBlockId(var3, var4 - 1, var5);
+            var11 = var1.getTypeId(var3, var4 - 1, var5);
             if((var11 == Block.grass.blockID || var11 == Block.dirt.blockID) && var4 < 256 - var6 - 1) {
-               this.setBlock(var1, var3, var4 - 1, var5, Block.dirt.blockID);
-               var21 = var2.nextInt(2);
-               var13 = 1;
-               byte var22 = 0;
+               this.setType(var1, var3, var4 - 1, var5, Block.dirt.blockID);
+               var13 = var2.nextInt(2);
+               var14 = 1;
+               byte var21 = 0;
 
                int var17;
-               int var16;
-               for(var15 = 0; var15 <= var8; ++var15) {
-                  var16 = var4 + var6 - var15;
+               for(var16 = 0; var16 <= var8; ++var16) {
+                  var17 = var4 + var6 - var16;
 
-                  for(var17 = var3 - var21; var17 <= var3 + var21; ++var17) {
-                     int var18 = var17 - var3;
+                  for(var15 = var3 - var13; var15 <= var3 + var13; ++var15) {
+                     int var18 = var15 - var3;
 
-                     for(int var19 = var5 - var21; var19 <= var5 + var21; ++var19) {
+                     for(int var19 = var5 - var13; var19 <= var5 + var13; ++var19) {
                         int var20 = var19 - var5;
-                        if((Math.abs(var18) != var21 || Math.abs(var20) != var21 || var21 <= 0) && !Block.opaqueCubeLookup[var1.getBlockId(var17, var16, var19)]) {
-                           this.setBlockAndMetadata(var1, var17, var16, var19, Block.leaves.blockID, 1);
+                        if((Math.abs(var18) != var13 || Math.abs(var20) != var13 || var13 <= 0) && !Block.opaqueCubeLookup[var1.getTypeId(var15, var17, var19)]) {
+                           this.setTypeAndData(var1, var15, var17, var19, Block.leaves.blockID, 1);
                         }
                      }
                   }
 
-                  if(var21 >= var13) {
-                     var21 = var22;
-                     var22 = 1;
-                     ++var13;
-                     if(var13 > var9) {
-                        var13 = var9;
+                  if(var13 >= var14) {
+                     var13 = var21;
+                     var21 = 1;
+                     ++var14;
+                     if(var14 > var9) {
+                        var14 = var9;
                      }
                   } else {
-                     ++var21;
+                     ++var13;
                   }
                }
 
-               var15 = var2.nextInt(3);
+               var16 = var2.nextInt(3);
 
-               for(var16 = 0; var16 < var6 - var15; ++var16) {
-                  var17 = var1.getBlockId(var3, var4 + var16, var5);
-                  if(var17 == 0 || var17 == Block.leaves.blockID) {
-                     this.setBlockAndMetadata(var1, var3, var4 + var16, var5, Block.wood.blockID, 1);
+               for(var17 = 0; var17 < var6 - var16; ++var17) {
+                  var15 = var1.getTypeId(var3, var4 + var17, var5);
+                  if(var15 == 0 || var15 == Block.leaves.blockID) {
+                     this.setTypeAndData(var1, var3, var4 + var17, var5, Block.wood.blockID, 1);
                   }
                }
 
Binary files mcp-mcdev/net/minecraft/src/WorldGenTrees.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTrees.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenTrees.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTrees.java
--- mcp-mcdev/net/minecraft/src/WorldGenTrees.java	2012-11-29 21:13:57.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenTrees.java	2012-11-29 21:40:35.000000000 -0800
@@ -2,11 +2,13 @@
 
 import java.util.Random;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockSapling;
 import net.minecraft.src.Direction;
 import net.minecraft.src.World;
 import net.minecraft.src.WorldGenerator;
+import org.bukkit.BlockChangeDelegate;
 
-public class WorldGenTrees extends WorldGenerator {
+public class WorldGenTrees extends WorldGenerator implements BlockSapling.TreeGenerator {
 
    private final int minTreeHeight;
    private final boolean vinesGrow;
@@ -27,6 +29,10 @@
    }
 
    public boolean generate(World var1, Random var2, int var3, int var4, int var5) {
+      return this.generate((BlockChangeDelegate)var1, var2, var3, var4, var5);
+   }
+
+   public boolean generate(BlockChangeDelegate var1, Random var2, int var3, int var4, int var5) {
       int var6 = var2.nextInt(3) + this.minTreeHeight;
       boolean var7 = true;
       if(var4 >= 1 && var4 + var6 + 1 <= 256) {
@@ -47,7 +53,7 @@
             for(int var10 = var3 - var9; var10 <= var3 + var9 && var7; ++var10) {
                for(var11 = var5 - var9; var11 <= var5 + var9 && var7; ++var11) {
                   if(var8 >= 0 && var8 < 256) {
-                     var12 = var1.getBlockId(var10, var8, var11);
+                     var12 = var1.getTypeId(var10, var8, var11);
                      if(var12 != 0 && var12 != Block.leaves.blockID && var12 != Block.grass.blockID && var12 != Block.dirt.blockID && var12 != Block.wood.blockID) {
                         var7 = false;
                      }
@@ -61,9 +67,9 @@
          if(!var7) {
             return false;
          } else {
-            var8 = var1.getBlockId(var3, var4 - 1, var5);
+            var8 = var1.getTypeId(var3, var4 - 1, var5);
             if((var8 == Block.grass.blockID || var8 == Block.dirt.blockID) && var4 < 256 - var6 - 1) {
-               this.setBlock(var1, var3, var4 - 1, var5, Block.dirt.blockID);
+               this.setType(var1, var3, var4 - 1, var5, Block.dirt.blockID);
                var9 = 3;
                byte var18 = 0;
 
@@ -79,32 +85,32 @@
 
                      for(int var16 = var5 - var13; var16 <= var5 + var13; ++var16) {
                         int var17 = var16 - var5;
-                        if((Math.abs(var15) != var13 || Math.abs(var17) != var13 || var2.nextInt(2) != 0 && var12 != 0) && var1.isAirBlock(var14, var11, var16)) {
-                           this.setBlockAndMetadata(var1, var14, var11, var16, Block.leaves.blockID, this.metaLeaves);
+                        if((Math.abs(var15) != var13 || Math.abs(var17) != var13 || var2.nextInt(2) != 0 && var12 != 0) && var1.isEmpty(var14, var11, var16)) {
+                           this.setTypeAndData(var1, var14, var11, var16, Block.leaves.blockID, this.metaLeaves);
                         }
                      }
                   }
                }
 
                for(var11 = 0; var11 < var6; ++var11) {
-                  var12 = var1.getBlockId(var3, var4 + var11, var5);
+                  var12 = var1.getTypeId(var3, var4 + var11, var5);
                   if(var12 == 0 || var12 == Block.leaves.blockID) {
-                     this.setBlockAndMetadata(var1, var3, var4 + var11, var5, Block.wood.blockID, this.metaWood);
+                     this.setTypeAndData(var1, var3, var4 + var11, var5, Block.wood.blockID, this.metaWood);
                      if(this.vinesGrow && var11 > 0) {
-                        if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 - 1, var4 + var11, var5)) {
-                           this.setBlockAndMetadata(var1, var3 - 1, var4 + var11, var5, Block.vine.blockID, 8);
+                        if(var2.nextInt(3) > 0 && var1.isEmpty(var3 - 1, var4 + var11, var5)) {
+                           this.setTypeAndData(var1, var3 - 1, var4 + var11, var5, Block.vine.blockID, 8);
                         }
 
-                        if(var2.nextInt(3) > 0 && var1.isAirBlock(var3 + 1, var4 + var11, var5)) {
-                           this.setBlockAndMetadata(var1, var3 + 1, var4 + var11, var5, Block.vine.blockID, 2);
+                        if(var2.nextInt(3) > 0 && var1.isEmpty(var3 + 1, var4 + var11, var5)) {
+                           this.setTypeAndData(var1, var3 + 1, var4 + var11, var5, Block.vine.blockID, 2);
                         }
 
-                        if(var2.nextInt(3) > 0 && var1.isAirBlock(var3, var4 + var11, var5 - 1)) {
-                           this.setBlockAndMetadata(var1, var3, var4 + var11, var5 - 1, Block.vine.blockID, 1);
+                        if(var2.nextInt(3) > 0 && var1.isEmpty(var3, var4 + var11, var5 - 1)) {
+                           this.setTypeAndData(var1, var3, var4 + var11, var5 - 1, Block.vine.blockID, 1);
                         }
 
-                        if(var2.nextInt(3) > 0 && var1.isAirBlock(var3, var4 + var11, var5 + 1)) {
-                           this.setBlockAndMetadata(var1, var3, var4 + var11, var5 + 1, Block.vine.blockID, 4);
+                        if(var2.nextInt(3) > 0 && var1.isEmpty(var3, var4 + var11, var5 + 1)) {
+                           this.setTypeAndData(var1, var3, var4 + var11, var5 + 1, Block.vine.blockID, 4);
                         }
                      }
                   }
@@ -117,21 +123,21 @@
 
                      for(var14 = var3 - var13; var14 <= var3 + var13; ++var14) {
                         for(var15 = var5 - var13; var15 <= var5 + var13; ++var15) {
-                           if(var1.getBlockId(var14, var11, var15) == Block.leaves.blockID) {
-                              if(var2.nextInt(4) == 0 && var1.getBlockId(var14 - 1, var11, var15) == 0) {
-                                 this.growVines(var1, var14 - 1, var11, var15, 8);
+                           if(var1.getTypeId(var14, var11, var15) == Block.leaves.blockID) {
+                              if(var2.nextInt(4) == 0 && var1.getTypeId(var14 - 1, var11, var15) == 0) {
+                                 this.b(var1, var14 - 1, var11, var15, 8);
                               }
 
-                              if(var2.nextInt(4) == 0 && var1.getBlockId(var14 + 1, var11, var15) == 0) {
-                                 this.growVines(var1, var14 + 1, var11, var15, 2);
+                              if(var2.nextInt(4) == 0 && var1.getTypeId(var14 + 1, var11, var15) == 0) {
+                                 this.b(var1, var14 + 1, var11, var15, 2);
                               }
 
-                              if(var2.nextInt(4) == 0 && var1.getBlockId(var14, var11, var15 - 1) == 0) {
-                                 this.growVines(var1, var14, var11, var15 - 1, 1);
+                              if(var2.nextInt(4) == 0 && var1.getTypeId(var14, var11, var15 - 1) == 0) {
+                                 this.b(var1, var14, var11, var15 - 1, 1);
                               }
 
-                              if(var2.nextInt(4) == 0 && var1.getBlockId(var14, var11, var15 + 1) == 0) {
-                                 this.growVines(var1, var14, var11, var15 + 1, 4);
+                              if(var2.nextInt(4) == 0 && var1.getTypeId(var14, var11, var15 + 1) == 0) {
+                                 this.b(var1, var14, var11, var15 + 1, 4);
                               }
                            }
                         }
@@ -143,7 +149,7 @@
                         for(var12 = 0; var12 < 4; ++var12) {
                            if(var2.nextInt(4 - var11) == 0) {
                               var13 = var2.nextInt(3);
-                              this.setBlockAndMetadata(var1, var3 + Direction.offsetX[Direction.footInvisibleFaceRemap[var12]], var4 + var6 - 5 + var11, var5 + Direction.offsetZ[Direction.footInvisibleFaceRemap[var12]], Block.cocoaPlant.blockID, var13 << 2 | var12);
+                              this.setTypeAndData(var1, var3 + Direction.offsetX[Direction.footInvisibleFaceRemap[var12]], var4 + var6 - 5 + var11, var5 + Direction.offsetZ[Direction.footInvisibleFaceRemap[var12]], Block.cocoaPlant.blockID, var13 << 2 | var12);
                            }
                         }
                      }
@@ -160,17 +166,17 @@
       }
    }
 
-   private void growVines(World var1, int var2, int var3, int var4, int var5) {
-      this.setBlockAndMetadata(var1, var2, var3, var4, Block.vine.blockID, var5);
+   private void b(BlockChangeDelegate var1, int var2, int var3, int var4, int var5) {
+      this.setTypeAndData(var1, var2, var3, var4, Block.vine.blockID, var5);
       int var6 = 4;
 
       while(true) {
          --var3;
-         if(var1.getBlockId(var2, var3, var4) != 0 || var6 <= 0) {
+         if(var1.getTypeId(var2, var3, var4) != 0 || var6 <= 0) {
             return;
          }
 
-         this.setBlockAndMetadata(var1, var2, var3, var4, Block.vine.blockID, var5);
+         this.setTypeAndData(var1, var2, var3, var4, Block.vine.blockID, var5);
          --var6;
       }
    }
Binary files mcp-mcdev/net/minecraft/src/WorldGenerator.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenerator.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldGenerator.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenerator.java
--- mcp-mcdev/net/minecraft/src/WorldGenerator.java	2012-11-29 21:14:06.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldGenerator.java	2012-11-29 21:40:41.000000000 -0800
@@ -2,6 +2,7 @@
 
 import java.util.Random;
 import net.minecraft.src.World;
+import org.bukkit.BlockChangeDelegate;
 
 public abstract class WorldGenerator {
 
@@ -21,15 +22,15 @@
 
    public void setScale(double var1, double var3, double var5) {}
 
-   protected void setBlock(World var1, int var2, int var3, int var4, int var5) {
-      this.setBlockAndMetadata(var1, var2, var3, var4, var5, 0);
+   protected void setType(BlockChangeDelegate var1, int var2, int var3, int var4, int var5) {
+      this.setTypeAndData(var1, var2, var3, var4, var5, 0);
    }
 
-   protected void setBlockAndMetadata(World var1, int var2, int var3, int var4, int var5, int var6) {
+   protected void setTypeAndData(BlockChangeDelegate var1, int var2, int var3, int var4, int var5, int var6) {
       if(this.doBlockNotify) {
-         var1.setBlockAndMetadataWithNotify(var2, var3, var4, var5, var6);
+         var1.setTypeIdAndData(var2, var3, var4, var5, var6);
       } else {
-         var1.setBlockAndMetadata(var2, var3, var4, var5, var6);
+         var1.setRawTypeIdAndData(var2, var3, var4, var5, var6);
       }
 
    }
Binary files mcp-mcdev/net/minecraft/src/WorldManager.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldManager.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldManager.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldManager.java
--- mcp-mcdev/net/minecraft/src/WorldManager.java	2012-11-29 21:13:55.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldManager.java	2012-11-29 21:40:33.000000000 -0800
@@ -14,7 +14,7 @@
 public class WorldManager implements IWorldAccess {
 
    private MinecraftServer mcServer;
-   private WorldServer theWorldServer;
+   public WorldServer theWorldServer;
 
 
    public WorldManager(MinecraftServer var1, WorldServer var2) {
@@ -32,8 +32,12 @@
       this.theWorldServer.getEntityTracker().untrackEntity(var1);
    }
 
+   public void a(String var1, double var2, double var4, double var6, float var8, float var9, Entity var10) {
+      this.mcServer.getConfigurationManager().sendPacketNearby(var2, var4, var6, var8 > 1.0F?(double)(16.0F * var8):16.0D, this.theWorldServer.dimension, new Packet62LevelSound(var1, var2, var4, var6, var8, var9), var10);
+   }
+
    public void playSound(String var1, double var2, double var4, double var6, float var8, float var9) {
-      this.mcServer.getConfigurationManager().sendPacketToPlayersAroundPoint(var2, var4, var6, var8 > 1.0F?(double)(16.0F * var8):16.0D, this.theWorldServer.provider.dimensionId, new Packet62LevelSound(var1, var2, var4, var6, var8, var9));
+      this.mcServer.getConfigurationManager().sendPacketToPlayersAroundPoint(var2, var4, var6, var8 > 1.0F?(double)(16.0F * var8):16.0D, this.theWorldServer.dimension, new Packet62LevelSound(var1, var2, var4, var6, var8, var9));
    }
 
    public void func_85102_a(EntityPlayer var1, String var2, double var3, double var5, double var7, float var9, float var10) {
@@ -51,7 +55,7 @@
    public void playRecord(String var1, int var2, int var3, int var4) {}
 
    public void playAuxSFX(EntityPlayer var1, int var2, int var3, int var4, int var5, int var6) {
-      this.mcServer.getConfigurationManager().sendToAllNearExcept(var1, (double)var3, (double)var4, (double)var5, 64.0D, this.theWorldServer.provider.dimensionId, new Packet61DoorChange(var2, var3, var4, var5, var6, false));
+      this.mcServer.getConfigurationManager().sendToAllNearExcept(var1, (double)var3, (double)var4, (double)var5, 64.0D, this.theWorldServer.dimension, new Packet61DoorChange(var2, var3, var4, var5, var6, false));
    }
 
    public void broadcastSound(int var1, int var2, int var3, int var4, int var5) {
Binary files mcp-mcdev/net/minecraft/src/WorldServer.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldServer.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldServer.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldServer.java
--- mcp-mcdev/net/minecraft/src/WorldServer.java	2012-11-29 21:13:54.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldServer.java	2012-11-29 21:40:33.000000000 -0800
@@ -11,6 +11,7 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.src.BiomeGenBase;
 import net.minecraft.src.Block;
+import net.minecraft.src.BlockContainer;
 import net.minecraft.src.BlockEventData;
 import net.minecraft.src.Chunk;
 import net.minecraft.src.ChunkCoordIntPair;
@@ -21,12 +22,10 @@
 import net.minecraft.src.CrashReportCategory;
 import net.minecraft.src.Empty3;
 import net.minecraft.src.Entity;
-import net.minecraft.src.EntityAnimal;
 import net.minecraft.src.EntityLightningBolt;
 import net.minecraft.src.EntityPlayer;
 import net.minecraft.src.EntityPlayerMP;
 import net.minecraft.src.EntityTracker;
-import net.minecraft.src.EntityWaterMob;
 import net.minecraft.src.EnumCreatureType;
 import net.minecraft.src.Explosion;
 import net.minecraft.src.ExtendedBlockStorage;
@@ -38,6 +37,7 @@
 import net.minecraft.src.IntHashMap;
 import net.minecraft.src.Item;
 import net.minecraft.src.MathHelper;
+import net.minecraft.src.MinecraftException;
 import net.minecraft.src.NextTickListEntry;
 import net.minecraft.src.Packet38EntityStatus;
 import net.minecraft.src.Packet54PlayNoteBlock;
@@ -52,6 +52,14 @@
 import net.minecraft.src.SpawnerAnimals;
 import net.minecraft.src.Teleporter;
 import net.minecraft.src.TileEntity;
+import net.minecraft.src.TileEntityChest;
+import net.minecraft.src.TileEntityDispenser;
+import net.minecraft.src.TileEntityEnderChest;
+import net.minecraft.src.TileEntityFurnace;
+import net.minecraft.src.TileEntityMobSpawner;
+import net.minecraft.src.TileEntityNote;
+import net.minecraft.src.TileEntityRecordPlayer;
+import net.minecraft.src.TileEntitySign;
 import net.minecraft.src.Vec3;
 import net.minecraft.src.WeightedRandom;
 import net.minecraft.src.WeightedRandomChestContent;
@@ -59,12 +67,29 @@
 import net.minecraft.src.WorldChunkManager;
 import net.minecraft.src.WorldGeneratorBonusChest;
 import net.minecraft.src.WorldProvider;
+import net.minecraft.src.WorldProviderEnd;
+import net.minecraft.src.WorldProviderHell;
 import net.minecraft.src.WorldSettings;
+import org.bukkit.BlockChangeDelegate;
+import org.bukkit.Location;
+import org.bukkit.World.Environment;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.generator.CustomChunkGenerator;
+import org.bukkit.craftbukkit.generator.NetherChunkGenerator;
+import org.bukkit.craftbukkit.generator.NormalChunkGenerator;
+import org.bukkit.craftbukkit.generator.SkyLandsChunkGenerator;
+import org.bukkit.craftbukkit.util.LongHash;
+import org.bukkit.entity.LightningStrike;
+import org.bukkit.event.block.BlockFormEvent;
+import org.bukkit.event.weather.LightningStrikeEvent;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
+import org.bukkit.generator.ChunkGenerator;
 
-public class WorldServer extends World {
+public class WorldServer extends World implements BlockChangeDelegate {
 
    private final MinecraftServer mcServer;
-   private final EntityTracker theEntityTracker;
+   public EntityTracker theEntityTracker;
    private final PlayerManager thePlayerManager;
    private Set field_73064_N;
    private TreeSet pendingTickListEntries;
@@ -77,10 +102,13 @@
    private int blockEventCacheIndex = 0;
    private static final WeightedRandomChestContent[] bonusChestContent = new WeightedRandomChestContent[]{new WeightedRandomChestContent(Item.stick.shiftedIndex, 0, 1, 3, 10), new WeightedRandomChestContent(Block.planks.blockID, 0, 1, 3, 10), new WeightedRandomChestContent(Block.wood.blockID, 0, 1, 3, 10), new WeightedRandomChestContent(Item.axeStone.shiftedIndex, 0, 1, 1, 3), new WeightedRandomChestContent(Item.axeWood.shiftedIndex, 0, 1, 1, 5), new WeightedRandomChestContent(Item.pickaxeStone.shiftedIndex, 0, 1, 1, 3), new WeightedRandomChestContent(Item.pickaxeWood.shiftedIndex, 0, 1, 1, 5), new WeightedRandomChestContent(Item.appleRed.shiftedIndex, 0, 2, 3, 5), new WeightedRandomChestContent(Item.bread.shiftedIndex, 0, 2, 3, 3)};
    private IntHashMap entityIdMap;
+   public final int dimension;
 
 
-   public WorldServer(MinecraftServer var1, ISaveHandler var2, String var3, int var4, WorldSettings var5, Profiler var6) {
-      super(var2, var3, var5, WorldProvider.getProviderForDimension(var4), var6);
+   public WorldServer(MinecraftServer var1, ISaveHandler var2, String var3, int var4, WorldSettings var5, Profiler var6, Environment var7, ChunkGenerator var8) {
+      super(var2, var3, var5, WorldProvider.getProviderForDimension(var7.getId()), var6, var8, var7);
+      this.dimension = var4;
+      this.pvpMode = var1.isPVPEnabled();
       this.mcServer = var1;
       this.theEntityTracker = new EntityTracker(this);
       this.thePlayerManager = new PlayerManager(this, var1.getConfigurationManager().getViewDistance());
@@ -99,6 +127,60 @@
       this.field_85177_Q = new Teleporter(this);
    }
 
+   public TileEntity getTileEntity(int var1, int var2, int var3) {
+      TileEntity var4 = super.getBlockTileEntity(var1, var2, var3);
+      int var5 = this.getBlockId(var1, var2, var3);
+      if(var5 == Block.chest.blockID) {
+         if(!(var4 instanceof TileEntityChest)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(var5 == Block.stoneOvenIdle.blockID) {
+         if(!(var4 instanceof TileEntityFurnace)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(var5 == Block.dispenser.blockID) {
+         if(!(var4 instanceof TileEntityDispenser)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(var5 == Block.jukebox.blockID) {
+         if(!(var4 instanceof TileEntityRecordPlayer)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(var5 == Block.music.blockID) {
+         if(!(var4 instanceof TileEntityNote)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(var5 == Block.mobSpawner.blockID) {
+         if(!(var4 instanceof TileEntityMobSpawner)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(var5 != Block.signPost.blockID && var5 != Block.signWall.blockID) {
+         if(var5 == Block.enderChest.blockID && !(var4 instanceof TileEntityEnderChest)) {
+            var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+         }
+      } else if(!(var4 instanceof TileEntitySign)) {
+         var4 = this.fixTileEntity(var1, var2, var3, var5, var4);
+      }
+
+      return var4;
+   }
+
+   private TileEntity fixTileEntity(int var1, int var2, int var3, int var4, TileEntity var5) {
+      this.getServer().getLogger().severe("Block at " + var1 + "," + var2 + "," + var3 + " is " + org.bukkit.Material.getMaterial(var4).toString() + " but has " + var5 + ". " + "Bukkit will attempt to fix this, but there may be additional damage that we cannot recover.");
+      if(Block.blocksList[var4] instanceof BlockContainer) {
+         TileEntity var6 = ((BlockContainer)Block.blocksList[var4]).createNewTileEntity(this);
+         this.setBlockTileEntity(var1, var2, var3, var6);
+         return var6;
+      } else {
+         this.getServer().getLogger().severe("Don\'t know how to fix for this type... Can\'t do anything! :(");
+         return var5;
+      }
+   }
+
+   private boolean canSpawn(int var1, int var2) {
+      return this.generator != null?this.generator.canSpawn(this.getWorld(), var1, var2):this.provider.canCoordinateBeSpawn(var1, var2);
+   }
+
    public void tick() {
       super.tick();
       if(this.getWorldInfo().isHardcoreModeEnabled() && this.difficultySetting < 3) {
@@ -120,15 +202,16 @@
       }
 
       this.theProfiler.startSection("mobSpawner");
-      if(this.getGameRules().getGameRuleBooleanValue("doMobSpawning")) {
-         SpawnerAnimals.findChunksForSpawning(this, this.spawnHostileMobs, this.spawnPeacefulMobs, this.worldInfo.getWorldTotalTime() % 400L == 0L);
+      long var4 = this.worldInfo.getWorldTotalTime();
+      if(this.getGameRules().getGameRuleBooleanValue("doMobSpawning") && (this.spawnHostileMobs || this.spawnPeacefulMobs) && this instanceof WorldServer && this.playerEntities.size() > 0) {
+         SpawnerAnimals.findChunksForSpawning(this, this.spawnHostileMobs && this.ticksPerMonsterSpawns != 0L && var4 % this.ticksPerMonsterSpawns == 0L, this.spawnPeacefulMobs && this.ticksPerAnimalSpawns != 0L && var4 % this.ticksPerAnimalSpawns == 0L, this.worldInfo.getWorldTotalTime() % 400L == 0L);
       }
 
       this.theProfiler.endStartSection("chunkSource");
       this.chunkProvider.unload100OldestChunks();
-      int var4 = this.calculateSkylightSubtracted(1.0F);
-      if(var4 != this.skylightSubtracted) {
-         this.skylightSubtracted = var4;
+      int var6 = this.calculateSkylightSubtracted(1.0F);
+      if(var6 != this.skylightSubtracted) {
+         this.skylightSubtracted = var6;
       }
 
       this.sendAndApplyBlockEvents();
@@ -160,7 +243,7 @@
 
       while(var1.hasNext()) {
          EntityPlayer var2 = (EntityPlayer)var1.next();
-         if(!var2.isPlayerSleeping()) {
+         if(!var2.isPlayerSleeping() && !var2.fauxSleeping) {
             this.allPlayersSleeping = false;
             break;
          }
@@ -183,24 +266,38 @@
    }
 
    private void resetRainAndThunder() {
-      this.worldInfo.setRainTime(0);
-      this.worldInfo.setRaining(false);
-      this.worldInfo.setThunderTime(0);
-      this.worldInfo.setThundering(false);
+      WeatherChangeEvent var1 = new WeatherChangeEvent(this.getWorld(), false);
+      this.getServer().getPluginManager().callEvent(var1);
+      ThunderChangeEvent var2 = new ThunderChangeEvent(this.getWorld(), false);
+      this.getServer().getPluginManager().callEvent(var2);
+      if(!var1.isCancelled()) {
+         this.worldInfo.setRainTime(0);
+         this.worldInfo.setRaining(false);
+      }
+
+      if(!var2.isCancelled()) {
+         this.worldInfo.setThunderTime(0);
+         this.worldInfo.setThundering(false);
+      }
+
    }
 
    public boolean areAllPlayersAsleep() {
       if(this.allPlayersSleeping && !this.isRemote) {
          Iterator var1 = this.playerEntities.iterator();
+         boolean var2 = false;
 
-         EntityPlayer var2;
+         EntityPlayer var3;
          do {
             if(!var1.hasNext()) {
-               return true;
+               return var2;
             }
 
-            var2 = (EntityPlayer)var1.next();
-         } while(var2.isPlayerFullyAsleep());
+            var3 = (EntityPlayer)var1.next();
+            if(var3.isPlayerFullyAsleep()) {
+               var2 = true;
+            }
+         } while(var3.isPlayerFullyAsleep() || var3.fauxSleeping);
 
          return false;
       } else {
@@ -212,80 +309,97 @@
       super.tickBlocksAndAmbiance();
       int var1 = 0;
       int var2 = 0;
-      Iterator var3 = this.activeChunkSet.iterator();
+      long[] var3 = this.activeChunkSet.popAll();
+      int var4 = var3.length;
 
-      while(var3.hasNext()) {
-         ChunkCoordIntPair var4 = (ChunkCoordIntPair)var3.next();
-         int var5 = var4.chunkXPos * 16;
-         int var6 = var4.chunkZPos * 16;
+      for(int var5 = 0; var5 < var4; ++var5) {
+         long var6 = var3[var5];
+         int var8 = LongHash.msw(var6);
+         int var9 = LongHash.lsw(var6);
+         int var10 = var8 * 16;
+         int var11 = var9 * 16;
          this.theProfiler.startSection("getChunk");
-         Chunk var7 = this.getChunkFromChunkCoords(var4.chunkXPos, var4.chunkZPos);
-         this.moodSoundAndLightCheck(var5, var6, var7);
+         Chunk var12 = this.getChunkFromChunkCoords(var8, var9);
+         this.moodSoundAndLightCheck(var10, var11, var12);
          this.theProfiler.endStartSection("tickChunk");
-         var7.updateSkylight();
+         var12.updateSkylight();
          this.theProfiler.endStartSection("thunder");
-         int var8;
-         int var9;
-         int var10;
-         int var11;
+         int var13;
+         int var14;
+         int var15;
+         int var16;
          if(this.rand.nextInt(100000) == 0 && this.isRaining() && this.isThundering()) {
             this.updateLCG = this.updateLCG * 3 + 1013904223;
-            var8 = this.updateLCG >> 2;
-            var9 = var5 + (var8 & 15);
-            var10 = var6 + (var8 >> 8 & 15);
-            var11 = this.getPrecipitationHeight(var9, var10);
-            if(this.canLightningStrikeAt(var9, var11, var10)) {
-               this.addWeatherEffect(new EntityLightningBolt(this, (double)var9, (double)var11, (double)var10));
+            var13 = this.updateLCG >> 2;
+            var14 = var10 + (var13 & 15);
+            var15 = var11 + (var13 >> 8 & 15);
+            var16 = this.getPrecipitationHeight(var14, var15);
+            if(this.canLightningStrikeAt(var14, var16, var15)) {
+               this.addWeatherEffect(new EntityLightningBolt(this, (double)var14, (double)var16, (double)var15));
                this.lastLightningBolt = 2;
             }
          }
 
          this.theProfiler.endStartSection("iceandsnow");
-         int var13;
+         int var19;
          if(this.rand.nextInt(16) == 0) {
             this.updateLCG = this.updateLCG * 3 + 1013904223;
-            var8 = this.updateLCG >> 2;
-            var9 = var8 & 15;
-            var10 = var8 >> 8 & 15;
-            var11 = this.getPrecipitationHeight(var9 + var5, var10 + var6);
-            if(this.isBlockFreezableNaturally(var9 + var5, var11 - 1, var10 + var6)) {
-               this.setBlockWithNotify(var9 + var5, var11 - 1, var10 + var6, Block.ice.blockID);
+            var13 = this.updateLCG >> 2;
+            var14 = var13 & 15;
+            var15 = var13 >> 8 & 15;
+            var16 = this.getPrecipitationHeight(var14 + var10, var15 + var11);
+            BlockState var17;
+            BlockFormEvent var18;
+            if(this.isBlockFreezableNaturally(var14 + var10, var16 - 1, var15 + var11)) {
+               var17 = this.getWorld().getBlockAt(var14 + var10, var16 - 1, var15 + var11).getState();
+               var17.setTypeId(Block.ice.blockID);
+               var18 = new BlockFormEvent(var17.getBlock(), var17);
+               this.getServer().getPluginManager().callEvent(var18);
+               if(!var18.isCancelled()) {
+                  var17.update(true);
+               }
             }
 
-            if(this.isRaining() && this.canSnowAt(var9 + var5, var11, var10 + var6)) {
-               this.setBlockWithNotify(var9 + var5, var11, var10 + var6, Block.snow.blockID);
+            if(this.isRaining() && this.canSnowAt(var14 + var10, var16, var15 + var11)) {
+               var17 = this.getWorld().getBlockAt(var14 + var10, var16, var15 + var11).getState();
+               var17.setTypeId(Block.snow.blockID);
+               var18 = new BlockFormEvent(var17.getBlock(), var17);
+               this.getServer().getPluginManager().callEvent(var18);
+               if(!var18.isCancelled()) {
+                  var17.update(true);
+               }
             }
 
             if(this.isRaining()) {
-               BiomeGenBase var12 = this.getBiomeGenForCoords(var9 + var5, var10 + var6);
-               if(var12.canSpawnLightningBolt()) {
-                  var13 = this.getBlockId(var9 + var5, var11 - 1, var10 + var6);
-                  if(var13 != 0) {
-                     Block.blocksList[var13].fillWithRain(this, var9 + var5, var11 - 1, var10 + var6);
+               BiomeGenBase var27 = this.getBiomeGenForCoords(var14 + var10, var15 + var11);
+               if(var27.canSpawnLightningBolt()) {
+                  var19 = this.getBlockId(var14 + var10, var16 - 1, var15 + var11);
+                  if(var19 != 0) {
+                     Block.blocksList[var19].fillWithRain(this, var14 + var10, var16 - 1, var15 + var11);
                   }
                }
             }
          }
 
          this.theProfiler.endStartSection("tickTiles");
-         ExtendedBlockStorage[] var19 = var7.getBlockStorageArray();
-         var9 = var19.length;
+         ExtendedBlockStorage[] var26 = var12.getBlockStorageArray();
+         var14 = var26.length;
 
-         for(var10 = 0; var10 < var9; ++var10) {
-            ExtendedBlockStorage var21 = var19[var10];
-            if(var21 != null && var21.getNeedsRandomTick()) {
+         for(var15 = 0; var15 < var14; ++var15) {
+            ExtendedBlockStorage var28 = var26[var15];
+            if(var28 != null && var28.getNeedsRandomTick()) {
                for(int var20 = 0; var20 < 3; ++var20) {
                   this.updateLCG = this.updateLCG * 3 + 1013904223;
-                  var13 = this.updateLCG >> 2;
-                  int var14 = var13 & 15;
-                  int var15 = var13 >> 8 & 15;
-                  int var16 = var13 >> 16 & 15;
-                  int var17 = var21.getExtBlockID(var14, var16, var15);
+                  var19 = this.updateLCG >> 2;
+                  int var21 = var19 & 15;
+                  int var22 = var19 >> 8 & 15;
+                  int var23 = var19 >> 16 & 15;
+                  int var24 = var28.getExtBlockID(var21, var23, var22);
                   ++var2;
-                  Block var18 = Block.blocksList[var17];
-                  if(var18 != null && var18.getTickRandomly()) {
+                  Block var25 = Block.blocksList[var24];
+                  if(var25 != null && var25.getTickRandomly()) {
                      ++var1;
-                     var18.updateTick(this, var14 + var5, var16 + var21.getYLocation(), var15 + var6, this.rand);
+                     var25.updateTick(this, var21 + var10, var23 + var28.getYLocation(), var22 + var11, this.rand);
                   }
                }
             }
@@ -346,14 +460,7 @@
    }
 
    public void updateEntities() {
-      if(this.playerEntities.isEmpty()) {
-         if(this.updateEntityTick++ >= 1200) {
-            return;
-         }
-      } else {
-         this.resetUpdateEntityTick();
-      }
-
+      this.resetUpdateEntityTick();
       super.updateEntities();
    }
 
@@ -367,7 +474,11 @@
          throw new IllegalStateException("TickNextTick list out of synch");
       } else {
          if(var2 > 1000) {
-            var2 = 1000;
+            if(var2 > 20000) {
+               var2 /= 20;
+            } else {
+               var2 = 1000;
+            }
          }
 
          for(int var3 = 0; var3 < var2; ++var3) {
@@ -435,10 +546,6 @@
    }
 
    public void updateEntityWithOptionalForce(Entity var1, boolean var2) {
-      if(!this.mcServer.getCanSpawnAnimals() && (var1 instanceof EntityAnimal || var1 instanceof EntityWaterMob)) {
-         var1.setDead();
-      }
-
       if(!this.mcServer.getCanSpawnNPCs() && var1 instanceof INpc) {
          var1.setDead();
       }
@@ -455,15 +562,27 @@
 
    protected IChunkProvider createChunkProvider() {
       IChunkLoader var1 = this.saveHandler.getChunkLoader(this.provider);
-      this.theChunkProviderServer = new ChunkProviderServer(this, var1, this.provider.createChunkGenerator());
+      Object var2;
+      if(this.generator != null) {
+         var2 = new CustomChunkGenerator(this, this.getSeed(), this.generator);
+      } else if(this.provider instanceof WorldProviderHell) {
+         var2 = new NetherChunkGenerator(this, this.getSeed());
+      } else if(this.provider instanceof WorldProviderEnd) {
+         var2 = new SkyLandsChunkGenerator(this, this.getSeed());
+      } else {
+         var2 = new NormalChunkGenerator(this, this.getSeed());
+      }
+
+      this.theChunkProviderServer = new ChunkProviderServer(this, var1, (IChunkProvider)var2);
       return this.theChunkProviderServer;
    }
 
    public List getTileEntityList(int var1, int var2, int var3, int var4, int var5, int var6) {
       ArrayList var7 = new ArrayList();
+      Iterator var8 = this.loadedTileEntityList.iterator();
 
-      for(int var8 = 0; var8 < this.loadedTileEntityList.size(); ++var8) {
-         TileEntity var9 = (TileEntity)this.loadedTileEntityList.get(var8);
+      while(var8.hasNext()) {
+         TileEntity var9 = (TileEntity)var8.next();
          if(var9.xCoord >= var1 && var9.yCoord >= var2 && var9.zCoord >= var3 && var9.xCoord < var4 && var9.yCoord < var5 && var9.zCoord < var6) {
             var7.add(var9);
          }
@@ -479,7 +598,7 @@
          var6 = var5;
       }
 
-      return var6 > 16 || this.mcServer.getConfigurationManager().areCommandsAllowed(var1.username) || this.mcServer.isSinglePlayer();
+      return var6 > this.getServer().getSpawnRadius() || this.mcServer.getConfigurationManager().areCommandsAllowed(var1.username) || this.mcServer.isSinglePlayer();
    }
 
    protected void initialize(WorldSettings var1) {
@@ -511,6 +630,20 @@
          int var6 = 0;
          int var7 = this.provider.getAverageGroundLevel();
          int var8 = 0;
+         if(this.generator != null) {
+            Random var9 = new Random(this.getSeed());
+            Location var10 = this.generator.getFixedSpawnLocation(this.getWorld(), var9);
+            if(var10 != null) {
+               if(var10.getWorld() != this.getWorld()) {
+                  throw new IllegalStateException("Cannot set spawn point for " + this.worldInfo.getWorldName() + " to be in another world (" + var10.getWorld().getName() + ")");
+               }
+
+               this.worldInfo.setSpawnPosition(var10.getBlockX(), var10.getBlockY(), var10.getBlockZ());
+               this.findingSpawnPoint = false;
+               return;
+            }
+         }
+
          if(var5 != null) {
             var6 = var5.x;
             var8 = var5.z;
@@ -518,13 +651,13 @@
             System.out.println("Unable to find spawn biome");
          }
 
-         int var9 = 0;
+         int var11 = 0;
 
-         while(!this.provider.canCoordinateBeSpawn(var6, var8)) {
+         while(!this.canSpawn(var6, var8)) {
             var6 += var4.nextInt(64) - var4.nextInt(64);
             var8 += var4.nextInt(64) - var4.nextInt(64);
-            ++var9;
-            if(var9 == 1000) {
+            ++var11;
+            if(var11 == 1000) {
                break;
             }
          }
@@ -534,8 +667,8 @@
          if(var1.isBonusChestEnabled()) {
             this.createBonusChest();
          }
-
       }
+
    }
 
    protected void createBonusChest() {
@@ -556,7 +689,7 @@
       return this.provider.getEntrancePortalLocation();
    }
 
-   public void saveAllChunks(boolean var1, IProgressUpdate var2) {
+   public void saveAllChunks(boolean var1, IProgressUpdate var2) throws MinecraftException {
       if(this.chunkProvider.canSave()) {
          if(var2 != null) {
             var2.displaySavingString("Saving level");
@@ -569,9 +702,10 @@
 
          this.chunkProvider.saveChunks(var1, var2);
       }
+
    }
 
-   protected void saveLevel() {
+   protected void saveLevel() throws MinecraftException {
       this.checkSessionLock();
       this.saveHandler.saveWorldInfoWithPlayer(this.worldInfo, this.mcServer.getConfigurationManager().getTagsFromLastWrite());
       this.mapStorage.saveAllData();
@@ -606,8 +740,12 @@
    }
 
    public boolean addWeatherEffect(Entity var1) {
-      if(super.addWeatherEffect(var1)) {
-         this.mcServer.getConfigurationManager().sendPacketToPlayersAroundPoint(var1.posX, var1.posY, var1.posZ, 512.0D, this.provider.dimensionId, new Packet71Weather(var1));
+      LightningStrikeEvent var2 = new LightningStrikeEvent(this.getWorld(), (LightningStrike)var1.getBukkitEntity());
+      this.getServer().getPluginManager().callEvent(var2);
+      if(var2.isCancelled()) {
+         return false;
+      } else if(super.addWeatherEffect(var1)) {
+         this.mcServer.getConfigurationManager().sendPacketToPlayersAroundPoint(var1.posX, var1.posY, var1.posZ, 512.0D, this.dimension, new Packet71Weather(var1));
          return true;
       } else {
          return false;
@@ -620,41 +758,39 @@
    }
 
    public Explosion newExplosion(Entity var1, double var2, double var4, double var6, float var8, boolean var9, boolean var10) {
-      Explosion var11 = new Explosion(this, var1, var2, var4, var6, var8);
-      var11.isFlaming = var9;
-      var11.isSmoking = var10;
-      var11.doExplosionA();
-      var11.doExplosionB(false);
-      if(!var10) {
-         var11.affectedBlockPositions.clear();
-      }
+      Explosion var11 = super.newExplosion(var1, var2, var4, var6, var8, var9, var10);
+      if(var11.wasCanceled) {
+         return var11;
+      } else {
+         if(!var10) {
+            var11.affectedBlockPositions.clear();
+         }
 
-      Iterator var12 = this.playerEntities.iterator();
+         Iterator var12 = this.playerEntities.iterator();
 
-      while(var12.hasNext()) {
-         EntityPlayer var13 = (EntityPlayer)var12.next();
-         if(var13.getDistanceSq(var2, var4, var6) < 4096.0D) {
-            ((EntityPlayerMP)var13).playerNetServerHandler.sendPacket(new Packet60Explosion(var2, var4, var6, var8, var11.affectedBlockPositions, (Vec3)var11.func_77277_b().get(var13)));
+         while(var12.hasNext()) {
+            EntityPlayer var13 = (EntityPlayer)var12.next();
+            if(var13.getDistanceSq(var2, var4, var6) < 4096.0D) {
+               ((EntityPlayerMP)var13).playerNetServerHandler.sendPacket(new Packet60Explosion(var2, var4, var6, var8, var11.affectedBlockPositions, (Vec3)var11.func_77277_b().get(var13)));
+            }
          }
-      }
 
-      return var11;
+         return var11;
+      }
    }
 
    public void addBlockEvent(int var1, int var2, int var3, int var4, int var5, int var6) {
       BlockEventData var7 = new BlockEventData(var1, var2, var3, var4, var5, var6);
       Iterator var8 = this.blockEventCache[this.blockEventCacheIndex].iterator();
 
-      BlockEventData var9;
-      do {
-         if(!var8.hasNext()) {
-            this.blockEventCache[this.blockEventCacheIndex].add(var7);
+      while(var8.hasNext()) {
+         BlockEventData var9 = (BlockEventData)var8.next();
+         if(var9.equals(var7)) {
             return;
          }
+      }
 
-         var9 = (BlockEventData)var8.next();
-      } while(!var9.equals(var7));
-
+      this.blockEventCache[this.blockEventCacheIndex].add(var7);
    }
 
    private void sendAndApplyBlockEvents() {
@@ -666,7 +802,7 @@
          while(var2.hasNext()) {
             BlockEventData var3 = (BlockEventData)var2.next();
             if(this.onBlockEventReceived(var3)) {
-               this.mcServer.getConfigurationManager().sendPacketToPlayersAroundPoint((double)var3.getX(), (double)var3.getY(), (double)var3.getZ(), 64.0D, this.provider.dimensionId, new Packet54PlayNoteBlock(var3.getX(), var3.getY(), var3.getZ(), var3.getBlockID(), var3.getEventID(), var3.getEventParameter()));
+               this.mcServer.getConfigurationManager().sendPacketToPlayersAroundPoint((double)var3.getX(), (double)var3.getY(), (double)var3.getZ(), 64.0D, this.dimension, new Packet54PlayNoteBlock(var3.getX(), var3.getY(), var3.getZ(), var3.getBlockID(), var3.getEventID(), var3.getEventParameter()));
             }
          }
 
@@ -693,10 +829,10 @@
       boolean var1 = this.isRaining();
       super.updateWeather();
       if(var1 != this.isRaining()) {
-         if(var1) {
-            this.mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet70GameEvent(2, 0));
-         } else {
-            this.mcServer.getConfigurationManager().sendPacketToAllPlayers(new Packet70GameEvent(1, 0));
+         for(int var2 = 0; var2 < this.playerEntities.size(); ++var2) {
+            if(((EntityPlayerMP)this.playerEntities.get(var2)).worldObj == this) {
+               ((EntityPlayerMP)this.playerEntities.get(var2)).playerNetServerHandler.sendPacket(new Packet70GameEvent(var1?2:1, 0));
+            }
          }
       }
 
Binary files mcp-mcdev/net/minecraft/src/WorldServerMulti.class and mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldServerMulti.class differ
diff -ur mcp-mcdev/net/minecraft/src/WorldServerMulti.java mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldServerMulti.java
--- mcp-mcdev/net/minecraft/src/WorldServerMulti.java	2012-11-29 21:13:51.000000000 -0800
+++ mcp-stripped-craftbukkit-1.4.2-R0.2/net/minecraft/src/WorldServerMulti.java	2012-11-29 21:40:29.000000000 -0800
@@ -1,19 +1,17 @@
 package net.minecraft.src;
 
 import net.minecraft.server.MinecraftServer;
-import net.minecraft.src.DerivedWorldInfo;
 import net.minecraft.src.ISaveHandler;
 import net.minecraft.src.Profiler;
 import net.minecraft.src.WorldServer;
 import net.minecraft.src.WorldSettings;
+import org.bukkit.World.Environment;
+import org.bukkit.generator.ChunkGenerator;
 
 public class WorldServerMulti extends WorldServer {
 
-   public WorldServerMulti(MinecraftServer var1, ISaveHandler var2, String var3, int var4, WorldSettings var5, WorldServer var6, Profiler var7) {
-      super(var1, var2, var3, var4, var5, var7);
+   public WorldServerMulti(MinecraftServer var1, ISaveHandler var2, String var3, int var4, WorldSettings var5, WorldServer var6, Profiler var7, Environment var8, ChunkGenerator var9) {
+      super(var1, var2, var3, var4, var5, var7, var8, var9);
       this.mapStorage = var6.mapStorage;
-      this.worldInfo = new DerivedWorldInfo(var6.getWorldInfo());
    }
-
-   protected void saveLevel() {}
 }
